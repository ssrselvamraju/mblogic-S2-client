<?xml version="1.0" ?><!DOCTYPE html  PUBLIC '-//W3C//DTD XHTML 1.0 Strict//EN'  'http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd'><html xmlns="http://www.w3.org/1999/xhtml" xmlns:svg="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

<head>
<link href="pageicon.png" rel="icon" type="image/png"/>

<!-- For a top menu screen with no header. 
	Version 09-Jan-2010. -->

<!-- Change this title to something appropriate. -->
<title id="MBT_ClientName_Title">Default</title>

<!-- General page layout style sheet. -->
<link href="pagelayout.css" rel="stylesheet" type="text/css"/>
<!-- Pagfe layout style sheet. This file contains the size and layout specific 
	settings. Change this to import the correct CSS file for the SVG template 
	you are using. -->
<link href="pagelayout_template.css" rel="stylesheet" type="text/css"/>


<!-- Style sheet to control graphic buttons. -->
<link href="hmibuttons.css" rel="stylesheet" type="text/css"/>

<!-- JSON parser. -->
<script src="json2.js" type="text/javascript"/>
<!-- HMI Protocol functions. -->
<script src="libhmiclient2.js" type="text/javascript"/>
<!-- MBHMI Library. -->
<script src="libmbhmicontrols2.js" type="text/javascript"/>
<script src="libmbhmimisc.js" type="text/javascript"/>
<!-- MBHMI Library for events, alarms, and error display. -->
<script src="libmbevents.js" type="text/javascript"/>


<!-- Standard error and other message text definitions. -->
<script src="standardtexts.js" type="text/javascript"/>

<!-- The following files must be created by the user. 
	The file names can be changed if necessary. -->
<!-- Application configuration data. -->
<script src="clientconfigdata.js" type="text/javascript"/>
<!-- Message texts. -->
<script src="messagetexts.js" type="text/javascript"/>

</head>


<body onload="MBT_pageinit();">


<!-- This provides a container for the HTML elements so we can centre the contents. -->
<div id="MBT_HTMLContainer">

	<div id="MBT_TopHeader">
	<h1 class="pos_left">
		<!-- Include a logo here. -->
		<object data="pagelogo.png" width="170"/>
	</h1>

	<h1 class="pos_right" id="MBT_ClientName_Heading">
		Default
	</h1>

	</div>
	<!-- This is the standard nav bar. -->
	<div id="MBT_HTMLNavTop">
		<ul>
		<li><a onclick="MBT_HTMLSelect.SelectScreen('MBT_SVGScreen')">Main</a></li>
		<li><a onclick="MBT_HTMLSelect.SelectScreen('MBT_AlarmsScreen')">Alarms</a></li>
		<li><a onclick="MBT_HTMLSelect.SelectScreen('MBT_EventsScreen')">Events</a></li>
		<li><a onclick="MBT_HTMLSelect.SelectScreen('MBT_SystemStatusScreen')">Status</a></li>
		<li><a onclick="MBT_HTMLSelect.SelectScreen('MBT_HelpScreen')">Help</a></li>
		</ul>
	</div>



<!-- This sets the display styles for the standard HTML screens for pages with
	horizontal menus across the top. -->
<div id="MBT_HTMLScreensTop">

	<!-- ################################################################## -->
	<!-- Controls display of the main SVG screen. -->
	<div id="MBT_SVGScreen">
	<!-- Put main SVG content here -->



	<svg height="550" id="svg2445" inkscape:output_extension="org.inkscape.output.svg.inkscape" inkscape:version="0.48.0 r9654" sodipodi:docname="hmidemo.svg" sodipodi:version="0.32" version="1.0" width="850" xmlns="http://www.w3.org/2000/svg" xmlns:cc="http://creativecommons.org/ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" xmlns:mblogic="http://www.example.com/mblogic" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd" xmlns:svg="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
  <defs id="defs2447">
    <linearGradient id="linearGradient4801" inkscape:collect="always">
      <stop id="stop4803" offset="0" style="stop-color:#a0a0a0;stop-opacity:1;"/>
      <stop id="stop4805" offset="1" style="stop-color:#a0a0a0;stop-opacity:0;"/>
    </linearGradient>
    <inkscape:perspective id="perspective2453" inkscape:persp3d-origin="372.04724 : 350.78739 : 1" inkscape:vp_x="0 : 526.18109 : 1" inkscape:vp_y="0 : 1000 : 0" inkscape:vp_z="744.09448 : 526.18109 : 1" sodipodi:type="inkscape:persp3d"/>
    <filter id="MB_DropShadowFilter">
      <feGaussianBlur id="feGaussianBlur2995" stdDeviation="2"/>
    </filter>
    <linearGradient id="MB_GreenGradient" x1="1" x2="0" y1="1" y2="0">
      <stop id="stop2990" offset="50%" stop-color="green"/>
      <stop id="stop2992" offset="100%" stop-color="white"/>
    </linearGradient>
    <filter id="MB_DropShadowFilter-8">
      <feGaussianBlur id="feGaussianBlur3028" stdDeviation="2"/>
    </filter>
    <linearGradient gradientTransform="scale(1.6666667,0.6)" gradientUnits="userSpaceOnUse" id="MB_GreyGradient" x1="60" x2="0" y1="60" y2="0">
      <stop id="stop3023" offset="50%" stop-color="grey"/>
      <stop id="stop3025" offset="100%" stop-color="white"/>
    </linearGradient>
    <filter id="MB_DropShadowFilter-6">
      <feGaussianBlur id="feGaussianBlur3061" stdDeviation="2"/>
    </filter>
    <linearGradient gradientTransform="scale(1.6666667,0.6)" gradientUnits="userSpaceOnUse" id="MB_TanGradient" x1="60" x2="0" y1="60" y2="0">
      <stop id="stop3056" offset="50%" stop-color="tan"/>
      <stop id="stop3058" offset="100%" stop-color="white"/>
    </linearGradient>
    <filter id="MB_DropShadowFilter-2">
      <feGaussianBlur id="feGaussianBlur3094" stdDeviation="2"/>
    </filter>
    <linearGradient gradientTransform="scale(1.6666667,0.6)" gradientUnits="userSpaceOnUse" id="MB_YellowGradient" x1="60" x2="0" y1="60" y2="0">
      <stop id="stop3089" offset="50%" stop-color="yellow"/>
      <stop id="stop3091" offset="100%" stop-color="white"/>
    </linearGradient>
    <linearGradient id="MB_TankDecorate_Maroon" x1="1" x2="0" y1="1" y2="0">
      <stop id="stop3200" offset="0%" stop-color="maroon"/>
      <stop id="stop3202" offset="35%" stop-color="maroon"/>
      <stop id="stop3204" offset="100%" stop-color="white"/>
    </linearGradient>
    <linearGradient gradientTransform="scale(0.95380674,1.0484304)" gradientUnits="userSpaceOnUse" id="linearGradient3226" inkscape:collect="always" x1="263.15604" x2="-1.0484304" xlink:href="#MB_TankDecorate_Maroon" y1="275.65015" y2="11.445681"/>
    <linearGradient gradientTransform="scale(11.224972,0.08908708)" gradientUnits="userSpaceOnUse" id="linearGradient3228" inkscape:collect="always" x1="22.360857" x2="-0.089087081" xlink:href="#MB_TankDecorate_Maroon" y1="718.39822" y2="695.94827"/>
    <linearGradient gradientTransform="scale(11.224972,0.08908708)" gradientUnits="userSpaceOnUse" id="linearGradient3230" inkscape:collect="always" x1="22.360857" x2="-0.089087081" xlink:href="#MB_TankDecorate_Maroon" y1="2402.144" y2="2379.6941"/>
    <linearGradient gradientTransform="scale(0.95380674,1.0484304)" gradientUnits="userSpaceOnUse" id="linearGradient3232" inkscape:collect="always" x1="263.15604" x2="-1.0484304" xlink:href="#MB_TankDecorate_Maroon" y1="275.65015" y2="11.445681"/>
    <linearGradient id="MB_TankDecorate_Navy" x1="1" x2="0" y1="1" y2="0">
      <stop id="stop3239" offset="0%" stop-color="darkpurple"/>
      <stop id="stop3241" offset="35%" stop-color="navy"/>
      <stop id="stop3243" offset="100%" stop-color="white"/>
    </linearGradient>
    <linearGradient gradientTransform="scale(0.95380674,1.0484304)" gradientUnits="userSpaceOnUse" id="linearGradient3265" inkscape:collect="always" x1="263.15604" x2="-1.0484304" xlink:href="#MB_TankDecorate_Navy" y1="275.65015" y2="11.445681"/>
    <linearGradient gradientTransform="scale(11.224972,0.08908708)" gradientUnits="userSpaceOnUse" id="linearGradient3267" inkscape:collect="always" x1="22.360857" x2="-0.089087081" xlink:href="#MB_TankDecorate_Navy" y1="718.39822" y2="695.94827"/>
    <linearGradient gradientTransform="scale(11.224972,0.08908708)" gradientUnits="userSpaceOnUse" id="linearGradient3269" inkscape:collect="always" x1="22.360857" x2="-0.089087081" xlink:href="#MB_TankDecorate_Navy" y1="2402.144" y2="2379.6941"/>
    <linearGradient gradientTransform="scale(0.95380674,1.0484304)" gradientUnits="userSpaceOnUse" id="linearGradient3271" inkscape:collect="always" x1="263.15604" x2="-1.0484304" xlink:href="#MB_TankDecorate_Navy" y1="275.65015" y2="11.445681"/>
    <linearGradient id="MB_Column_RedGradient" x1="0" x2="0" y1="1" y2="0">
      <stop id="stop3278" offset="0%" stop-color="red"/>
      <stop id="stop3280" offset="10%" stop-color="red"/>
      <stop id="stop3282" offset="90%" stop-color="white"/>
      <stop id="stop3284" offset="100%" stop-color="white"/>
    </linearGradient>
    <linearGradient gradientTransform="scale(0.47861769,2.0893503)" gradientUnits="userSpaceOnUse" id="linearGradient3301" inkscape:collect="always" x1="-2.0893503" x2="-2.0893503" xlink:href="#MB_Column_RedGradient" y1="108.1676" y2="-0.47861769"/>
    <linearGradient gradientTransform="scale(0.47861769,2.0893503)" gradientUnits="userSpaceOnUse" id="linearGradient3303" inkscape:collect="always" x1="-2.0893503" x2="-2.0893503" xlink:href="#MB_Column_RedGradient" y1="108.1676" y2="-0.47861769"/>
    <linearGradient id="MB_Column_LimeGradient" x1="0" x2="0" y1="1" y2="0">
      <stop id="stop3310" offset="0%" stop-color="lime"/>
      <stop id="stop3312" offset="10%" stop-color="lime"/>
      <stop id="stop3314" offset="90%" stop-color="white"/>
      <stop id="stop3316" offset="100%" stop-color="white"/>
    </linearGradient>
    <linearGradient gradientTransform="scale(0.47861769,2.0893503)" gradientUnits="userSpaceOnUse" id="linearGradient3333" inkscape:collect="always" x1="-2.0893503" x2="-2.0893503" xlink:href="#MB_Column_LimeGradient" y1="108.1676" y2="-0.47861769"/>
    <linearGradient gradientTransform="scale(0.47861769,2.0893503)" gradientUnits="userSpaceOnUse" id="linearGradient3335" inkscape:collect="always" x1="-2.0893503" x2="-2.0893503" xlink:href="#MB_Column_LimeGradient" y1="108.1676" y2="-0.47861769"/>
    <linearGradient id="MB_OliveGradient" x1="1" x2="0" y1="1" y2="0">
      <stop id="stop3342" offset="50%" stop-color="olive"/>
      <stop id="stop3344" offset="100%" stop-color="white"/>
    </linearGradient>
    <linearGradient gradientTransform="scale(1.4142136,0.70710678)" gradientUnits="userSpaceOnUse" id="linearGradient3367" inkscape:collect="always" x1="56.568542" x2="0" xlink:href="#MB_OliveGradient" y1="113.13708" y2="56.568542"/>
    <linearGradient gradientUnits="userSpaceOnUse" id="linearGradient3369" inkscape:collect="always" x1="70" x2="10" xlink:href="#MB_OliveGradient" y1="70" y2="10"/>
    <linearGradient id="MB_RedGradient" x1="1" x2="0" y1="1" y2="0">
      <stop id="stop3376" offset="50%" stop-color="red"/>
      <stop id="stop3378" offset="100%" stop-color="white"/>
    </linearGradient>
    <linearGradient gradientUnits="userSpaceOnUse" id="linearGradient3438" inkscape:collect="always" x1="106" x2="4" xlink:href="#MB_RedGradient" y1="106" y2="4"/>
    <linearGradient gradientTransform="scale(0.66666667,1.5)" gradientUnits="userSpaceOnUse" id="linearGradient3440" inkscape:collect="always" x1="85.5" x2="79.5" xlink:href="#MB_RedGradient" y1="71.333333" y2="65.333333"/>
    <linearGradient gradientTransform="scale(0.66666667,1.5)" gradientUnits="userSpaceOnUse" id="linearGradient3442" inkscape:collect="always" x1="85.5" x2="79.5" xlink:href="#MB_RedGradient" y1="71.333333" y2="65.333333"/>
    <linearGradient gradientTransform="scale(0.66666667,1.5)" gradientUnits="userSpaceOnUse" id="linearGradient3444" inkscape:collect="always" x1="85.5" x2="79.5" xlink:href="#MB_RedGradient" y1="71.333333" y2="65.333333"/>
    <linearGradient gradientTransform="scale(0.66666667,1.5)" gradientUnits="userSpaceOnUse" id="linearGradient3446" inkscape:collect="always" x1="85.5" x2="79.5" xlink:href="#MB_RedGradient" y1="71.333333" y2="65.333333"/>
    <linearGradient gradientTransform="scale(0.66666667,1.5)" gradientUnits="userSpaceOnUse" id="linearGradient3448" inkscape:collect="always" x1="85.5" x2="79.5" xlink:href="#MB_RedGradient" y1="71.333333" y2="65.333333"/>
    <linearGradient gradientTransform="scale(0.66666667,1.5)" gradientUnits="userSpaceOnUse" id="linearGradient3450" inkscape:collect="always" x1="85.5" x2="79.5" xlink:href="#MB_RedGradient" y1="71.333333" y2="65.333333"/>
    <linearGradient gradientTransform="scale(0.66666667,1.5)" gradientUnits="userSpaceOnUse" id="linearGradient3452" inkscape:collect="always" x1="85.5" x2="79.5" xlink:href="#MB_RedGradient" y1="71.333333" y2="65.333333"/>
    <linearGradient gradientTransform="scale(0.66666667,1.5)" gradientUnits="userSpaceOnUse" id="linearGradient3454" inkscape:collect="always" x1="85.5" x2="79.5" xlink:href="#MB_RedGradient" y1="71.333333" y2="65.333333"/>
    <linearGradient gradientTransform="scale(0.66666667,1.5)" gradientUnits="userSpaceOnUse" id="linearGradient3456" inkscape:collect="always" x1="85.5" x2="79.5" xlink:href="#MB_RedGradient" y1="71.333333" y2="65.333333"/>
    <linearGradient gradientTransform="scale(0.66666667,1.5)" gradientUnits="userSpaceOnUse" id="linearGradient3458" inkscape:collect="always" x1="85.5" x2="79.5" xlink:href="#MB_RedGradient" y1="71.333333" y2="65.333333"/>
    <linearGradient gradientTransform="scale(0.66666667,1.5)" gradientUnits="userSpaceOnUse" id="linearGradient3460" inkscape:collect="always" x1="85.5" x2="79.5" xlink:href="#MB_RedGradient" y1="71.333333" y2="65.333333"/>
    <linearGradient gradientTransform="scale(0.66666667,1.5)" gradientUnits="userSpaceOnUse" id="linearGradient3462" inkscape:collect="always" x1="85.5" x2="79.5" xlink:href="#MB_RedGradient" y1="71.333333" y2="65.333333"/>
    <linearGradient gradientUnits="userSpaceOnUse" id="linearGradient3464" inkscape:collect="always" x1="107" x2="3" xlink:href="#MB_RedGradient" y1="107" y2="3"/>
    <linearGradient gradientUnits="userSpaceOnUse" id="linearGradient3466" inkscape:collect="always" x1="60.5" x2="49.5" xlink:href="#MB_RedGradient" y1="60.5" y2="49.5"/>
    <linearGradient gradientUnits="userSpaceOnUse" id="linearGradient3468" inkscape:collect="always" x1="111" x2="-1" xlink:href="#MB_RedGradient" y1="111" y2="-1"/>
    <linearGradient id="MB_LimeGradient" x1="1" x2="0" y1="1" y2="0">
      <stop id="stop3475" offset="50%" stop-color="lime"/>
      <stop id="stop3477" offset="100%" stop-color="white"/>
    </linearGradient>
    <linearGradient gradientTransform="scale(0.49236596,2.0310096)" gradientUnits="userSpaceOnUse" id="linearGradient3534" inkscape:collect="always" x1="73.116346" x2="8.1240384" xlink:href="#MB_LimeGradient" y1="66.961771" y2="1.9694639"/>
    <linearGradient gradientTransform="scale(4,0.25)" gradientUnits="userSpaceOnUse" id="linearGradient3536" inkscape:collect="always" x1="7.75" x2="-0.25" xlink:href="#MB_LimeGradient" y1="4" y2="-4"/>
    <linearGradient gradientTransform="scale(4,0.25)" gradientUnits="userSpaceOnUse" id="linearGradient3538" inkscape:collect="always" x1="7.75" x2="-0.25" xlink:href="#MB_LimeGradient" y1="44" y2="36"/>
    <linearGradient gradientTransform="scale(4,0.25)" gradientUnits="userSpaceOnUse" id="linearGradient3540" inkscape:collect="always" x1="7.75" x2="-0.25" xlink:href="#MB_LimeGradient" y1="84" y2="76"/>
    <linearGradient gradientTransform="scale(4,0.25)" gradientUnits="userSpaceOnUse" id="linearGradient3542" inkscape:collect="always" x1="7.75" x2="-0.25" xlink:href="#MB_LimeGradient" y1="124" y2="116"/>
    <linearGradient gradientTransform="scale(4,0.25)" gradientUnits="userSpaceOnUse" id="linearGradient3544" inkscape:collect="always" x1="7.75" x2="-0.25" xlink:href="#MB_LimeGradient" y1="164" y2="156"/>
    <linearGradient gradientTransform="scale(4,0.25)" gradientUnits="userSpaceOnUse" id="linearGradient3546" inkscape:collect="always" x1="7.75" x2="-0.25" xlink:href="#MB_LimeGradient" y1="204" y2="196"/>
    <linearGradient gradientTransform="scale(4,0.25)" gradientUnits="userSpaceOnUse" id="linearGradient3548" inkscape:collect="always" x1="7.75" x2="-0.25" xlink:href="#MB_LimeGradient" y1="244" y2="236"/>
    <linearGradient gradientTransform="scale(4,0.25)" gradientUnits="userSpaceOnUse" id="linearGradient3550" inkscape:collect="always" x1="7.75" x2="-0.25" xlink:href="#MB_LimeGradient" y1="284" y2="276"/>
    <linearGradient gradientTransform="scale(4,0.25)" gradientUnits="userSpaceOnUse" id="linearGradient3552" inkscape:collect="always" x1="7.75" x2="-0.25" xlink:href="#MB_LimeGradient" y1="324" y2="316"/>
    <linearGradient gradientTransform="scale(4,0.25)" gradientUnits="userSpaceOnUse" id="linearGradient3554" inkscape:collect="always" x1="7.75" x2="-0.25" xlink:href="#MB_LimeGradient" y1="364" y2="356"/>
    <linearGradient gradientTransform="scale(4,0.25)" gradientUnits="userSpaceOnUse" id="linearGradient3556" inkscape:collect="always" x1="7.75" x2="-0.25" xlink:href="#MB_LimeGradient" y1="404" y2="396"/>
    <linearGradient gradientTransform="scale(0.56011203,1.7853571)" gradientUnits="userSpaceOnUse" id="linearGradient3558" inkscape:collect="always" x1="55.34607" x2="-1.7853571" xlink:href="#MB_LimeGradient" y1="56.571315" y2="-0.56011203"/>
    <linearGradient gradientTransform="scale(0.33968311,2.9439203)" gradientUnits="userSpaceOnUse" id="linearGradient3560" inkscape:collect="always" x1="79.485848" x2="35.327043" xlink:href="#MB_LimeGradient" y1="45.85722" y2="1.6984156"/>
    <linearGradient gradientTransform="scale(0.55708601,1.7950549)" gradientUnits="userSpaceOnUse" id="linearGradient3562" inkscape:collect="always" x1="76.289835" x2="-4.4876373" xlink:href="#MB_LimeGradient" y1="79.384757" y2="-1.392715"/>
    <linearGradient id="MB_Column_IndigoGradient" x1="0" x2="0" y1="1" y2="0">
      <stop id="stop3595" offset="0%" stop-color="indigo"/>
      <stop id="stop3597" offset="10%" stop-color="indigo"/>
      <stop id="stop3599" offset="90%" stop-color="white"/>
      <stop id="stop3601" offset="100%" stop-color="white"/>
    </linearGradient>
    <linearGradient gradientTransform="scale(0.31622777,3.1622777)" gradientUnits="userSpaceOnUse" id="linearGradient3618" inkscape:collect="always" x1="0" x2="0" xlink:href="#MB_Column_IndigoGradient" y1="31.622777" y2="0"/>
    <linearGradient gradientTransform="scale(0.31622777,3.1622777)" gradientUnits="userSpaceOnUse" id="linearGradient3620" inkscape:collect="always" x1="0" x2="0" xlink:href="#MB_Column_IndigoGradient" y1="31.622777" y2="0"/>
    <linearGradient id="MB_DigitBezelGradient" x1="1" x2="0" y1="1" y2="0">
      <stop id="stop3725" offset="0%" stop-color="black"/>
      <stop id="stop3727" offset="100%" stop-color="whitesmoke"/>
    </linearGradient>
    <filter id="MB_DropShadowFilter-9">
      <feGaussianBlur id="feGaussianBlur3722" stdDeviation="2"/>
    </filter>
    <linearGradient id="MB_DigitBezelGradient-2" x1="1" x2="0" y1="1" y2="0">
      <stop id="stop3760" offset="0%" stop-color="black"/>
      <stop id="stop3762" offset="100%" stop-color="whitesmoke"/>
    </linearGradient>
    <filter id="MB_DropShadowFilter-63">
      <feGaussianBlur id="feGaussianBlur3757" stdDeviation="2"/>
    </filter>
    <linearGradient gradientTransform="scale(1.9364917,0.51639778)" gradientUnits="userSpaceOnUse" id="linearGradient3787" inkscape:collect="always" x1="77.459667" x2="0" xlink:href="#MB_DigitBezelGradient-2" y1="77.459667" y2="0"/>
    <linearGradient gradientTransform="scale(1.9932318,0.5016978)" gradientUnits="userSpaceOnUse" id="linearGradient3789" inkscape:collect="always" x1="74.502123" x2="0.7525467" xlink:href="#MB_DigitBezelGradient-2" y1="76.739424" y2="2.9898477"/>
    <linearGradient gradientTransform="scale(1.4142136,0.70710678)" gradientUnits="userSpaceOnUse" id="linearGradient3791" inkscape:collect="always" x1="56.568542" x2="0" xlink:href="#MB_DigitBezelGradient" y1="56.568542" y2="0"/>
    <linearGradient gradientTransform="scale(1.4425953,0.69319512)" gradientUnits="userSpaceOnUse" id="linearGradient3793" inkscape:collect="always" x1="54.415817" x2="1.0397927" xlink:href="#MB_DigitBezelGradient" y1="55.539917" y2="2.1638929"/>
    <filter id="MB_DropShadowFilter-7">
      <feGaussianBlur id="feGaussianBlur3861" stdDeviation="2"/>
    </filter>
    <linearGradient gradientUnits="userSpaceOnUse" id="MB_SilverGradient" x1="45" x2="-45" y1="45" y2="-45">
      <stop id="stop3856" offset="50%" stop-color="silver"/>
      <stop id="stop3858" offset="100%" stop-color="white"/>
    </linearGradient>
    <linearGradient id="MB_DigitBezelGradient-6" x1="1" x2="0" y1="1" y2="0">
      <stop id="stop3952" offset="0%" stop-color="black"/>
      <stop id="stop3954" offset="100%" stop-color="whitesmoke"/>
    </linearGradient>
    <filter id="MB_DropShadowFilter-4">
      <feGaussianBlur id="feGaussianBlur3949" stdDeviation="2"/>
    </filter>
    <linearGradient id="MB_DigitBezelGradient-7" x1="1" x2="0" y1="1" y2="0">
      <stop id="stop3987" offset="0%" stop-color="black"/>
      <stop id="stop3989" offset="100%" stop-color="whitesmoke"/>
    </linearGradient>
    <filter id="MB_DropShadowFilter-1">
      <feGaussianBlur id="feGaussianBlur3984" stdDeviation="2"/>
    </filter>
    <linearGradient gradientTransform="scale(1.0606602,0.94280904)" gradientUnits="userSpaceOnUse" id="linearGradient4014" inkscape:collect="always" x1="42.426407" x2="0" xlink:href="#MB_DigitBezelGradient-6" y1="42.426407" y2="0"/>
    <linearGradient gradientTransform="scale(1.0654272,0.93859064)" gradientUnits="userSpaceOnUse" id="linearGradient4016" inkscape:collect="always" x1="40.828693" x2="1.407886" xlink:href="#MB_DigitBezelGradient-6" y1="41.018948" y2="1.5981408"/>
    <linearGradient gradientTransform="scale(0.92295821,1.0834727)" gradientUnits="userSpaceOnUse" id="linearGradient4018" inkscape:collect="always" x1="49.839743" x2="0" xlink:href="#MB_DigitBezelGradient-7" y1="49.839743" y2="0"/>
    <linearGradient gradientTransform="scale(0.91822506,1.0890576)" gradientUnits="userSpaceOnUse" id="linearGradient4020" inkscape:collect="always" x1="48.463064" x2="1.6335864" xlink:href="#MB_DigitBezelGradient-7" y1="48.206815" y2="1.3773376"/>
    <linearGradient id="MB_YellowGradient-0" x1="1" x2="0" y1="1" y2="0">
      <stop id="stop4055" offset="50%" stop-color="yellow"/>
      <stop id="stop4057" offset="100%" stop-color="white"/>
    </linearGradient>
    <linearGradient id="MB_PurpleGradient" x1="1" x2="0" y1="1" y2="0">
      <stop id="stop4083" offset="50%" stop-color="purple"/>
      <stop id="stop4085" offset="100%" stop-color="white"/>
    </linearGradient>
    <linearGradient gradientTransform="scale(3.8729833,0.25819889)" gradientUnits="userSpaceOnUse" id="linearGradient4106" inkscape:collect="always" x1="11.489851" x2="-0.12909944" xlink:href="#MB_YellowGradient-0" y1="164.60179" y2="152.98284"/>
    <linearGradient gradientTransform="scale(0.76249285,1.3114877)" gradientUnits="userSpaceOnUse" id="linearGradient4108" inkscape:collect="always" x1="58.361203" x2="25.57401" xlink:href="#MB_YellowGradient-0" y1="32.405946" y2="-0.38124643"/>
    <linearGradient gradientUnits="userSpaceOnUse" id="linearGradient4110" inkscape:collect="always" x1="40.5" x2="-0.5" xlink:href="#MB_YellowGradient-0" y1="40.5" y2="-0.5"/>
    <linearGradient gradientTransform="scale(1.0229915,0.97752522)" gradientUnits="userSpaceOnUse" id="linearGradient4112" inkscape:collect="always" x1="43.499872" x2="-0.48876261" xlink:href="#MB_YellowGradient-0" y1="43.477139" y2="-0.51149575"/>
    <linearGradient gradientTransform="scale(3.8297084,0.26111648)" gradientUnits="userSpaceOnUse" id="linearGradient4114" inkscape:collect="always" x1="11.8808" x2="0.39167473" xlink:href="#MB_PurpleGradient" y1="9.5742711" y2="-1.9148542"/>
    <linearGradient gradientTransform="scale(0.74708737,1.3385315)" gradientUnits="userSpaceOnUse" id="linearGradient4116" inkscape:collect="always" x1="60.903185" x2="28.778428" xlink:href="#MB_PurpleGradient" y1="31.751213" y2="-0.37354368"/>
    <linearGradient gradientUnits="userSpaceOnUse" id="linearGradient4118" inkscape:collect="always" x1="42.5" x2="1.5" xlink:href="#MB_PurpleGradient" y1="42.5" y2="1.5"/>
    <linearGradient gradientTransform="scale(1.0115611,0.98857105)" gradientUnits="userSpaceOnUse" id="linearGradient4120" inkscape:collect="always" x1="44.979983" x2="1.4828566" xlink:href="#MB_PurpleGradient" y1="42.991346" y2="-0.50578054"/>
    <filter id="MB_DropShadowFilter-83">
      <feGaussianBlur id="feGaussianBlur4920" stdDeviation="2"/>
    </filter>
    <linearGradient gradientUnits="userSpaceOnUse" id="MB_KhakiGradient" x1="80" x2="0" y1="80" y2="0">
      <stop id="stop4915" offset="50%" stop-color="khaki"/>
      <stop id="stop4917" offset="100%" stop-color="white"/>
    </linearGradient>
    <filter id="MB_DropShadowFilter-0">
      <feGaussianBlur id="feGaussianBlur4953" stdDeviation="2"/>
    </filter>
    <linearGradient gradientUnits="userSpaceOnUse" id="MB_RedGradient-7" x1="80" x2="0" y1="80" y2="0">
      <stop id="stop4948" offset="50%" stop-color="red"/>
      <stop id="stop4950" offset="100%" stop-color="white"/>
    </linearGradient>
    <filter id="MB_DropShadowFilter-82">
      <feGaussianBlur id="feGaussianBlur4986" stdDeviation="2"/>
    </filter>
    <linearGradient gradientUnits="userSpaceOnUse" id="MB_NavyGradient" x1="80" x2="0" y1="80" y2="0">
      <stop id="stop4981" offset="50%" stop-color="navy"/>
      <stop id="stop4983" offset="100%" stop-color="white"/>
    </linearGradient>
    <filter id="MB_DropShadowFilter-65">
      <feGaussianBlur id="feGaussianBlur5019" stdDeviation="2"/>
    </filter>
    <linearGradient gradientUnits="userSpaceOnUse" id="MB_YellowGradient-1" x1="80" x2="0" y1="80" y2="0">
      <stop id="stop5014" offset="50%" stop-color="yellow"/>
      <stop id="stop5016" offset="100%" stop-color="white"/>
    </linearGradient>
    <filter id="MB_DropShadowFilter-86">
      <feGaussianBlur id="feGaussianBlur5052" stdDeviation="2"/>
    </filter>
    <linearGradient gradientUnits="userSpaceOnUse" id="MB_SilverGradient-2" x1="90" x2="0" y1="90" y2="0">
      <stop id="stop5047" offset="50%" stop-color="silver"/>
      <stop id="stop5049" offset="100%" stop-color="white"/>
    </linearGradient>
    <filter id="MB_DropShadowFilter-829">
      <feGaussianBlur id="feGaussianBlur5085" stdDeviation="2"/>
    </filter>
    <linearGradient gradientUnits="userSpaceOnUse" id="MB_SilverGradient-3" x1="90" x2="0" y1="90" y2="0">
      <stop id="stop5080" offset="50%" stop-color="silver"/>
      <stop id="stop5082" offset="100%" stop-color="white"/>
    </linearGradient>
    <filter id="MB_DropShadowFilter-15">
      <feGaussianBlur id="feGaussianBlur5118" stdDeviation="2"/>
    </filter>
    <linearGradient gradientUnits="userSpaceOnUse" id="MB_SilverGradient-5" x1="90" x2="0" y1="90" y2="0">
      <stop id="stop5113" offset="50%" stop-color="silver"/>
      <stop id="stop5115" offset="100%" stop-color="white"/>
    </linearGradient>
    <filter id="MB_DropShadowFilter-18">
      <feGaussianBlur id="feGaussianBlur5151" stdDeviation="2"/>
    </filter>
    <linearGradient gradientUnits="userSpaceOnUse" id="MB_SilverGradient-26" x1="90" x2="0" y1="90" y2="0">
      <stop id="stop5146" offset="50%" stop-color="silver"/>
      <stop id="stop5148" offset="100%" stop-color="white"/>
    </linearGradient>
    <filter id="MB_DropShadowFilter-93">
      <feGaussianBlur id="feGaussianBlur5217" stdDeviation="2"/>
    </filter>
    <linearGradient gradientUnits="userSpaceOnUse" id="MB_SilverGradient-58" x1="90" x2="0" y1="90" y2="0">
      <stop id="stop5212" offset="50%" stop-color="silver"/>
      <stop id="stop5214" offset="100%" stop-color="white"/>
    </linearGradient>
    <filter id="MB_DropShadowFilter-42">
      <feGaussianBlur id="feGaussianBlur5250" stdDeviation="2"/>
    </filter>
    <linearGradient gradientUnits="userSpaceOnUse" id="MB_YellowGradient-05" x1="80" x2="0" y1="80" y2="0">
      <stop id="stop5245" offset="50%" stop-color="yellow"/>
      <stop id="stop5247" offset="100%" stop-color="white"/>
    </linearGradient>
    <filter id="MB_DropShadowFilter-68">
      <feGaussianBlur id="feGaussianBlur5278" stdDeviation="2"/>
    </filter>
    <linearGradient id="MB_DigitBezelGradient-3" x1="1" x2="0" y1="1" y2="0">
      <stop id="stop5306" offset="0%" stop-color="black"/>
      <stop id="stop5308" offset="100%" stop-color="whitesmoke"/>
    </linearGradient>
    <filter id="MB_DropShadowFilter-67">
      <feGaussianBlur id="feGaussianBlur5303" stdDeviation="2"/>
    </filter>
    <linearGradient gradientTransform="scale(1.4142136,0.70710678)" gradientUnits="userSpaceOnUse" id="linearGradient5333" inkscape:collect="always" x1="56.568542" x2="0" xlink:href="#MB_DigitBezelGradient-3" y1="56.568542" y2="0"/>
    <linearGradient gradientTransform="scale(1.4425953,0.69319512)" gradientUnits="userSpaceOnUse" id="linearGradient5335" inkscape:collect="always" x1="54.415817" x2="1.0397927" xlink:href="#MB_DigitBezelGradient-3" y1="55.539917" y2="2.1638929"/>
    <linearGradient id="MB_Column_PurpleGradient" x1="0" x2="0" y1="1" y2="0">
      <stop id="stop3442" offset="0%" stop-color="purple"/>
      <stop id="stop3444" offset="10%" stop-color="purple"/>
      <stop id="stop3446" offset="90%" stop-color="white"/>
      <stop id="stop3448" offset="100%" stop-color="white"/>
    </linearGradient>
    <linearGradient gradientTransform="scale(0.31622777,3.1622777)" gradientUnits="userSpaceOnUse" id="linearGradient3465" inkscape:collect="always" x1="0" x2="0" xlink:href="#MB_Column_PurpleGradient" y1="31.622777" y2="0"/>
    <linearGradient gradientTransform="scale(0.31622777,3.1622777)" gradientUnits="userSpaceOnUse" id="linearGradient3467" inkscape:collect="always" x1="0" x2="0" xlink:href="#MB_Column_PurpleGradient" y1="31.622777" y2="0"/>
    <linearGradient id="MB_Column_RedGradient-3" x1="0" x2="0" y1="1" y2="0">
      <stop id="stop3474" offset="0%" stop-color="red"/>
      <stop id="stop3476" offset="10%" stop-color="red"/>
      <stop id="stop3478" offset="90%" stop-color="white"/>
      <stop id="stop3480" offset="100%" stop-color="white"/>
    </linearGradient>
    <linearGradient gradientTransform="scale(0.47861769,2.0893503)" gradientUnits="userSpaceOnUse" id="linearGradient3497" inkscape:collect="always" x1="-2.0893503" x2="-2.0893503" xlink:href="#MB_Column_RedGradient-3" y1="108.1676" y2="-0.47861769"/>
    <linearGradient gradientTransform="scale(0.47861769,2.0893503)" gradientUnits="userSpaceOnUse" id="linearGradient3499" inkscape:collect="always" x1="-2.0893503" x2="-2.0893503" xlink:href="#MB_Column_RedGradient-3" y1="108.1676" y2="-0.47861769"/>
    <linearGradient id="MB_Column_LimeGradient-5" x1="0" x2="0" y1="1" y2="0">
      <stop id="stop3506" offset="0%" stop-color="lime"/>
      <stop id="stop3508" offset="10%" stop-color="lime"/>
      <stop id="stop3510" offset="90%" stop-color="white"/>
      <stop id="stop3512" offset="100%" stop-color="white"/>
    </linearGradient>
    <linearGradient gradientTransform="scale(0.47861769,2.0893503)" gradientUnits="userSpaceOnUse" id="linearGradient3529" inkscape:collect="always" x1="-2.0893503" x2="-2.0893503" xlink:href="#MB_Column_LimeGradient-5" y1="108.1676" y2="-0.47861769"/>
    <linearGradient gradientTransform="scale(0.47861769,2.0893503)" gradientUnits="userSpaceOnUse" id="linearGradient3531" inkscape:collect="always" x1="-2.0893503" x2="-2.0893503" xlink:href="#MB_Column_LimeGradient-5" y1="108.1676" y2="-0.47861769"/>
    <linearGradient id="MB_OrangeGradient" x1="1" x2="0" y1="1" y2="0">
      <stop id="stop3467" offset="50%" stop-color="orange"/>
      <stop id="stop3469" offset="100%" stop-color="white"/>
    </linearGradient>
    <linearGradient gradientUnits="userSpaceOnUse" id="linearGradient3612" inkscape:collect="always" x1="36" x2="0" xlink:href="#MB_OrangeGradient" y1="36" y2="0"/>
    <linearGradient gradientUnits="userSpaceOnUse" id="linearGradient3614" inkscape:collect="always" x1="36" x2="0" xlink:href="#MB_OrangeGradient" y1="36" y2="0"/>
    <linearGradient gradientUnits="userSpaceOnUse" id="linearGradient3616" inkscape:collect="always" x1="36" x2="0" xlink:href="#MB_OrangeGradient" y1="36" y2="0"/>
    <linearGradient gradientUnits="userSpaceOnUse" id="linearGradient3619" inkscape:collect="always" x1="36" x2="0" xlink:href="#MB_OrangeGradient" y1="36" y2="0"/>
    <linearGradient gradientUnits="userSpaceOnUse" id="linearGradient3621" inkscape:collect="always" x1="36" x2="0" xlink:href="#MB_OrangeGradient" y1="36" y2="0"/>
    <linearGradient gradientUnits="userSpaceOnUse" id="linearGradient3623" inkscape:collect="always" x1="36" x2="0" xlink:href="#MB_OrangeGradient" y1="36" y2="0"/>
    <linearGradient gradientUnits="userSpaceOnUse" id="linearGradient3625" inkscape:collect="always" x1="36" x2="0" xlink:href="#MB_OrangeGradient" y1="36" y2="0"/>
    <linearGradient gradientUnits="userSpaceOnUse" id="linearGradient3627" inkscape:collect="always" x1="36" x2="0" xlink:href="#MB_OrangeGradient" y1="36" y2="0"/>
    <linearGradient gradientUnits="userSpaceOnUse" id="linearGradient3629" inkscape:collect="always" x1="36" x2="0" xlink:href="#MB_OrangeGradient" y1="36" y2="0"/>
    <linearGradient gradientUnits="userSpaceOnUse" id="linearGradient3631" inkscape:collect="always" x1="36" x2="0" xlink:href="#MB_OrangeGradient" y1="36" y2="0"/>
    <linearGradient gradientUnits="userSpaceOnUse" id="linearGradient3633" inkscape:collect="always" x1="36" x2="0" xlink:href="#MB_OrangeGradient" y1="36" y2="0"/>
    <linearGradient gradientUnits="userSpaceOnUse" id="linearGradient3635" inkscape:collect="always" x1="36" x2="0" xlink:href="#MB_OrangeGradient" y1="36" y2="0"/>
    <linearGradient gradientTransform="scale(1.86339,0.53665631)" gradientUnits="userSpaceOnUse" id="linearGradient3637" inkscape:collect="always" x1="67.082039" x2="0" xlink:href="#MB_OrangeGradient" y1="67.082039" y2="0"/>
    <linearGradient gradientTransform="scale(1.86339,0.53665631)" gradientUnits="userSpaceOnUse" id="MB_OrangeGradient-2" x1="67.082039" x2="0" y1="67.082039" y2="0">
      <stop id="stop3644" offset="50%" stop-color="orange"/>
      <stop id="stop3646" offset="100%" stop-color="white"/>
    </linearGradient>
    <linearGradient gradientTransform="scale(1.86339,0.53665631)" gradientUnits="userSpaceOnUse" id="MB_OrangeGradient-3" x1="67.082039" x2="0" y1="67.082039" y2="0">
      <stop id="stop3669" offset="50%" stop-color="orange"/>
      <stop id="stop3671" offset="100%" stop-color="white"/>
    </linearGradient>
    <linearGradient gradientTransform="scale(1.86339,0.53665631)" gradientUnits="userSpaceOnUse" id="MB_OrangeGradient-9" x1="67.082039" x2="0" y1="67.082039" y2="0">
      <stop id="stop3694" offset="50%" stop-color="orange"/>
      <stop id="stop3696" offset="100%" stop-color="white"/>
    </linearGradient>
    <filter id="MB_DropShadowFilter-21">
      <feGaussianBlur id="feGaussianBlur3815" stdDeviation="2"/>
    </filter>
    <linearGradient gradientTransform="scale(1.6903085,0.59160798)" gradientUnits="userSpaceOnUse" id="MB_KhakiGradient-6" x1="59.160798" x2="0" y1="59.160798" y2="0">
      <stop id="stop3810" offset="50%" stop-color="khaki"/>
      <stop id="stop3812" offset="100%" stop-color="white"/>
    </linearGradient>
    <filter id="MB_DropShadowFilter-99">
      <feGaussianBlur id="feGaussianBlur3848" stdDeviation="2"/>
    </filter>
    <linearGradient gradientTransform="scale(1.6903085,0.59160798)" gradientUnits="userSpaceOnUse" id="MB_KhakiGradient-1" x1="59.160798" x2="0" y1="59.160798" y2="0">
      <stop id="stop3843" offset="50%" stop-color="khaki"/>
      <stop id="stop3845" offset="100%" stop-color="white"/>
    </linearGradient>
    <filter id="MB_DropShadowFilter-17">
      <feGaussianBlur id="feGaussianBlur3881" stdDeviation="2"/>
    </filter>
    <linearGradient gradientTransform="matrix(1.6903085,0,0,0.59160798,-1.2705531,-57.174888)" gradientUnits="userSpaceOnUse" id="MB_KhakiGradient-9" x1="59.160798" x2="0" y1="59.160798" y2="0">
      <stop id="stop3876" offset="50%" stop-color="khaki"/>
      <stop id="stop3878" offset="100%" stop-color="white"/>
    </linearGradient>
    <filter id="MB_DropShadowFilter-48">
      <feGaussianBlur id="feGaussianBlur3920" stdDeviation="2"/>
    </filter>
    <linearGradient id="MB_IndigoGradient" x1="1" x2="0" y1="1" y2="0">
      <stop id="stop3915" offset="50%" stop-color="indigo"/>
      <stop id="stop3917" offset="100%" stop-color="white"/>
    </linearGradient>
    <filter id="MB_DropShadowFilter-76">
      <feGaussianBlur id="feGaussianBlur4183" stdDeviation="2"/>
    </filter>
    <linearGradient gradientTransform="scale(1.6903085,0.59160798)" gradientUnits="userSpaceOnUse" id="MB_KhakiGradient-2" x1="59.160798" x2="0" y1="59.160798" y2="0">
      <stop id="stop4178" offset="50%" stop-color="khaki"/>
      <stop id="stop4180" offset="100%" stop-color="white"/>
    </linearGradient>
    <filter id="MB_DropShadowFilter-70">
      <feGaussianBlur id="feGaussianBlur4216" stdDeviation="2"/>
    </filter>
    <linearGradient gradientTransform="scale(1.6903085,0.59160798)" gradientUnits="userSpaceOnUse" id="MB_KhakiGradient-8" x1="59.160798" x2="0" y1="59.160798" y2="0">
      <stop id="stop4211" offset="50%" stop-color="khaki"/>
      <stop id="stop4213" offset="100%" stop-color="white"/>
    </linearGradient>
    <filter id="MB_DropShadowFilter-3">
      <feGaussianBlur id="feGaussianBlur4249" stdDeviation="2"/>
    </filter>
    <linearGradient gradientTransform="scale(1.6903085,0.59160798)" gradientUnits="userSpaceOnUse" id="MB_IndigoGradient-4" x1="59.160798" x2="0" y1="59.160798" y2="0">
      <stop id="stop4244" offset="50%" stop-color="indigo"/>
      <stop id="stop4246" offset="100%" stop-color="white"/>
    </linearGradient>
    <filter id="MB_DropShadowFilter-703">
      <feGaussianBlur id="feGaussianBlur4282" stdDeviation="2"/>
    </filter>
    <linearGradient gradientTransform="scale(1.6903085,0.59160798)" gradientUnits="userSpaceOnUse" id="MB_PurpleGradient-0" x1="59.160798" x2="0" y1="59.160798" y2="0">
      <stop id="stop4277" offset="50%" stop-color="purple"/>
      <stop id="stop4279" offset="100%" stop-color="white"/>
    </linearGradient>
    <filter id="MB_DropShadowFilter-22">
      <feGaussianBlur id="feGaussianBlur3848-2" stdDeviation="2"/>
    </filter>
    <linearGradient gradientUnits="userSpaceOnUse" id="MB_SilverGradient-51" x1="45" x2="-45" y1="45" y2="-45">
      <stop id="stop3843-6" offset="50%" stop-color="silver"/>
      <stop id="stop3845-0" offset="100%" stop-color="white"/>
    </linearGradient>
    <filter id="MB_DropShadowFilter-64">
      <feGaussianBlur id="feGaussianBlur3890" stdDeviation="2"/>
    </filter>
    <linearGradient gradientUnits="userSpaceOnUse" id="MB_SilverGradient-33" x1="45" x2="-45" y1="45" y2="-45">
      <stop id="stop3885" offset="50%" stop-color="silver"/>
      <stop id="stop3887" offset="100%" stop-color="white"/>
    </linearGradient>
    <filter id="MB_DropShadowFilter-90">
      <feGaussianBlur id="feGaussianBlur3932" stdDeviation="2"/>
    </filter>
    <linearGradient gradientUnits="userSpaceOnUse" id="MB_SilverGradient-0" x1="45" x2="-45" y1="45" y2="-45">
      <stop id="stop3927" offset="50%" stop-color="silver"/>
      <stop id="stop3929" offset="100%" stop-color="white"/>
    </linearGradient>
    <filter id="MB_DropShadowFilter-81">
      <feGaussianBlur id="feGaussianBlur3974" stdDeviation="2"/>
    </filter>
    <linearGradient gradientUnits="userSpaceOnUse" id="MB_SilverGradient-6" x1="45" x2="-45" y1="45" y2="-45">
      <stop id="stop3969" offset="50%" stop-color="silver"/>
      <stop id="stop3971" offset="100%" stop-color="white"/>
    </linearGradient>
    <filter id="MB_DropShadowFilter-680">
      <feGaussianBlur id="feGaussianBlur4016" stdDeviation="2"/>
    </filter>
    <linearGradient gradientUnits="userSpaceOnUse" id="MB_SilverGradient-8" x1="45" x2="-45" y1="45" y2="-45">
      <stop id="stop4011" offset="50%" stop-color="silver"/>
      <stop id="stop4013" offset="100%" stop-color="white"/>
    </linearGradient>
    <filter id="MB_DropShadowFilter-179">
      <feGaussianBlur id="feGaussianBlur4109" stdDeviation="2"/>
    </filter>
    <linearGradient gradientUnits="userSpaceOnUse" id="MB_SilverGradient-04" x1="45" x2="-45" y1="45" y2="-45">
      <stop id="stop4104" offset="50%" stop-color="silver"/>
      <stop id="stop4106" offset="100%" stop-color="white"/>
    </linearGradient>
    <filter id="MB_DropShadowFilter-30">
      <feGaussianBlur id="feGaussianBlur4151" stdDeviation="2"/>
    </filter>
    <linearGradient gradientUnits="userSpaceOnUse" id="MB_RedGradient-6" x1="80" x2="0" y1="80" y2="0">
      <stop id="stop4146" offset="50%" stop-color="red"/>
      <stop id="stop4148" offset="100%" stop-color="white"/>
    </linearGradient>
    <filter id="MB_DropShadowFilter-863">
      <feGaussianBlur id="feGaussianBlur4184" stdDeviation="2"/>
    </filter>
    <linearGradient gradientUnits="userSpaceOnUse" id="MB_SilverGradient-9" x1="90" x2="0" y1="90" y2="0">
      <stop id="stop4179" offset="50%" stop-color="silver"/>
      <stop id="stop4181" offset="100%" stop-color="white"/>
    </linearGradient>
    <filter id="MB_DropShadowFilter-66">
      <feGaussianBlur id="feGaussianBlur4217" stdDeviation="2"/>
    </filter>
    <linearGradient gradientUnits="userSpaceOnUse" id="MB_SilverGradient-90" x1="90" x2="0" y1="90" y2="0">
      <stop id="stop4212" offset="50%" stop-color="silver"/>
      <stop id="stop4214" offset="100%" stop-color="white"/>
    </linearGradient>
    <linearGradient id="MB_BlueGradient" x1="1" x2="0" y1="1" y2="0">
      <stop id="stop4245" offset="50%" stop-color="blue"/>
      <stop id="stop4247" offset="100%" stop-color="white"/>
    </linearGradient>
    <filter id="MB_DropShadowFilter-31">
      <feGaussianBlur id="feGaussianBlur4292" stdDeviation="2"/>
    </filter>
    <linearGradient gradientTransform="scale(1.4142136,0.70710678)" gradientUnits="userSpaceOnUse" id="linearGradient4306" inkscape:collect="always" x1="56.568542" x2="0" xlink:href="#MB_BlueGradient" y1="113.13708" y2="56.568542"/>
    <linearGradient gradientUnits="userSpaceOnUse" id="linearGradient4308" inkscape:collect="always" x1="70" x2="10" xlink:href="#MB_BlueGradient" y1="70" y2="10"/>
    <filter id="MB_DropShadowFilter-71">
      <feGaussianBlur id="feGaussianBlur4320" stdDeviation="2"/>
    </filter>
    <linearGradient gradientUnits="userSpaceOnUse" id="MB_SilverGradient-98" x1="90" x2="0" y1="90" y2="0">
      <stop id="stop4315" offset="50%" stop-color="silver"/>
      <stop id="stop4317" offset="100%" stop-color="white"/>
    </linearGradient>
    <linearGradient id="DemoPP_BlackGradient" x1="1" x2="0" y1="1" y2="0">
      <stop id="stop4390" offset="50%" stop-color="black"/>
      <stop id="stop4392" offset="100%" stop-color="white"/>
    </linearGradient>
    <linearGradient id="DemoPP_SilverGradient" x1="1" x2="0" y1="1" y2="0">
      <stop id="stop4385" offset="50%" stop-color="silver"/>
      <stop id="stop4387" offset="100%" stop-color="white"/>
    </linearGradient>
    <linearGradient id="DemoPP_BlackGradient-0" x1="1" x2="0" y1="1" y2="0">
      <stop id="stop3839" offset="50%" stop-color="black"/>
      <stop id="stop3841" offset="100%" stop-color="white"/>
    </linearGradient>
    <linearGradient id="DemoPP_SilverGradient-2" x1="1" x2="0" y1="1" y2="0">
      <stop id="stop3834" offset="50%" stop-color="silver"/>
      <stop id="stop3836" offset="100%" stop-color="white"/>
    </linearGradient>
    <linearGradient gradientTransform="scale(0.23393668,4.2746611)" gradientUnits="userSpaceOnUse" id="linearGradient3897" inkscape:collect="always" x1="130.37716" x2="83.355891" xlink:href="#DemoPP_SilverGradient-2" y1="49.24367" y2="2.2223984"/>
    <linearGradient gradientTransform="scale(0.23393668,4.2746611)" gradientUnits="userSpaceOnUse" id="linearGradient3899" inkscape:collect="always" x1="301.36361" x2="254.34233" xlink:href="#DemoPP_SilverGradient-2" y1="49.24367" y2="2.2223984"/>
    <linearGradient gradientTransform="scale(2.081666,0.48038446)" gradientUnits="userSpaceOnUse" id="linearGradient3901" inkscape:collect="always" x1="43.474794" x2="-0.24019223" xlink:href="#DemoPP_BlackGradient-0" y1="479.82401" y2="436.10903"/>
    <linearGradient gradientTransform="scale(2.8762349,0.34767675)" gradientUnits="userSpaceOnUse" id="linearGradient3903" inkscape:collect="always" x1="31.464746" x2="-0.17383837" xlink:href="#DemoPP_SilverGradient-2" y1="30.200467" y2="-1.4381175"/>
    <linearGradient gradientTransform="scale(6.03776,0.16562434)" gradientUnits="userSpaceOnUse" id="linearGradient3905" inkscape:collect="always" x1="72.957521" x2="6.5421614" xlink:href="#DemoPP_SilverGradient-2" y1="244.52928" y2="178.11392"/>
    <linearGradient gradientTransform="scale(6.03776,0.16562434)" gradientUnits="userSpaceOnUse" id="linearGradient3907" inkscape:collect="always" x1="72.957521" x2="6.5421614" xlink:href="#DemoPP_SilverGradient-2" y1="486.03968" y2="419.62432"/>
    <linearGradient gradientTransform="scale(0.39361095,2.5405797)" gradientUnits="userSpaceOnUse" id="linearGradient3909" inkscape:collect="always" x1="1144.5312" x2="1116.5848" xlink:href="#DemoPP_SilverGradient-2" y1="35.621791" y2="7.6754135"/>
    <linearGradient gradientTransform="scale(0.39361095,2.5405797)" gradientUnits="userSpaceOnUse" id="linearGradient3911" inkscape:collect="always" x1="128.29928" x2="100.3529" xlink:href="#DemoPP_SilverGradient-2" y1="35.621791" y2="7.6754135"/>
    <linearGradient gradientTransform="scale(0.63866637,1.5657627)" gradientUnits="userSpaceOnUse" id="linearGradient3913" inkscape:collect="always" x1="63.41339" x2="14.874746" xlink:href="#DemoPP_BlackGradient-0" y1="64.185971" y2="15.647326"/>
    <linearGradient gradientTransform="scale(0.82305489,1.2149858)" gradientUnits="userSpaceOnUse" id="linearGradient3915" inkscape:collect="always" x1="24.907209" x2="-0.6074929" xlink:href="#DemoPP_SilverGradient-2" y1="107.40866" y2="81.893962"/>
    <linearGradient gradientTransform="scale(0.82305489,1.2149858)" gradientUnits="userSpaceOnUse" id="linearGradient3917" inkscape:collect="always" x1="61.356783" x2="35.842081" xlink:href="#DemoPP_SilverGradient-2" y1="107.40866" y2="81.893962"/>
    <linearGradient gradientTransform="scale(1.1321175,0.8833005)" gradientUnits="userSpaceOnUse" id="linearGradient3919" inkscape:collect="always" x1="362.59486" x2="282.21451" xlink:href="#DemoPP_BlackGradient-0" y1="102.45664" y2="22.076292"/>
    <linearGradient gradientUnits="userSpaceOnUse" id="linearGradient4807" inkscape:collect="always" x1="59.5" x2="680.5" xlink:href="#linearGradient4801" y1="310" y2="310"/>
    <filter id="MB_DropShadowFilter-648">
      <feGaussianBlur id="feGaussianBlur3884" stdDeviation="2"/>
    </filter>
    <linearGradient gradientUnits="userSpaceOnUse" id="MB_RedGradient-9" x1="80" x2="0" y1="80" y2="0">
      <stop id="stop3879" offset="50%" stop-color="red"/>
      <stop id="stop3881" offset="100%" stop-color="white"/>
    </linearGradient>
    <filter id="MB_DropShadowFilter-5">
      <feGaussianBlur id="feGaussianBlur3917" stdDeviation="2"/>
    </filter>
    <linearGradient gradientUnits="userSpaceOnUse" id="MB_BlueGradient-6" x1="80" x2="0" y1="80" y2="0">
      <stop id="stop3912" offset="50%" stop-color="blue"/>
      <stop id="stop3914" offset="100%" stop-color="white"/>
    </linearGradient>
  </defs>
  <sodipodi:namedview bordercolor="#666666" borderlayer="true" borderopacity="1.0" gridtolerance="10000" guidetolerance="10" id="base" inkscape:current-layer="LayerTank" inkscape:cx="425" inkscape:cy="275" inkscape:document-units="px" inkscape:pageopacity="0.0" inkscape:pageshadow="2" inkscape:window-height="726" inkscape:window-maximized="0" inkscape:window-width="1050" inkscape:window-x="0" inkscape:window-y="24" inkscape:zoom="0.78705882" objecttolerance="10" pagecolor="#ffffff" showgrid="true">
    <inkscape:grid empspacing="5" enabled="false" id="grid3843" snapvisiblegridlinesonly="true" type="xygrid" visible="true"/>
  </sodipodi:namedview>
  <metadata id="metadata2450">
    <rdf:RDF>
      <cc:Work rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type rdf:resource="http://purl.org/dc/dcmitype/StillImage"/>
      </cc:Work>
    </rdf:RDF>
  </metadata>
  <g id="BackgroundLayer" inkscape:groupmode="layer" inkscape:label="BackgroundLayer" style="display:none">
    <rect height="550" id="Background" inkscape:label="#BackgroundRectangle" style="fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none" width="850" x="0" y="0"/>
  </g>
  <g id="LayerButtons" inkscape:groupmode="layer" inkscape:label="LayerButtons" style="display:inline">
    <g class="buttonactivate" id="MenuPBTank" inkscape:label="#g2997" mblogic:editcount="1" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBT_SVGScreenSelect.SelectScreen(\&quot;%(layername)s\&quot;);&quot;}]" mblogic:menu="[{&quot;value&quot;: &quot;LayerTank&quot;, &quot;type&quot;: &quot;layer&quot;, &quot;name&quot;: &quot;Layer Name&quot;, &quot;param&quot;: &quot;layername&quot;}]" mblogic:outputfunc="" mblogic:widgetname="Menu Push Button" mblogic:widgettype="pb_menu" onclick="MBT_SVGScreenSelect.SelectScreen(&quot;LayerTank&quot;);" transform="translate(12.709865,10.755456)">
      <rect height="35" id="rect2999" rx="15" style="fill:#808080;stroke:none;filter:url(#MB_DropShadowFilter)" width="100" x="7" y="7"/>
      <rect height="36" id="rect3001" rx="15" style="fill:url(#MB_GreenGradient)" width="100" x="0" y="0"/>
      <text font-size="24" id="text3003" sodipodi:linespacing="125%" style="font-size:24px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;writing-mode:lr-tb;text-anchor:middle;stroke-width:2px;font-family:Sans;-inkscape-font-specification:Sans" x="50" y="26">
        <tspan id="tspan3117" sodipodi:role="line" x="50" y="26">Tank</tspan>
      </text>
    </g>
    <g class="buttonactivate" id="MenuPBData" inkscape:label="#g3030" mblogic:editcount="1" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBT_SVGScreenSelect.SelectScreen(\&quot;%(layername)s\&quot;);&quot;}]" mblogic:menu="[{&quot;value&quot;: &quot;LayerData&quot;, &quot;type&quot;: &quot;layer&quot;, &quot;name&quot;: &quot;Layer Name&quot;, &quot;param&quot;: &quot;layername&quot;}]" mblogic:outputfunc="" mblogic:widgetname="Menu Push Button" mblogic:widgettype="pb_menu" onclick="MBT_SVGScreenSelect.SelectScreen(&quot;LayerData&quot;);" transform="translate(123.24798,9.4849027)">
      <rect height="35" id="rect3032" rx="15" style="fill:#808080;stroke:none;filter:url(#MB_DropShadowFilter-8)" width="100" x="7" y="7"/>
      <rect height="36" id="rect3034" rx="15" style="fill:url(#MB_GreyGradient)" width="100" x="0" y="0"/>
      <text font-size="24" id="text3036" sodipodi:linespacing="125%" style="font-size:24px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;writing-mode:lr-tb;text-anchor:middle;stroke-width:2px;font-family:Sans;-inkscape-font-specification:Sans" x="50" y="26">
        <tspan id="tspan3119" sodipodi:role="line" x="50" y="26">Data</tspan>
      </text>
    </g>
    <g class="buttonactivate" id="MenuPBPandP" inkscape:label="#g3063" mblogic:editcount="1" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBT_SVGScreenSelect.SelectScreen(\&quot;%(layername)s\&quot;);&quot;}]" mblogic:menu="[{&quot;value&quot;: &quot;LayerPandP&quot;, &quot;type&quot;: &quot;layer&quot;, &quot;name&quot;: &quot;Layer Name&quot;, &quot;param&quot;: &quot;layername&quot;}]" mblogic:outputfunc="" mblogic:widgetname="Menu Push Button" mblogic:widgettype="pb_menu" onclick="MBT_SVGScreenSelect.SelectScreen(&quot;LayerPandP&quot;);" transform="translate(233.10241,9.8780985)">
      <rect height="35" id="rect3065" rx="15" style="fill:#808080;stroke:none;filter:url(#MB_DropShadowFilter-6)" width="100" x="7" y="7"/>
      <rect height="36" id="rect3067" rx="15" style="fill:url(#MB_TanGradient)" width="100" x="0" y="0"/>
      <text font-size="24" id="text3069" sodipodi:linespacing="125%" style="font-size:24px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;writing-mode:lr-tb;text-anchor:middle;stroke-width:2px;font-family:Sans;-inkscape-font-specification:Sans" x="50" y="26">
        <tspan id="tspan3121" sodipodi:role="line" x="50" y="26">P &amp; P</tspan>
      </text>
    </g>
    <g class="buttonactivate" id="MenuPBChart" inkscape:label="#g3096" mblogic:editcount="1" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBT_SVGScreenSelect.SelectScreen(\&quot;%(layername)s\&quot;);&quot;}]" mblogic:menu="[{&quot;value&quot;: &quot;LayerChart&quot;, &quot;type&quot;: &quot;layer&quot;, &quot;name&quot;: &quot;Layer Name&quot;, &quot;param&quot;: &quot;layername&quot;}]" mblogic:outputfunc="" mblogic:widgetname="Menu Push Button" mblogic:widgettype="pb_menu" onclick="MBT_SVGScreenSelect.SelectScreen(&quot;LayerChart&quot;);" transform="translate(342.57537,10.949121)">
      <rect height="35" id="rect3098" rx="15" style="fill:#808080;stroke:none;filter:url(#MB_DropShadowFilter-2)" width="100" x="7" y="7"/>
      <rect height="36" id="rect3100" rx="15" style="fill:url(#MB_YellowGradient)" width="100" x="0" y="0"/>
      <text font-size="24" id="text3102" sodipodi:linespacing="125%" style="font-size:24px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;writing-mode:lr-tb;text-anchor:middle;stroke-width:2px;font-family:Sans;-inkscape-font-specification:Sans" x="50" y="26">
        <tspan id="tspan3123" sodipodi:role="line" x="50" y="26">Chart</tspan>
      </text>
    </g>
  </g>
  <g id="LayerTank" inkscape:groupmode="layer" inkscape:label="LayerTank" style="display:inline">
    <g id="PLSysStatus" inkscape:label="#g3128" mblogic:editcount="1" mblogic:inputfunc="[]" mblogic:menu="[{&quot;value&quot;: &quot;black&quot;, &quot;type&quot;: &quot;colour&quot;, &quot;name&quot;: &quot;Init Colour&quot;, &quot;param&quot;: &quot;initcolour&quot;}, {&quot;value&quot;: &quot;green&quot;, &quot;type&quot;: &quot;colour&quot;, &quot;name&quot;: &quot;Ok Colour&quot;, &quot;param&quot;: &quot;okcolour&quot;}, {&quot;value&quot;: &quot;red&quot;, &quot;type&quot;: &quot;colour&quot;, &quot;name&quot;: &quot;Error Colour&quot;, &quot;param&quot;: &quot;errcolour&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToDisplayList(new MB_PilotLightStat(document, &quot;%(widgetid)s&quot;, &quot;%(initcolour)s&quot;,  &quot;%(okcolour)s&quot;, &quot;%(errcolour)s&quot;, &quot;ok&quot;), &quot;&quot;, &quot;stat&quot;);" mblogic:widgetname="Status Pilot Light" mblogic:widgettype="pl_status" style="display:inline" transform="translate(16.318195,66.221559)">
      <rect height="35" id="rect3130" rx="10" ry="10" style="stroke:#000000;stroke-width:5" width="100" x="0" y="0"/>
      <text font-size="24" id="text3132" sodipodi:linespacing="125%" style="font-size:24px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;writing-mode:lr-tb;text-anchor:middle;fill:#ffffff;stroke:#ffffff;stroke-width:2px;font-family:Sans;-inkscape-font-specification:Sans" x="50" y="26">
        <tspan id="tspan3177" sodipodi:role="line" x="50" y="26">Status</tspan>
      </text>
    </g>
    <g id="PLSysWatchDog" inkscape:label="#g3145" mblogic:editcount="1" mblogic:inputfunc="[]" mblogic:menu="[{&quot;value&quot;: &quot;black&quot;, &quot;type&quot;: &quot;colour&quot;, &quot;name&quot;: &quot;Init Colour&quot;, &quot;param&quot;: &quot;initcolour&quot;}, {&quot;value&quot;: &quot;green&quot;, &quot;type&quot;: &quot;colour&quot;, &quot;name&quot;: &quot;Ok Colour&quot;, &quot;param&quot;: &quot;okcolour&quot;}, {&quot;value&quot;: &quot;red&quot;, &quot;type&quot;: &quot;colour&quot;, &quot;name&quot;: &quot;Error Colour&quot;, &quot;param&quot;: &quot;errcolour&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToWatchdogList(new MB_PilotLight(document, &quot;%(widgetid)s&quot;, &quot;%(initcolour)s&quot;,  &quot;%(okcolour)s&quot;, &quot;%(errcolour)s&quot;));" mblogic:widgetname="Watchdog Pilot Light" mblogic:widgettype="pl_watchdog" style="display:inline" transform="translate(14.950809,116.13113)">
      <rect height="35" id="rect3147" rx="10" ry="10" style="stroke:#000000;stroke-width:5" width="100" x="0" y="0"/>
      <text font-size="24" id="text3149" sodipodi:linespacing="125%" style="font-size:21.59776878px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;writing-mode:lr-tb;text-anchor:middle;fill:#ffffff;stroke:#ffffff;stroke-width:1.79981422px;font-family:Sans;-inkscape-font-specification:Sans" transform="scale(0.89221722,1.1208033)" x="56.653721" y="23.248564">
        <tspan id="tspan3179" sodipodi:role="line" style="stroke-width:1.79981422" x="56.653721" y="23.248564">Watchdog</tspan>
      </text>
    </g>
    <g id="PLSysAlarms" inkscape:label="#g3162" mblogic:editcount="1" mblogic:inputfunc="[]" mblogic:menu="[{&quot;value&quot;: &quot;black&quot;, &quot;type&quot;: &quot;colour&quot;, &quot;name&quot;: &quot;Init Colour&quot;, &quot;param&quot;: &quot;initcolour&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToDisplayList(new MB_PLMultiColour(document, &quot;%(widgetid)s&quot;, &quot;%(initcolour)s&quot;, [&quot;white&quot;, &quot;green&quot;, &quot;orange&quot;, &quot;red&quot;]), &quot;&quot;, &quot;chkalarm&quot;);" mblogic:widgetname="Alarm Status Pilot Light" mblogic:widgettype="pl_alarmstat" style="display:inline" transform="translate(17.001887,163.98962)">
      <rect height="35" id="rect3164" rx="10" ry="10" style="stroke:#000000;stroke-width:5" width="100" x="0" y="0"/>
      <text font-size="24" id="text3166" sodipodi:linespacing="125%" style="font-size:24px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;writing-mode:lr-tb;text-anchor:middle;fill:#ee82ee;stroke:#ee82ee;stroke-width:2px;font-family:Sans;-inkscape-font-specification:Sans" x="50" y="26">
        <tspan id="tspan3181" sodipodi:role="line" x="50" y="26">Alarms</tspan>
      </text>
    </g>
    <g id="g3206" style="fill:url(#linearGradient3232);stroke:#000000;stroke-width:2" transform="translate(7.1375188,193.6704)">
      <path d="m 0,63 v 150 l 113,75 h 24 L 250,213 V 63 A 125,50 0 0 0 0,63 z" id="path3208" inkscape:connector-curvature="0" style="fill:url(#linearGradient3226)"/>
      <line id="line3210" style="fill:url(#linearGradient3228)" x1="0" x2="250" y1="63" y2="63"/>
      <line id="line3212" style="fill:url(#linearGradient3230)" x1="0" x2="250" y1="213" y2="213"/>
    </g>
    <g id="g3245" style="fill:url(#linearGradient3271);stroke:#000000;stroke-width:2" transform="translate(264.22522,194.94096)">
      <path d="m 0,63 v 150 l 113,75 h 24 L 250,213 V 63 A 125,50 0 0 0 0,63 z" id="path3247" inkscape:connector-curvature="0" style="fill:url(#linearGradient3265)"/>
      <line id="line3249" style="fill:url(#linearGradient3267)" x1="0" x2="250" y1="63" y2="63"/>
      <line id="line3251" style="fill:url(#linearGradient3269)" x1="0" x2="250" y1="213" y2="213"/>
    </g>
    <g id="TankPipe2" inkscape:label="#g3914" mblogic:editcount="1" mblogic:inputfunc="[]" mblogic:menu="[{&quot;param&quot;: &quot;outputtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Output Tag&quot;, &quot;value&quot;: &quot;PumpSpeedActual&quot;}, {&quot;param&quot;: &quot;initcolour&quot;, &quot;type&quot;: &quot;colour&quot;, &quot;name&quot;: &quot;Init Colour&quot;, &quot;value&quot;: &quot;black&quot;}, {&quot;param&quot;: &quot;offcolour&quot;, &quot;type&quot;: &quot;colour&quot;, &quot;name&quot;: &quot;Off Colour&quot;, &quot;value&quot;: &quot;green&quot;}, {&quot;param&quot;: &quot;oncolour&quot;, &quot;type&quot;: &quot;colour&quot;, &quot;name&quot;: &quot;On Colour&quot;, &quot;value&quot;: &quot;red&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToDisplayList(new MB_Pipe2(document, &quot;%(widgetid)s&quot;, &quot;%(initcolour)s&quot;, &quot;%(offcolour)s&quot;, &quot;%(oncolour)s&quot;), &quot;%(outputtag)s&quot;, &quot;read&quot;);" mblogic:widgetname="Pipe" mblogic:widgettype="pipe" transform="matrix(5.5994021,0,0,1.4446936,121.1136,494.17788)">
      <rect height="10" id="rect3916" rx="0" style="stroke:none" width="50" x="0" y="0"/>
    </g>
    <g id="g3361" transform="translate(214.11061,463.07175)">
      <polygon id="polygon3346" points="15,40 0,80 80,80 65,40 " style="fill:url(#linearGradient3367)"/>
      <circle cx="40" cy="40" d="M 65,40 C 65,53.807119 53.807119,65 40,65 26.192881,65 15,53.807119 15,40 15,26.192881 26.192881,15 40,15 53.807119,15 65,26.192881 65,40 z" id="circle3348" r="25" sodipodi:cx="40" sodipodi:cy="40" sodipodi:rx="25" sodipodi:ry="25" style="fill:#ffff00"/>
      <circle cx="40" cy="40" d="m 42,40 c 0,1.104569 -0.895431,2 -2,2 -1.104569,0 -2,-0.895431 -2,-2 0,-1.104569 0.895431,-2 2,-2 1.104569,0 2,0.895431 2,2 z" id="circle3350" r="2" sodipodi:cx="40" sodipodi:cy="40" sodipodi:rx="2" sodipodi:ry="2" style="fill:#000000"/>
      <circle cx="40" cy="40" d="M 65,40 C 65,53.807119 53.807119,65 40,65 26.192881,65 15,53.807119 15,40 15,26.192881 26.192881,15 40,15 53.807119,15 65,26.192881 65,40 z" id="circle3352" r="25" sodipodi:cx="40" sodipodi:cy="40" sodipodi:rx="25" sodipodi:ry="25" style="fill:none;stroke:url(#linearGradient3369);stroke-width:10"/>
    </g>
    <g id="Tank1Column" inkscape:label="#g3482" mblogic:editcount="1" mblogic:inputfunc="[]" mblogic:menu="[{&quot;param&quot;: &quot;outputtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Output Tag&quot;, &quot;value&quot;: &quot;Tank1Level&quot;}, {&quot;param&quot;: &quot;min&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;Minimum Value&quot;, &quot;value&quot;: &quot;0&quot;}, {&quot;param&quot;: &quot;max&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;Maximum Value&quot;, &quot;value&quot;: &quot;100&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToDisplayList(new MB_ColumnGauge(document, &quot;%(widgetid)s&quot;, &quot;MB_Column_RedGradient&quot;, &quot;%(min)s&quot;, &quot;%(max)s&quot;), &quot;%(outputtag)s&quot;, &quot;read&quot;);" mblogic:widgetname="Tank Column Polygon" mblogic:widgettype="column_gauge" style="fill:url(#linearGradient3499)" transform="translate(107.50965,256.8954)">
      <!-- This is the actual tank column. The fill value will be added later. -->
      <polygon id="polygon3484" points="50,137 37,87 50,62 37,32 50,0 0,0 0,0 10,50 0,87 10,125 0,150 5,187 0,205 12,225 37,225 50,200 37,162 " style="fill:url(#linearGradient3497);stroke:#000000;stroke-width:2"/>
    </g>
    <g id="g3380" style="fill:url(#linearGradient3468)" transform="translate(4.715994,281.54709)">
      <!-- This adds the outer ring. -->
      <circle cx="55" cy="55" d="M 110,55 C 110,85.375661 85.375661,110 55,110 24.624339,110 0,85.375661 0,55 0,24.624339 24.624339,0 55,0 c 30.375661,0 55,24.624339 55,55 z" id="circle3382" r="55" sodipodi:cx="55" sodipodi:cy="55" sodipodi:rx="55" sodipodi:ry="55" style="fill:#c0c0c0;stroke:#000000;stroke-width:2px"/>
      <!-- This adds the outer part of the dial background. -->
      <circle cx="55" cy="55" d="M 105,55 C 105,82.614237 82.614237,105 55,105 27.385763,105 5,82.614237 5,55 5,27.385763 27.385763,5 55,5 c 27.614237,0 50,22.385763 50,50 z" id="circle3384" r="50" sodipodi:cx="55" sodipodi:cy="55" sodipodi:rx="50" sodipodi:ry="50" style="fill:url(#linearGradient3438);stroke:#000000;stroke-width:2px"/>
      <!-- These add the "tick" marks to the dial. -->
      <g id="g3386" style="fill:url(#linearGradient3464);stroke:#ffffff;stroke-width:4px">
        <line id="line3388" style="fill:url(#linearGradient3440)" x1="55" x2="55" y1="105" y2="100"/>
        <line id="line3390" style="fill:url(#linearGradient3442)" transform="matrix(0.8660254,0.5,-0.5,0.8660254,34.868603,-20.131397)" x1="55" x2="55" y1="105" y2="100"/>
        <line id="line3392" style="fill:url(#linearGradient3444)" transform="matrix(0.5,0.8660254,-0.8660254,0.5,75.131397,-20.131397)" x1="55" x2="55" y1="105" y2="100"/>
        <line id="line3394" style="fill:url(#linearGradient3446)" transform="matrix(0,1,-1,0,110,0)" x1="55" x2="55" y1="105" y2="100"/>
        <line id="line3396" style="fill:url(#linearGradient3448)" transform="matrix(-0.5,0.8660254,-0.8660254,-0.5,130.1314,34.868603)" x1="55" x2="55" y1="105" y2="100"/>
        <line id="line3398" style="fill:url(#linearGradient3450)" transform="matrix(-0.8660254,0.5,-0.5,-0.8660254,130.1314,75.131397)" x1="55" x2="55" y1="105" y2="100"/>
        <line id="line3400" style="fill:url(#linearGradient3452)" transform="matrix(-1,0,0,-1,110,110)" x1="55" x2="55" y1="105" y2="100"/>
        <line id="line3402" style="fill:url(#linearGradient3454)" transform="matrix(-0.8660254,-0.5,0.5,-0.8660254,75.131397,130.1314)" x1="55" x2="55" y1="105" y2="100"/>
        <line id="line3404" style="fill:url(#linearGradient3456)" transform="matrix(-0.5,-0.8660254,0.8660254,-0.5,34.868603,130.1314)" x1="55" x2="55" y1="105" y2="100"/>
        <line id="line3406" style="fill:url(#linearGradient3458)" transform="matrix(0,-1,1,0,0,110)" x1="55" x2="55" y1="105" y2="100"/>
        <line id="line3408" style="fill:url(#linearGradient3460)" transform="matrix(0.5,-0.8660254,0.8660254,0.5,-20.131397,75.131397)" x1="55" x2="55" y1="105" y2="100"/>
        <line id="line3410" style="fill:url(#linearGradient3462)" transform="matrix(0.8660254,-0.5,0.5,0.8660254,-20.131397,34.868603)" x1="55" x2="55" y1="105" y2="100"/>
      </g>
      <!-- This gives us a target to help align the pointer. -->
      <circle cx="55" cy="55" d="m 60,55 c 0,2.761424 -2.238576,5 -5,5 -2.761424,0 -5,-2.238576 -5,-5 0,-2.761424 2.238576,-5 5,-5 2.761424,0 5,2.238576 5,5 z" id="circle3412" r="5" sodipodi:cx="55" sodipodi:cy="55" sodipodi:rx="5" sodipodi:ry="5" style="fill:url(#linearGradient3466);stroke:#000000;stroke-width:1px"/>
    </g>
    <g id="g3479" style="fill:url(#linearGradient3562)" transform="translate(292.99204,262.73543)">
      <!-- This adds the outer ring. -->
      <rect height="140" id="rect3481" rx="5" style="fill:#c0c0c0;stroke:#000000;stroke-width:5px" width="40" x="0" y="0"/>
      <!-- This adds the inner background. -->
      <rect height="130" id="rect3483" rx="5" style="fill:url(#linearGradient3534);stroke:#000000;stroke-width:2px" width="30" x="5" y="5"/>
      <!-- These add the "tick" marks to the background. -->
      <g id="g3485" style="fill:url(#linearGradient3558);stroke:#ffffff;stroke-width:2px" transform="translate(5,20)">
        <line id="line3487" style="fill:url(#linearGradient3536)" x1="0" x2="30" y1="0" y2="0"/>
        <line id="line3489" style="fill:url(#linearGradient3538)" x1="0" x2="30" y1="10" y2="10"/>
        <line id="line3491" style="fill:url(#linearGradient3540)" x1="0" x2="30" y1="20" y2="20"/>
        <line id="line3493" style="fill:url(#linearGradient3542)" x1="0" x2="30" y1="30" y2="30"/>
        <line id="line3495" style="fill:url(#linearGradient3544)" x1="0" x2="30" y1="40" y2="40"/>
        <line id="line3497" style="fill:url(#linearGradient3546)" x1="0" x2="30" y1="50" y2="50"/>
        <line id="line3499" style="fill:url(#linearGradient3548)" x1="0" x2="30" y1="60" y2="60"/>
        <line id="line3501" style="fill:url(#linearGradient3550)" x1="0" x2="30" y1="70" y2="70"/>
        <line id="line3503" style="fill:url(#linearGradient3552)" x1="0" x2="30" y1="80" y2="80"/>
        <line id="line3505" style="fill:url(#linearGradient3554)" x1="0" x2="30" y1="90" y2="90"/>
        <line id="line3507" style="fill:url(#linearGradient3556)" x1="0" x2="30" y1="100" y2="100"/>
      </g>
      <!-- This covers the inner part of the "tick" marks. -->
      <rect height="130" id="rect3509" rx="0" style="fill:url(#linearGradient3560);stroke:none" width="15" x="12" y="5"/>
    </g>
    <g id="Tank1DialPointer" inkscape:label="#g3566" mblogic:editcount="1" mblogic:inputfunc="[]" mblogic:menu="[{&quot;value&quot;: &quot;Tank1Level&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Output Tag&quot;, &quot;param&quot;: &quot;outputtag&quot;}, {&quot;value&quot;: &quot;30&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;Dial Offset&quot;, &quot;param&quot;: &quot;dialoffset&quot;}, {&quot;value&quot;: &quot;330&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;Dial Maximum&quot;, &quot;param&quot;: &quot;dialmax&quot;}, {&quot;value&quot;: &quot;0&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;Minimum Data Value&quot;, &quot;param&quot;: &quot;mindata&quot;}, {&quot;value&quot;: &quot;100&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;Maximum Data Value&quot;, &quot;param&quot;: &quot;maxdata&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToDisplayList(new MB_DialGauge(document, &quot;%(widgetid)s&quot;, %(dialoffset)s, %(dialmax)s, %(mindata)s, %(maxdata)s), &quot;%(outputtag)s&quot;, &quot;read&quot;);" mblogic:widgetname="Dial Pointer" mblogic:widgettype="dialpointer" transform="translate(59.874813,337.4701)">
      <g id="g3568" style="fill:#800000">
        <!-- This is the centre part of the pointer. -->
        <circle cx="0" cy="0" d="M 5,0 C 5,2.7614237 2.7614237,5 0,5 -2.7614237,5 -5,2.7614237 -5,0 c 0,-2.7614237 2.2385763,-5 5,-5 2.7614237,0 5,2.2385763 5,5 z" id="circle3570" r="5" sodipodi:cx="0" sodipodi:cy="0" sodipodi:rx="5" sodipodi:ry="5" style="stroke:#000000;stroke-width:2px"/>
        <circle cx="0" cy="0" d="M 1,0 C 1,0.55228475 0.55228475,1 0,1 -0.55228475,1 -1,0.55228475 -1,0 c 0,-0.55228475 0.44771525,-1 1,-1 0.55228475,0 1,0.44771525 1,1 z" id="circle3572" r="1" sodipodi:cx="0" sodipodi:cy="0" sodipodi:rx="1" sodipodi:ry="1" style="fill:#000000;stroke:#000000;stroke-width:1px"/>
        <!-- This is the pointer. -->
        <polygon id="polygon3574" points="-5,0 -0.6,40 0.6,40 5,0 0,5 " style="stroke:#000000;stroke-width:2px"/>
        <line id="line3576" style="stroke:#000000;stroke-width:1px" x1="0" x2="0" y1="5" y2="40"/>
      </g>
    </g>
    <g id="TankPumpRotor" inkscape:label="#g3680" mblogic:editcount="1" mblogic:inputfunc="[]" mblogic:menu="[{&quot;value&quot;: &quot;PumpSpeedActual&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Output Tag&quot;, &quot;param&quot;: &quot;outputtag&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToDisplayList(new MB_PumpRotate(document, &quot;%(widgetid)s&quot;, 19), &quot;%(outputtag)s&quot;, &quot;read&quot;);" mblogic:widgetname="Pump Rotor" mblogic:widgettype="pumprotor" transform="translate(254.11061,503.14836)">
      <g id="g3682">
        <polygon id="polygon3684" points="22,0 15,15 0,22 0,-22 -15,-15 -22,0 -22,0 " style="fill:#808080"/>
      </g>
    </g>
    <rect height="35" id="rect3697" rx="10" ry="10" style="fill:#ffffff;stroke:#d2b48c;stroke-width:5" width="100" x="152.14375" y="325.86417"/>
    <rect height="35" id="rect3708" rx="10" ry="10" style="fill:#ffffff;stroke:#d2b48c;stroke-width:5" width="100" x="409.09091" y="330.35623"/>
    <g id="g3746" transform="translate(251.78226,65.315405)">
      <rect height="40" id="rect3729" rx="2" style="fill:#808080;stroke:none;filter:url(#MB_DropShadowFilter-9)" width="80" x="2" y="2"/>
      <rect height="40" id="rect3731" rx="2" style="fill:url(#linearGradient3791);stroke:none" width="80" x="0" y="0"/>
      <rect height="36" id="rect3733" rx="2" style="fill:url(#linearGradient3793);stroke:#000000" width="76" x="2" y="2"/>
      <rect height="30" id="rect3735" rx="2" style="fill:#000000" width="70" x="5" y="5"/>
    </g>
    <g id="g3781" transform="matrix(2.0605814,0,0,1,214.08702,118.32199)">
      <rect height="40" id="rect3764" rx="2" style="fill:#808080;stroke:none;filter:url(#MB_DropShadowFilter-63)" width="150" x="2" y="2"/>
      <rect height="40" id="rect3766" rx="2" style="fill:url(#linearGradient3787);stroke:none" width="150" x="0" y="0"/>
      <rect height="36" id="rect3768" rx="2" style="fill:url(#linearGradient3789);stroke:#000000" width="146" x="2" y="2"/>
      <rect height="30" id="rect3770" rx="2" style="fill:#000000" width="140" x="5" y="5"/>
    </g>
    <g id="Tank1Digits" inkscape:label="#g3797" mblogic:editcount="1" mblogic:inputfunc="[]" mblogic:menu="[{&quot;value&quot;: &quot;Tank1Number&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Output Tag&quot;, &quot;param&quot;: &quot;outputtag&quot;}, {&quot;value&quot;: &quot;2&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;Decimals&quot;, &quot;param&quot;: &quot;decimals&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToDisplayList(new MB_NumericFloatDisplay(document, &quot;%(widgetid)s&quot;, &quot;%(decimals)s&quot;), &quot;%(outputtag)s&quot;, &quot;read&quot;);" mblogic:widgetname="Float Digits" mblogic:widgettype="text" transform="translate(190.14647,330.64444)">
      <text font-size="20" id="text3799" style="font-size:20px;text-anchor:end;fill:#008080;stroke:#008080" x="50" y="20">12.34</text>
    </g>
    <g id="Tank2Digits" inkscape:label="#g3811" mblogic:editcount="1" mblogic:inputfunc="[]" mblogic:menu="[{&quot;value&quot;: &quot;Tank2Number&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Output Tag&quot;, &quot;param&quot;: &quot;outputtag&quot;}, {&quot;value&quot;: &quot;2&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;Decimals&quot;, &quot;param&quot;: &quot;decimals&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToDisplayList(new MB_NumericFloatDisplay(document, &quot;%(widgetid)s&quot;, &quot;%(decimals)s&quot;), &quot;%(outputtag)s&quot;, &quot;read&quot;);" mblogic:widgetname="Float Digits" mblogic:widgettype="text" transform="translate(445.2968,336.03494)">
      <text font-size="20" id="text3813" style="font-size:20px;text-anchor:end;fill:#008080;stroke:#008080" x="50" y="20">12.34</text>
    </g>
    <rect height="341.82391" id="rect4122" rx="13.890056" ry="17.878658" style="fill:#9acc8d;fill-opacity:1;stroke:#000000;stroke-width:0.89614338;stroke-opacity:1" width="127.17378" x="525.52869" y="63.058159"/>
    <g class="sswitchactivate" id="PumpSSRev" inkscape:label="#g3895" mblogic:editcount="1" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBHMIProtocol.WriteImmediate(\&quot;%(inputtag)s\&quot;, %(value)s);&quot;}]" mblogic:menu="[{&quot;param&quot;: &quot;inputtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Input Tag&quot;, &quot;value&quot;: &quot;PumpSpeedCmd&quot;}, {&quot;param&quot;: &quot;value&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;Write Value&quot;, &quot;value&quot;: &quot;-5&quot;}]" mblogic:outputfunc="" mblogic:widgetname="Selector Switch Label" mblogic:widgettype="ss_label" onclick="MBHMIProtocol.WriteImmediate(&quot;PumpSpeedCmd&quot;, -5);" transform="translate(528.9326,187.97633)">
      <rect height="70" id="rect3897" style="fill:#808080" width="40" x="0" y="0"/>
      <text font-size="16" id="text3899" sodipodi:linespacing="125%" style="font-size:16px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;writing-mode:lr-tb;text-anchor:middle;font-family:Sans;-inkscape-font-specification:Sans" x="20" y="20">
        <tspan id="tspan4892" sodipodi:role="line" x="20" y="20">Rev</tspan>
      </text>
    </g>
    <g class="sswitchactivate" id="PumpSSStp" inkscape:label="#g3912" mblogic:editcount="1" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBHMIProtocol.WriteImmediate(\&quot;%(inputtag)s\&quot;, %(value)s);&quot;}]" mblogic:menu="[{&quot;param&quot;: &quot;inputtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Input Tag&quot;, &quot;value&quot;: &quot;PumpSpeedCmd&quot;}, {&quot;param&quot;: &quot;value&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;Write Value&quot;, &quot;value&quot;: &quot;0&quot;}]" mblogic:outputfunc="" mblogic:widgetname="Selector Switch Label" mblogic:widgettype="ss_label" onclick="MBHMIProtocol.WriteImmediate(&quot;PumpSpeedCmd&quot;, 0);" transform="translate(568.76654,187.98875)">
      <rect height="70" id="rect3914" style="fill:#808080" width="40" x="0" y="0"/>
      <text font-size="16" id="text3916" sodipodi:linespacing="125%" style="font-size:16px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;writing-mode:lr-tb;text-anchor:middle;font-family:Sans;-inkscape-font-specification:Sans" x="20" y="20">
        <tspan id="tspan4894" sodipodi:role="line" x="20" y="20">Stp</tspan>
      </text>
    </g>
    <g class="sswitchactivate" id="PumpSSFwd" inkscape:label="#g5176" mblogic:editcount="1" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBHMIProtocol.WriteImmediate(\&quot;%(inputtag)s\&quot;, %(value)s);&quot;}]" mblogic:menu="[{&quot;param&quot;: &quot;inputtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Input Tag&quot;, &quot;value&quot;: &quot;PumpSpeedCmd&quot;}, {&quot;param&quot;: &quot;value&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;Write Value&quot;, &quot;value&quot;: &quot;5&quot;}]" mblogic:outputfunc="" mblogic:widgetname="Selector Switch Label" mblogic:widgettype="ss_label" onclick="MBHMIProtocol.WriteImmediate(&quot;PumpSpeedCmd&quot;, 5);" transform="translate(608.75464,188.08532)">
      <rect height="70" id="rect5178" style="fill:#808080" width="40" x="0" y="0"/>
      <text font-size="16" id="text5180" sodipodi:linespacing="125%" style="font-size:16px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;writing-mode:lr-tb;text-anchor:middle;font-family:Sans;-inkscape-font-specification:Sans" x="20" y="20">
        <tspan id="tspan5191" sodipodi:role="line" x="20" y="20">Fwd</tspan>
      </text>
    </g>
    <g id="PumpSS" inkscape:label="#g3863" mblogic:editcount="1" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBHMIProtocol.WriteImmediate(\&quot;%(inputtag)s\&quot;, 0);&quot;}]" mblogic:menu="[{&quot;param&quot;: &quot;inputtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Input Tag&quot;, &quot;value&quot;: &quot;PumpSpeedCmd&quot;}, {&quot;param&quot;: &quot;switchtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Switch Tag&quot;, &quot;value&quot;: &quot;PumpSpeedCmd&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToDisplayList(new MB_3PosSSDisplay(document, &quot;%(widgetid)s&quot;, -60, 0, 60), &quot;%(switchtag)s&quot;, &quot;read&quot;);" mblogic:widgetname="3 Pos SS" mblogic:widgettype="ss3short" onclick="MBHMIProtocol.WriteImmediate(&quot;PumpSpeedCmd&quot;, 0);" transform="translate(590.60387,258.38512)">
      <!-- This is a decorative nut. -->
      <polygon id="polygon3865" points="-18,45 18,45 45,18 45,-18 18,-45 18,-45 -18,-45 -45,-18 -45,18 " style="fill:#808080;stroke:none;filter:url(#MB_DropShadowFilter-7)" transform="translate(5,5)"/>
      <polygon id="polygon3867" points="-18,45 18,45 45,18 45,-18 18,-45 18,-45 -18,-45 -45,-18 -45,18 " style="fill:url(#MB_SilverGradient);stroke:none"/>
      <g class="buttonactivate" id="g3869">
        <!-- This forms the circular rotating inner area of the switch. -->
        <circle cx="0" cy="0" d="M 35,0 C 35,19.329966 19.329966,35 0,35 -19.329966,35 -35,19.329966 -35,0 c 0,-19.329966 15.670034,-35 35,-35 19.329966,0 35,15.670034 35,35 z" id="circle3871" r="35" sodipodi:cx="0" sodipodi:cy="0" sodipodi:rx="35" sodipodi:ry="35" style="fill:#ffff00;stroke:#ffff00;stroke-width:5px"/>
        <!-- This is the rotating actuator. -->
        <rect height="66" id="rect3873" rx="5" style="fill:#808080;stroke-width:2px" width="16" x="-8" y="-33"/>
        <polygon id="polygon3875" points="0,-30 0,-30 -5,-20 5,-20 " style="fill:#ffffff"/>
      </g>
    </g>
    <g id="g3973" transform="matrix(1.5817551,0,0,1.4610878,557.80906,114.71862)">
      <rect height="40" id="rect3956" rx="2" style="fill:#808080;stroke:none;filter:url(#MB_DropShadowFilter-4)" width="45" x="2" y="2"/>
      <rect height="40" id="rect3958" rx="2" style="fill:url(#linearGradient4014);stroke:none" width="45" x="0" y="0"/>
      <rect height="36" id="rect3960" rx="2" style="fill:url(#linearGradient4016);stroke:#000000" width="41" x="2" y="2"/>
      <rect height="30" id="rect3962" rx="2" style="fill:#000000" width="35" x="5" y="5"/>
    </g>
    <g id="g4008" transform="matrix(1.8226603,0,0,1.5194085,549.08974,318.79372)">
      <rect height="54" id="rect3991" rx="2" style="fill:#808080;stroke:none;filter:url(#MB_DropShadowFilter-1)" width="46" x="2" y="2"/>
      <rect height="54" id="rect3993" rx="2" style="fill:url(#linearGradient4018);stroke:none" width="46" x="0" y="0"/>
      <rect height="50" id="rect3995" rx="2" style="fill:url(#linearGradient4020);stroke:#000000" width="42" x="2" y="2"/>
      <rect height="30" id="rect3997" rx="2" style="fill:#000000" width="36" x="5" y="12"/>
    </g>
    <g id="PumpActual" inkscape:label="#g4024" mblogic:editcount="2" mblogic:inputfunc="[]" mblogic:menu="[{&quot;value&quot;: &quot;PumpSpeedActual&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Output Tag&quot;, &quot;param&quot;: &quot;outputtag&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToDisplayList(new MB_NumericDisplay(document, &quot;%(widgetid)s&quot;), &quot;%(outputtag)s&quot;, &quot;read&quot;);" mblogic:widgetname="Integer Digits" mblogic:widgettype="text" transform="matrix(1.1764388,0,0,1.8469328,559.61192,121.30543)">
      <text font-size="20" id="text4026" style="font-size:20px;text-anchor:end;fill:#ff0000;stroke:#ff0000" x="50" y="20">1234</text>
    </g>
    <g id="PumpCmd" inkscape:label="#g4038" mblogic:editcount="1" mblogic:inputfunc="[]" mblogic:menu="[{&quot;value&quot;: &quot;PumpSpeedCmd&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Output Tag&quot;, &quot;param&quot;: &quot;outputtag&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToDisplayList(new MB_NumericDisplay(document, &quot;%(widgetid)s&quot;), &quot;%(outputtag)s&quot;, &quot;read&quot;);" mblogic:widgetname="Integer Digits" mblogic:widgettype="text" transform="matrix(1.4051557,0,0,1.886325,550.86192,337.43366)">
      <text font-size="20" id="text4040" style="font-size:20px;text-anchor:end;fill:#ff0000;stroke:#ff0000" x="50" y="20">1234</text>
    </g>
    <g class="buttonactivate" id="PumpInc" inkscape:label="#g4059" mblogic:editcount="1" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBHMIProtocol.WriteIncImmediate(\&quot;%(inputtag)s\&quot;, \&quot;%(reftag)s\&quot;, %(inc)s, %(limit)s);&quot;}]" mblogic:menu="[{&quot;param&quot;: &quot;inputtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Input Tag&quot;, &quot;value&quot;: &quot;PumpSpeedCmd&quot;}, {&quot;param&quot;: &quot;reftag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Reference Tag&quot;, &quot;value&quot;: &quot;PumpSpeedCmd&quot;}, {&quot;param&quot;: &quot;inc&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;Increment&quot;, &quot;value&quot;: &quot;1&quot;}, {&quot;param&quot;: &quot;limit&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;Limit&quot;, &quot;value&quot;: &quot;9&quot;}]" mblogic:outputfunc="" mblogic:widgetname="Increment Push Button" mblogic:widgettype="pb_inc" onclick="MBHMIProtocol.WriteIncImmediate(&quot;PumpSpeedCmd&quot;, &quot;PumpSpeedCmd&quot;, 1, 9);" style="fill:url(#linearGradient4112);stroke:#000000" transform="matrix(1.5263241,0,0,0.25842609,555.71546,323.76873)">
      <!-- This provides the relief. -->
      <polygon id="polygon4061" points="44,42 40,40 0,40 0,40 4,42 " style="fill:url(#linearGradient4106)"/>
      <polygon id="polygon4063" points="44,42 40,40 20,0 20,0 24,2 " style="fill:url(#linearGradient4108)"/>
      <!-- This is the button. -->
      <polygon id="polygon4065" points="0,40 20,0 40,40 0,40 " style="fill:url(#linearGradient4110)"/>
    </g>
    <g class="buttonactivate" id="PumpDec" inkscape:label="#g4087" mblogic:editcount="1" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBHMIProtocol.WriteIncImmediate(\&quot;%(inputtag)s\&quot;, \&quot;%(reftag)s\&quot;, %(inc)s, %(limit)s);&quot;}]" mblogic:menu="[{&quot;param&quot;: &quot;inputtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Input Tag&quot;, &quot;value&quot;: &quot;PumpSpeedCmd&quot;}, {&quot;param&quot;: &quot;reftag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Reference Tag&quot;, &quot;value&quot;: &quot;PumpSpeedCmd&quot;}, {&quot;param&quot;: &quot;inc&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;Increment&quot;, &quot;value&quot;: &quot;-1&quot;}, {&quot;param&quot;: &quot;limit&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;Limit&quot;, &quot;value&quot;: &quot;-9&quot;}]" mblogic:outputfunc="" mblogic:widgetname="Decrement Push Button" mblogic:widgettype="pb_dec" onclick="MBHMIProtocol.WriteIncImmediate(&quot;PumpSpeedCmd&quot;, &quot;PumpSpeedCmd&quot;, -1, -9);" style="fill:url(#linearGradient4120);stroke:#000000" transform="matrix(1.5553724,0,0,0.30340785,553.52831,384.10245)">
      <!-- This provides the relief. -->
      <polygon id="polygon4089" points="7,0 45,0 42,2 2,2 2,2 " style="fill:url(#linearGradient4114)"/>
      <polygon id="polygon4091" points="42,2 22,42 24,41 45,0 45,0 " style="fill:url(#linearGradient4116)"/>
      <!-- This is the button. -->
      <polygon id="polygon4093" points="2,2 2,2 22,42 42,2 " style="fill:url(#linearGradient4118)"/>
    </g>
    <g class="buttonactivate" id="PB1" inkscape:label="#g4922" mblogic:editcount="1" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBHMIProtocol.WriteImmediate(\&quot;%(inputtag)s\&quot;, 1); window.setTimeout(MBHMIProtocol.WritePulse, %(pulse)s, \&quot;%(inputtag)s\&quot;, 0, MBHMIProtocol);&quot;}]" mblogic:menu="[{&quot;param&quot;: &quot;inputtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Input Tag&quot;, &quot;value&quot;: &quot;PB1&quot;}, {&quot;param&quot;: &quot;pulse&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;Pulse Length (msec)&quot;, &quot;value&quot;: &quot;1000&quot;}]" mblogic:outputfunc="" mblogic:widgetname="Pulse Push Button" mblogic:widgettype="pb_pulse" onclick="MBHMIProtocol.WriteImmediate(&quot;PB1&quot;, 1); window.setTimeout(MBHMIProtocol.WritePulse, 1000, &quot;PB1&quot;, 0, MBHMIProtocol);" transform="translate(757.28452,22.548655)">
      <rect height="80" id="rect4924" rx="15" style="fill:#808080;stroke:none;filter:url(#MB_DropShadowFilter-83)" width="80" x="7" y="7"/>
      <rect height="80" id="rect4926" rx="15" style="fill:url(#MB_KhakiGradient)" width="80" x="0" y="0"/>
      <text font-size="24" id="text4928" sodipodi:linespacing="125%" style="font-size:24px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;writing-mode:lr-tb;text-anchor:middle;stroke-width:2px;font-family:Sans;-inkscape-font-specification:Sans" x="40" y="50">
        <tspan id="tspan5351" sodipodi:role="line" x="40" y="50">PB1</tspan>
      </text>
    </g>
    <g id="PL1" inkscape:label="#g5054" mblogic:editcount="1" mblogic:inputfunc="[]" mblogic:menu="[{&quot;value&quot;: &quot;PL1&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Output Tag&quot;, &quot;param&quot;: &quot;outputtag&quot;}, {&quot;value&quot;: &quot;black&quot;, &quot;type&quot;: &quot;colour&quot;, &quot;name&quot;: &quot;Init Colour&quot;, &quot;param&quot;: &quot;initcolour&quot;}, {&quot;value&quot;: &quot;aqua&quot;, &quot;type&quot;: &quot;colour&quot;, &quot;name&quot;: &quot;Off Colour&quot;, &quot;param&quot;: &quot;offcolour&quot;}, {&quot;value&quot;: &quot;green&quot;, &quot;type&quot;: &quot;colour&quot;, &quot;name&quot;: &quot;On Colour&quot;, &quot;param&quot;: &quot;oncolour&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToDisplayList(new MB_PilotLight(document, &quot;%(widgetid)s&quot;, &quot;%(initcolour)s&quot;, &quot;%(offcolour)s&quot;, &quot;%(oncolour)s&quot;), &quot;%(outputtag)s&quot;, &quot;read&quot;);" mblogic:widgetname="Pilot Light" mblogic:widgettype="pilot_light" transform="translate(659.84918,16.751822)">
      <!-- This is a decorative nut. -->
      <polygon id="polygon5056" points="27,0 0,27 0,63 27,90 63,90 90,63 90,27 63,0 63,0 " style="fill:#808080;stroke:none;filter:url(#MB_DropShadowFilter-86)" transform="translate(5,5)"/>
      <polygon id="polygon5058" points="27,0 0,27 0,63 27,90 63,90 90,63 90,27 63,0 63,0 " style="fill:url(#MB_SilverGradient-2);stroke:none"/>
      <!-- This is the part which changes colour. -->
      <circle cx="45" cy="45" d="M 80,45 C 80,64.329966 64.329966,80 45,80 25.670034,80 10,64.329966 10,45 10,25.670034 25.670034,10 45,10 64.329966,10 80,25.670034 80,45 z" id="circle5060" r="35" sodipodi:cx="45" sodipodi:cy="45" sodipodi:rx="35" sodipodi:ry="35" style="stroke:#000000;stroke-width:5px"/>
    </g>
    <g id="PL2" inkscape:label="#g5087" mblogic:editcount="1" mblogic:inputfunc="[]" mblogic:menu="[{&quot;value&quot;: &quot;PL2&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Output Tag&quot;, &quot;param&quot;: &quot;outputtag&quot;}, {&quot;value&quot;: &quot;black&quot;, &quot;type&quot;: &quot;colour&quot;, &quot;name&quot;: &quot;Init Colour&quot;, &quot;param&quot;: &quot;initcolour&quot;}, {&quot;value&quot;: &quot;green&quot;, &quot;type&quot;: &quot;colour&quot;, &quot;name&quot;: &quot;Off Colour&quot;, &quot;param&quot;: &quot;offcolour&quot;}, {&quot;value&quot;: &quot;red&quot;, &quot;type&quot;: &quot;colour&quot;, &quot;name&quot;: &quot;On Colour&quot;, &quot;param&quot;: &quot;oncolour&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToDisplayList(new MB_PilotLight(document, &quot;%(widgetid)s&quot;, &quot;%(initcolour)s&quot;, &quot;%(offcolour)s&quot;, &quot;%(oncolour)s&quot;), &quot;%(outputtag)s&quot;, &quot;read&quot;);" mblogic:widgetname="Pilot Light" mblogic:widgettype="pilot_light" transform="translate(662.54443,111.98399)">
      <!-- This is a decorative nut. -->
      <polygon id="polygon5089" points="0,27 0,63 27,90 63,90 90,63 90,27 63,0 63,0 27,0 " style="fill:#808080;stroke:none;filter:url(#MB_DropShadowFilter-829)" transform="translate(5,5)"/>
      <polygon id="polygon5091" points="0,27 0,63 27,90 63,90 90,63 90,27 63,0 63,0 27,0 " style="fill:url(#MB_SilverGradient-3);stroke:none"/>
      <!-- This is the part which changes colour. -->
      <rect height="60" id="rect5093" rx="15" style="stroke:#000000;stroke-width:5px" width="60" x="15" y="15"/>
    </g>
    <g id="PL3" inkscape:label="#g5120" mblogic:editcount="1" mblogic:inputfunc="[]" mblogic:menu="[{&quot;value&quot;: &quot;PL3&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Output Tag&quot;, &quot;param&quot;: &quot;outputtag&quot;}, {&quot;value&quot;: &quot;black&quot;, &quot;type&quot;: &quot;colour&quot;, &quot;name&quot;: &quot;Init Colour&quot;, &quot;param&quot;: &quot;initcolour&quot;}, {&quot;value&quot;: &quot;grey&quot;, &quot;type&quot;: &quot;colour&quot;, &quot;name&quot;: &quot;Off Colour&quot;, &quot;param&quot;: &quot;offcolour&quot;}, {&quot;value&quot;: &quot;yellow&quot;, &quot;type&quot;: &quot;colour&quot;, &quot;name&quot;: &quot;On Colour&quot;, &quot;param&quot;: &quot;oncolour&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToDisplayList(new MB_PilotLight(document, &quot;%(widgetid)s&quot;, &quot;%(initcolour)s&quot;, &quot;%(offcolour)s&quot;, &quot;%(oncolour)s&quot;), &quot;%(outputtag)s&quot;, &quot;read&quot;);" mblogic:widgetname="Pilot Light" mblogic:widgettype="pilot_light" transform="translate(667.03652,210.80983)">
      <!-- This is a decorative nut. -->
      <polygon id="polygon5122" points="27,0 0,27 0,63 27,90 63,90 90,63 90,27 63,0 63,0 " style="fill:#808080;stroke:none;filter:url(#MB_DropShadowFilter-15)" transform="translate(5,5)"/>
      <polygon id="polygon5124" points="27,0 0,27 0,63 27,90 63,90 90,63 90,27 63,0 63,0 " style="fill:url(#MB_SilverGradient-5);stroke:none"/>
      <!-- This is the part which changes colour. -->
      <polygon id="polygon5126" points="32,10 10,32 10,58 32,80 58,80 80,58 80,32 58,10 58,10 " style="stroke:#000000;stroke-width:5px"/>
    </g>
    <text id="text5193" sodipodi:linespacing="125%" style="font-size:23.49543571px;font-style:normal;font-weight:normal;text-align:start;line-height:125%;letter-spacing:0px;word-spacing:0px;writing-mode:lr-tb;text-anchor:start;fill:#000000;fill-opacity:1;stroke:none;font-family:Bitstream Vera Sans" transform="scale(0.74246921,1.3468572)" x="721.74469" xml:space="preserve" y="76.125046"><tspan id="tspan5197" sodipodi:role="line" x="721.74469" y="76.125046">Pump Speed</tspan></text>
    <text id="text5199" sodipodi:linespacing="125%" style="font-size:32.68829346px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Bitstream Vera Sans" transform="scale(0.81720731,1.2236797)" x="154.40874" xml:space="preserve" y="79.430901"><tspan id="tspan5201" sodipodi:role="line" x="154.40874" y="79.430901">Msg ID</tspan></text>
    <text id="text5203" sodipodi:linespacing="125%" style="font-size:26.88698196px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Bitstream Vera Sans" transform="scale(0.69274631,1.4435299)" x="177.11417" xml:space="preserve" y="106.55482"><tspan id="tspan5205" sodipodi:role="line" x="177.11417" y="106.55482">Server ID</tspan></text>
    <g id="PL4" inkscape:label="#g5219" mblogic:editcount="1" mblogic:inputfunc="[]" mblogic:menu="[{&quot;value&quot;: &quot;PL4&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Output Tag&quot;, &quot;param&quot;: &quot;outputtag&quot;}, {&quot;value&quot;: &quot;black&quot;, &quot;type&quot;: &quot;colour&quot;, &quot;name&quot;: &quot;Init Colour&quot;, &quot;param&quot;: &quot;initcolour&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToDisplayList(new MB_PLMultiColour(document, &quot;%(widgetid)s&quot;, &quot;%(initcolour)s&quot;, [&quot;aqua&quot;, &quot;blue&quot;, &quot;cyan&quot;, &quot;grey&quot;, &quot;green&quot;, &quot;indigo&quot;, &quot;khaki&quot;, &quot;lime&quot;, &quot;maroon&quot;, &quot;navy&quot;, &quot;olive&quot;, &quot;orange&quot;, &quot;purple&quot;, &quot;red&quot;, &quot;silver&quot;, &quot;tan&quot;, &quot;teal&quot;, &quot;violet&quot;, &quot;white&quot;, &quot;yellow&quot;]), &quot;%(outputtag)s&quot;, &quot;read&quot;);" mblogic:widgetname="Pilot Light Multi-colour" mblogic:widgettype="pl_multicolour" transform="translate(664.15082,306.97593)">
      <!-- This is a decorative nut. -->
      <polygon id="polygon5221" points="27,0 0,27 0,63 27,90 63,90 90,63 90,27 63,0 63,0 " style="fill:#808080;stroke:none;filter:url(#MB_DropShadowFilter-93)" transform="translate(5,5)"/>
      <polygon id="polygon5223" points="27,0 0,27 0,63 27,90 63,90 90,63 90,27 63,0 63,0 " style="fill:url(#MB_SilverGradient-58);stroke:none"/>
      <!-- This is the part which changes colour. -->
      <circle cx="45" cy="45" d="M 80,45 C 80,64.329966 64.329966,80 45,80 25.670034,80 10,64.329966 10,45 10,25.670034 25.670034,10 45,10 64.329966,10 80,25.670034 80,45 z" id="circle5225" r="35" sodipodi:cx="45" sodipodi:cy="45" sodipodi:rx="35" sodipodi:ry="35" style="stroke:#000000;stroke-width:5px"/>
    </g>
    <g class="buttonactivate" id="PB4" inkscape:label="#g5252" mblogic:editcount="1" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBHMIProtocol.WriteIncImmediate(\&quot;%(inputtag)s\&quot;, \&quot;%(reftag)s\&quot;, %(inc)s, %(limit)s);&quot;}]" mblogic:menu="[{&quot;param&quot;: &quot;inputtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Input Tag&quot;, &quot;value&quot;: &quot;PB4&quot;}, {&quot;param&quot;: &quot;reftag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Reference Tag&quot;, &quot;value&quot;: &quot;PL4&quot;}, {&quot;param&quot;: &quot;inc&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;Increment&quot;, &quot;value&quot;: &quot;1&quot;}, {&quot;param&quot;: &quot;limit&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;Limit&quot;, &quot;value&quot;: &quot;6&quot;}]" mblogic:outputfunc="" mblogic:widgetname="Increment Push Button" mblogic:widgettype="pb_inc" onclick="MBHMIProtocol.WriteIncImmediate(&quot;PB4&quot;, &quot;PL4&quot;, 1, 6);" transform="translate(763.4423,317.3287)">
      <rect height="80" id="rect5254" rx="15" style="fill:#808080;stroke:none;filter:url(#MB_DropShadowFilter-42)" width="80" x="7" y="7"/>
      <rect height="80" id="rect5256" rx="15" style="fill:url(#MB_YellowGradient-05)" width="80" x="0" y="0"/>
      <text font-size="24" id="text5258" sodipodi:linespacing="125%" style="font-size:24px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;writing-mode:lr-tb;text-anchor:middle;stroke-width:2px;font-family:Sans;-inkscape-font-specification:Sans" x="40" y="50">
        <tspan id="tspan5357" sodipodi:role="line" x="40" y="50">PB4</tspan>
      </text>
    </g>
    <g class="buttonactivate" id="PB5" inkscape:label="#g5280" mblogic:editcount="1" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBHMIProtocol.WriteToggleImmediate(\&quot;%(inputtag)s\&quot;, \&quot;%(inputtag)s\&quot;);&quot;}]" mblogic:menu="[{&quot;value&quot;: &quot;PB5&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Input Tag&quot;, &quot;param&quot;: &quot;inputtag&quot;}, {&quot;value&quot;: &quot;PB5&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Output Tag&quot;, &quot;param&quot;: &quot;outputtag&quot;}, {&quot;value&quot;: &quot;black&quot;, &quot;type&quot;: &quot;colour&quot;, &quot;name&quot;: &quot;Init Colour&quot;, &quot;param&quot;: &quot;initcolour&quot;}, {&quot;value&quot;: &quot;green&quot;, &quot;type&quot;: &quot;colour&quot;, &quot;name&quot;: &quot;Off Colour&quot;, &quot;param&quot;: &quot;offcolour&quot;}, {&quot;value&quot;: &quot;orange&quot;, &quot;type&quot;: &quot;colour&quot;, &quot;name&quot;: &quot;On Colour&quot;, &quot;param&quot;: &quot;oncolour&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToDisplayList(new MB_PilotLight(document, &quot;%(widgetid)s&quot;, &quot;%(initcolour)s&quot;, &quot;%(offcolour)s&quot;, &quot;%(oncolour)s&quot;), &quot;%(outputtag)s&quot;, &quot;read&quot;);" mblogic:widgetname="Toggle Illuminated Push Button" mblogic:widgettype="pb_toggle_illum" onclick="MBHMIProtocol.WriteToggleImmediate(&quot;PB5&quot;, &quot;PB5&quot;);" transform="translate(530.9311,425.32571)">
      <rect height="80" id="rect5282" rx="15" style="fill:#808080;stroke:none;filter:url(#MB_DropShadowFilter-68)" width="80" x="7" y="7"/>
      <rect height="80" id="rect5284" rx="15" width="80" x="0" y="0"/>
      <text font-size="24" id="text5286" sodipodi:linespacing="125%" style="font-size:24px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;writing-mode:lr-tb;text-anchor:middle;fill:#800000;stroke:#800000;stroke-width:2px;font-family:Sans;-inkscape-font-specification:Sans" x="40" y="50">
        <tspan id="tspan5359" sodipodi:role="line" x="40" y="50">PB5</tspan>
      </text>
    </g>
    <g id="g5327" transform="matrix(1.6381126,0,0,1,691.62528,420.00299)">
      <rect height="40" id="rect5310" rx="2" style="fill:#808080;stroke:none;filter:url(#MB_DropShadowFilter-67)" width="80" x="2" y="2"/>
      <rect height="40" id="rect5312" rx="2" style="fill:url(#linearGradient5333);stroke:none" width="80" x="0" y="0"/>
      <rect height="36" id="rect5314" rx="2" style="fill:url(#linearGradient5335);stroke:#000000" width="76" x="2" y="2"/>
      <rect height="30" id="rect5316" rx="2" style="fill:#000000" width="70" x="5" y="5"/>
    </g>
    <g id="Tank2Gauge" inkscape:label="#g3450" mblogic:editcount="1" mblogic:inputfunc="[]" mblogic:menu="[{&quot;param&quot;: &quot;outputtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Output Tag&quot;, &quot;value&quot;: &quot;Tank2Level&quot;}, {&quot;param&quot;: &quot;min&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;Minimum Value&quot;, &quot;value&quot;: &quot;0&quot;}, {&quot;param&quot;: &quot;max&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;Maximum Value&quot;, &quot;value&quot;: &quot;100&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToDisplayList(new MB_ColumnGauge(document, &quot;%(widgetid)s&quot;, &quot;MB_Column_PurpleGradient&quot;, &quot;%(min)s&quot;, &quot;%(max)s&quot;), &quot;%(outputtag)s&quot;, &quot;read&quot;);" mblogic:widgetname="Column Gauge Rectangle" mblogic:widgettype="column_gauge" style="fill:url(#linearGradient3467)" transform="translate(307.55606,283.3707)">
      <!-- This is the actual column. The fill value will be added later. -->
      <rect height="100" id="rect3452" style="fill:url(#linearGradient3465);stroke:none" width="10" x="0" y="0"/>
    </g>
    <g id="Tank2Column" inkscape:label="#g3514" mblogic:editcount="1" mblogic:inputfunc="[]" mblogic:menu="[{&quot;param&quot;: &quot;outputtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Output Tag&quot;, &quot;value&quot;: &quot;Tank2Level&quot;}, {&quot;param&quot;: &quot;min&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;Minimum Value&quot;, &quot;value&quot;: &quot;0&quot;}, {&quot;param&quot;: &quot;max&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;Maximum Value&quot;, &quot;value&quot;: &quot;100&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToDisplayList(new MB_ColumnGauge(document, &quot;%(widgetid)s&quot;, &quot;MB_Column_LimeGradient&quot;, &quot;%(min)s&quot;, &quot;%(max)s&quot;), &quot;%(outputtag)s&quot;, &quot;read&quot;);" mblogic:widgetname="Tank Column Polygon" mblogic:widgettype="column_gauge" style="fill:url(#linearGradient3531)" transform="translate(364.91285,258.26587)">
      <!-- This is the actual tank column. The fill value will be added later. -->
      <polygon id="polygon3516" points="50,137 37,87 50,62 37,32 50,0 0,0 0,0 10,50 0,87 10,125 0,150 5,187 0,205 12,225 37,225 50,200 37,162 " style="fill:url(#linearGradient3529);stroke:#000000;stroke-width:2"/>
    </g>
    <g id="SysMsgID" inkscape:label="#g3446" mblogic:editcount="1" mblogic:inputfunc="[]" mblogic:menu="[{&quot;value&quot;: &quot;&quot;, &quot;type&quot;: &quot;none&quot;, &quot;name&quot;: &quot;&quot;, &quot;param&quot;: &quot;none&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToDisplayList(new MB_NumericDisplay(document, &quot;%(widgetid)s&quot;), &quot;&quot;, &quot;msgid&quot;);" mblogic:widgetname="Server Message ID" mblogic:widgettype="text" transform="translate(274.56488,72.992727)">
      <text font-size="20" id="text3448" style="font-size:20px;text-anchor:end;fill:#ff0000;stroke:#ff0000" x="50" y="20">msgid</text>
    </g>
    <g id="SysServerID" inkscape:label="#g3460" mblogic:editcount="1" mblogic:inputfunc="[]" mblogic:menu="[{&quot;value&quot;: &quot;&quot;, &quot;type&quot;: &quot;none&quot;, &quot;name&quot;: &quot;&quot;, &quot;param&quot;: &quot;none&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToDisplayList(new MB_StringDisplay(document, &quot;%(widgetid)s&quot;), &quot;&quot;, &quot;serverid&quot;);" mblogic:widgetname="Centred Server ID" mblogic:widgettype="text" transform="translate(344.50926,125.02371)">
      <text font-size="20" id="text3462" style="font-size:20px;text-anchor:middle;fill:#ffa500;stroke:#ffa500" x="25" y="20">S_ID</text>
    </g>
    <text id="text3454" sodipodi:linespacing="125%" style="font-size:40px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Bitstream Vera Sans" x="62.326042" xml:space="preserve" y="249.30418"><tspan id="tspan3456" sodipodi:role="line" x="62.326042" y="249.30418">Tank 1</tspan></text>
    <text id="text3458" sodipodi:linespacing="125%" style="font-size:40px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Bitstream Vera Sans" x="336.77933" xml:space="preserve" y="251.49104"><tspan id="tspan3460" sodipodi:role="line" x="336.77933" y="251.49104">Tank 2</tspan></text>
    <g id="PL4TextList" inkscape:label="#g3639" mblogic:editcount="2" mblogic:inputfunc="[]" mblogic:menu="[{&quot;value&quot;: &quot;PL4&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Output Tag&quot;, &quot;param&quot;: &quot;outputtag&quot;}, {&quot;value&quot;: [&quot;Lorem&quot;, &quot;ipsum&quot;, &quot;dolor&quot;, &quot;sit&quot;, &quot;amet&quot;, &quot;consectetur&quot;, &quot;adipisicing&quot;, &quot;elit&quot;, &quot;sed&quot;, &quot;do&quot;, &quot;eiusmod&quot;, &quot;tempor&quot;, &quot;incididunt&quot;, &quot;ut&quot;, &quot;labore&quot;, &quot;et&quot;, &quot;dolore&quot;, &quot;magna&quot;, &quot;aliqua&quot;, &quot;enim&quot;], &quot;type&quot;: &quot;textlist&quot;, &quot;name&quot;: &quot;Text List&quot;, &quot;param&quot;: &quot;textlist&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToDisplayList(new MB_TextDisplay(document, &quot;%(widgetid)s&quot;, %(textlist)s), &quot;%(outputtag)s&quot;, &quot;read&quot;);" mblogic:widgetname="Text List Display Centred" mblogic:widgettype="textlist" transform="translate(726.43011,426.91793)">
      <text font-size="20" id="text3641" style="font-size:20px;text-anchor:middle;fill:#808000;stroke:#808000" x="25" y="20">List</text>
    </g>
    <g class="buttonactivate" id="PB2" inkscape:label="#g3886" mblogic:editcount="1" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBHMIProtocol.WriteToggleImmediate(\&quot;%(inputtag)s\&quot;, \&quot;%(inputtag)s\&quot;);&quot;}]" mblogic:menu="[{&quot;param&quot;: &quot;inputtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Input Tag&quot;, &quot;value&quot;: &quot;PB2&quot;}]" mblogic:outputfunc="" mblogic:widgetname="Toggle Push Button 1" mblogic:widgettype="pb_toggle" onclick="MBHMIProtocol.WriteToggleImmediate(&quot;PB2&quot;, &quot;PB2&quot;);" transform="translate(762.17175,119.12242)">
      <rect height="80" id="rect3888" rx="15" style="fill:#808080;stroke:none;filter:url(#MB_DropShadowFilter-648)" width="80" x="7" y="7"/>
      <rect height="80" id="rect3890" rx="15" style="fill:url(#MB_RedGradient-9)" width="80" x="0" y="0"/>
      <text font-size="24" id="text3892" sodipodi:linespacing="125%" style="font-size:24px;text-anchor:middle;stroke-width:2px;-inkscape-font-specification:Sans;font-family:Sans;font-weight:normal;font-style:normal;font-stretch:normal;font-variant:normal;text-align:center;writing-mode:lr;line-height:125%" x="40" y="50">
        <tspan id="tspan3940" sodipodi:role="line">PB2</tspan>
      </text>
    </g>
    <g class="buttonactivate" id="PB3" inkscape:label="#g3919" mblogic:editcount="1" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBHMIProtocol.WriteToggleImmediate(\&quot;%(inputtag)s\&quot;, \&quot;%(inputtag)s\&quot;);&quot;}]" mblogic:menu="[{&quot;param&quot;: &quot;inputtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Input Tag&quot;, &quot;value&quot;: &quot;PB3&quot;}]" mblogic:outputfunc="" mblogic:widgetname="Toggle Push Button 1" mblogic:widgettype="pb_toggle" onclick="MBHMIProtocol.WriteToggleImmediate(&quot;PB3&quot;, &quot;PB3&quot;);" transform="translate(764.71285,216.95501)">
      <rect height="80" id="rect3921" rx="15" style="fill:#808080;stroke:none;filter:url(#MB_DropShadowFilter-5)" width="80" x="7" y="7"/>
      <rect height="80" id="rect3923" rx="15" style="fill:url(#MB_BlueGradient-6)" width="80" x="0" y="0"/>
      <text font-size="24" id="text3925-0" sodipodi:linespacing="125%" style="font-size:24px;text-anchor:middle;stroke-width:2px;-inkscape-font-specification:Sans;font-family:Sans;font-weight:normal;font-style:normal;font-stretch:normal;font-variant:normal;text-align:center;writing-mode:lr;line-height:125%" x="40" y="50">
        <tspan id="tspan3942" sodipodi:role="line">PB3</tspan>
      </text>
    </g>
    <g id="TankPipe1" inkscape:label="#g3886" mblogic:editcount="1" mblogic:inputfunc="[]" mblogic:menu="[{&quot;param&quot;: &quot;outputtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Output Tag&quot;, &quot;value&quot;: &quot;PumpSpeedActual&quot;}, {&quot;param&quot;: &quot;initcolour&quot;, &quot;type&quot;: &quot;colour&quot;, &quot;name&quot;: &quot;Init Colour&quot;, &quot;value&quot;: &quot;black&quot;}, {&quot;param&quot;: &quot;offcolour&quot;, &quot;type&quot;: &quot;colour&quot;, &quot;name&quot;: &quot;Off Colour&quot;, &quot;value&quot;: &quot;green&quot;}, {&quot;param&quot;: &quot;oncolour&quot;, &quot;type&quot;: &quot;colour&quot;, &quot;name&quot;: &quot;On Colour&quot;, &quot;value&quot;: &quot;red&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToDisplayList(new MB_Pipe2(document, &quot;%(widgetid)s&quot;, &quot;%(initcolour)s&quot;, &quot;%(offcolour)s&quot;, &quot;%(oncolour)s&quot;), &quot;%(outputtag)s&quot;, &quot;read&quot;);" mblogic:widgetname="Pipe" mblogic:widgettype="pipe" transform="matrix(2.3658446,0,0,0.53624813,120.14948,481.8012)">
      <rect height="50" id="rect3888-7" rx="0" style="stroke:none" width="10" x="0" y="0"/>
    </g>
    <g id="TankPipe3" inkscape:label="#g3900" mblogic:editcount="1" mblogic:inputfunc="[]" mblogic:menu="[{&quot;param&quot;: &quot;outputtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Output Tag&quot;, &quot;value&quot;: &quot;PumpSpeedActual&quot;}, {&quot;param&quot;: &quot;initcolour&quot;, &quot;type&quot;: &quot;colour&quot;, &quot;name&quot;: &quot;Init Colour&quot;, &quot;value&quot;: &quot;black&quot;}, {&quot;param&quot;: &quot;offcolour&quot;, &quot;type&quot;: &quot;colour&quot;, &quot;name&quot;: &quot;Off Colour&quot;, &quot;value&quot;: &quot;green&quot;}, {&quot;param&quot;: &quot;oncolour&quot;, &quot;type&quot;: &quot;colour&quot;, &quot;name&quot;: &quot;On Colour&quot;, &quot;value&quot;: &quot;red&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToDisplayList(new MB_Pipe2(document, &quot;%(widgetid)s&quot;, &quot;%(initcolour)s&quot;, &quot;%(offcolour)s&quot;, &quot;%(oncolour)s&quot;), &quot;%(outputtag)s&quot;, &quot;read&quot;);" mblogic:widgetname="Pipe" mblogic:widgettype="pipe" transform="matrix(2.6199552,0,0,0.47907324,375.84828,484.3423)">
      <rect height="50" id="rect3902-7" rx="0" style="stroke:none" width="10" x="0" y="0"/>
    </g>
  </g>
  <g id="LayerData" inkscape:groupmode="layer" inkscape:label="LayerData" style="display:none">
    <g id="DataNumericPad" inkscape:label="#g3471" mblogic:editcount="1" mblogic:inputfunc="[]" mblogic:menu="[{&quot;param&quot;: &quot;numdigits&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;Number of Digits&quot;, &quot;value&quot;: &quot;10&quot;}]" mblogic:outputfunc="var MBT_NumberPad = new MB_NumericPad(document, &quot;MBT_NumberPaddisplay&quot;, &quot;%(numdigits)s&quot;);" mblogic:widgetname="Numeric Pad" mblogic:widgettype="numeric_pad" transform="translate(629.17414,73.632287)">
      <!-- Outline. -->
      <rect height="320" id="rect3473" rx="15" style="fill:#c0c0c0" width="185" x="0" y="0"/>
      <rect height="300" id="rect3475" rx="15" style="fill:#808080" width="165" x="10" y="10"/>
      <!-- Numeric display -->
      <rect height="50" id="rect3477" rx="15" style="fill:#ffffff" width="150" x="20" y="20"/>
      <text font-size="20" id="MBT_NumberPaddisplay" style="font-size:20px;stroke-width:2px" x="22" y="50">????????????</text>
      <!-- buttons. -->
      <g id="g3480" transform="translate(30,85)">
        <g class="buttonactivate" id="g3482" onclick="MBT_NumberPad.AppendDigit(7);">
          <rect height="36" id="rect3484" rx="5" style="fill:url(#linearGradient3612)" width="36" x="0" y="0"/>
          <text font-size="24" id="text3486" style="font-size:24px;text-anchor:middle;stroke-width:2px" x="18" y="27">7</text>
        </g>
        <g class="buttonactivate" id="g3488" onclick="MBT_NumberPad.AppendDigit(8);" transform="translate(45,0)">
          <rect height="36" id="rect3490" rx="5" style="fill:url(#linearGradient3614)" width="36" x="0" y="0"/>
          <text font-size="24" id="text3492" style="font-size:24px;text-anchor:middle;stroke-width:2px" x="18" y="27">8</text>
        </g>
        <g class="buttonactivate" id="g3494" onclick="MBT_NumberPad.AppendDigit(9);" transform="translate(90,0)">
          <rect height="36" id="rect3496" rx="5" style="fill:url(#linearGradient3616)" width="36" x="0" y="0"/>
          <text font-size="24" id="text3498" style="font-size:24px;text-anchor:middle;stroke-width:2px" x="18" y="27">9</text>
        </g>
        <g class="buttonactivate" id="g3500" onclick="MBT_NumberPad.AppendDigit(4);" transform="translate(0,45)">
          <rect height="36" id="rect3502" rx="5" style="fill:url(#linearGradient3619)" width="36" x="0" y="0"/>
          <text font-size="24" id="text3504" style="font-size:24px;text-anchor:middle;stroke-width:2px" x="18" y="27">4</text>
        </g>
        <g class="buttonactivate" id="g3506" onclick="MBT_NumberPad.AppendDigit(5);" transform="translate(45,45)">
          <rect height="36" id="rect3508" rx="5" style="fill:url(#linearGradient3621)" width="36" x="0" y="0"/>
          <text font-size="24" id="text3510" style="font-size:24px;text-anchor:middle;stroke-width:2px" x="18" y="27">5</text>
        </g>
        <g class="buttonactivate" id="g3512" onclick="MBT_NumberPad.AppendDigit(6);" transform="translate(90,45)">
          <rect height="36" id="rect3514" rx="5" style="fill:url(#linearGradient3623)" width="36" x="0" y="0"/>
          <text font-size="24" id="text3516" style="font-size:24px;text-anchor:middle;stroke-width:2px" x="18" y="27">6</text>
        </g>
        <g class="buttonactivate" id="g3518" onclick="MBT_NumberPad.AppendDigit(1);" transform="translate(0,90)">
          <rect height="36" id="rect3520" rx="5" style="fill:url(#linearGradient3625)" width="36" x="0" y="0"/>
          <text font-size="24" id="text3522" style="font-size:24px;text-anchor:middle;stroke-width:2px" x="18" y="27">1</text>
        </g>
        <g class="buttonactivate" id="g3524" onclick="MBT_NumberPad.AppendDigit(2);" transform="translate(45,90)">
          <rect height="36" id="rect3526" rx="5" style="fill:url(#linearGradient3627)" width="36" x="0" y="0"/>
          <text font-size="24" id="text3528" style="font-size:24px;text-anchor:middle;stroke-width:2px" x="18" y="27">2</text>
        </g>
        <g class="buttonactivate" id="g3530" onclick="MBT_NumberPad.AppendDigit(3);" transform="translate(90,90)">
          <rect height="36" id="rect3532" rx="5" style="fill:url(#linearGradient3629)" width="36" x="0" y="0"/>
          <text font-size="24" id="text3534" style="font-size:24px;text-anchor:middle;stroke-width:2px" x="18" y="27">3</text>
        </g>
        <g class="buttonactivate" id="g3536" onclick="MBT_NumberPad.AppendDigit(0);" transform="translate(0,135)">
          <rect height="36" id="rect3538" rx="5" style="fill:url(#linearGradient3631)" width="36" x="0" y="0"/>
          <text font-size="24" id="text3540" style="font-size:24px;text-anchor:middle;stroke-width:2px" x="18" y="27">0</text>
        </g>
        <g class="buttonactivate" id="g3542" onclick="MBT_NumberPad.AppendDigit('.');" transform="translate(45,135)">
          <rect height="36" id="rect3544" rx="5" style="fill:url(#linearGradient3633)" width="36" x="0" y="0"/>
          <text font-size="24" id="text3546" style="font-size:24px;text-anchor:middle;stroke-width:2px" x="18" y="27">.</text>
        </g>
        <g class="buttonactivate" id="g3548" onclick="MBT_NumberPad.AppendDigit('-');" transform="translate(90,135)">
          <rect height="36" id="rect3550" rx="5" style="fill:url(#linearGradient3635)" width="36" x="0" y="0"/>
          <text font-size="24" id="text3552" style="font-size:24px;text-anchor:middle;stroke-width:2px" x="18" y="27">-</text>
        </g>
        <!-- CLR button. -->
        <g class="buttonactivate" id="g3554" onclick="MBT_NumberPad.ClearDisplay();" transform="translate(0,180)">
          <rect height="36" id="rect3556" rx="5" style="fill:url(#linearGradient3637)" width="125" x="0" y="0"/>
          <text font-size="24" id="text3558" style="font-size:24px;text-anchor:middle;stroke-width:2px" x="62" y="27">CLEAR</text>
        </g>
      </g>
    </g>
    <g class="buttonactivate" id="DataStrInt" inkscape:label="#g3648" mblogic:editcount="1" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBHMIProtocol.WriteImmediate(\&quot;%(inputtag)s\&quot;, MBT_NumberPad.GetValueInt());&quot;}]" mblogic:menu="[{&quot;value&quot;: &quot;Int32Demo&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Input Tag&quot;, &quot;param&quot;: &quot;inputtag&quot;}]" mblogic:outputfunc="" mblogic:widgetname="Numeric Entry Store (Int)" mblogic:widgettype="pb_numericpad" onclick="MBHMIProtocol.WriteImmediate(&quot;Int32Demo&quot;, MBT_NumberPad.GetValueInt());" transform="translate(486.37893,82.224212)">
      <rect height="36" id="rect3650" rx="5" style="fill:url(#MB_OrangeGradient-2)" width="125" x="0" y="0"/>
      <text font-size="24" id="text3652" style="font-size:24px;text-anchor:middle;stroke-width:2px" x="62" y="27">STR</text>
    </g>
    <g class="buttonactivate" id="DataStrFloat32" inkscape:label="#g3673" mblogic:editcount="1" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBHMIProtocol.WriteImmediate(\&quot;%(inputtag)s\&quot;, MBT_NumberPad.GetValueFloat());&quot;}]" mblogic:menu="[{&quot;value&quot;: &quot;Float32Demo&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Input Tag&quot;, &quot;param&quot;: &quot;inputtag&quot;}]" mblogic:outputfunc="" mblogic:widgetname="Numeric Entry Store (Float)" mblogic:widgettype="pb_numericpad" onclick="MBHMIProtocol.WriteImmediate(&quot;Float32Demo&quot;, MBT_NumberPad.GetValueFloat());" transform="translate(485.10837,135.58744)">
      <rect height="36" id="rect3675" rx="5" style="fill:url(#MB_OrangeGradient-3)" width="125" x="0" y="0"/>
      <text font-size="24" id="text3677" style="font-size:24px;text-anchor:middle;stroke-width:2px" x="62" y="27">STR</text>
    </g>
    <g class="buttonactivate" id="DataStrFloat64" inkscape:label="#g3698" mblogic:editcount="1" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBHMIProtocol.WriteImmediate(\&quot;%(inputtag)s\&quot;, MBT_NumberPad.GetValueFloat());&quot;}]" mblogic:menu="[{&quot;value&quot;: &quot;Float64Demo&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Input Tag&quot;, &quot;param&quot;: &quot;inputtag&quot;}]" mblogic:outputfunc="" mblogic:widgetname="Numeric Entry Store (Float)" mblogic:widgettype="pb_numericpad" onclick="MBHMIProtocol.WriteImmediate(&quot;Float64Demo&quot;, MBT_NumberPad.GetValueFloat());" transform="translate(483.83782,194.03288)">
      <rect height="36" id="rect3700" rx="5" style="fill:url(#MB_OrangeGradient-9)" width="125" x="0" y="0"/>
      <text font-size="24" id="text3702" style="font-size:24px;text-anchor:middle;stroke-width:2px" x="62" y="27">STR</text>
    </g>
    <rect height="35" id="rect3716" rx="16.094543" ry="10" style="fill:#ffffff;stroke:#00ff00;stroke-width:6.34321356" width="160.94543" x="167.89986" y="88.441704"/>
    <rect height="35" id="rect3727" rx="16.252462" ry="10" style="fill:#ffffff;stroke:#00ff00;stroke-width:6.37425709" width="162.52463" x="164.72346" y="139.26384"/>
    <rect height="35" id="rect3738" rx="16.40893" ry="10" style="fill:#ffffff;stroke:#00ff00;stroke-width:6.40486717" width="164.08931" x="161.60733" y="198.34454"/>
    <text id="text3751" sodipodi:linespacing="125%" style="font-size:23.27486038px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Bitstream Vera Sans" transform="scale(0.934655,1.0699135)" x="7.6042213" xml:space="preserve" y="105.5168"><tspan id="tspan3753" sodipodi:role="line" x="7.6042213" y="105.5168">32 bit integer</tspan></text>
    <text id="text3755" sodipodi:linespacing="125%" style="font-size:24.88983345px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Bitstream Vera Sans" transform="scale(0.92642946,1.079413)" x="10.307366" xml:space="preserve" y="154.23099"><tspan id="tspan3757" sodipodi:role="line" x="10.307366" y="154.23099">32 bit float</tspan></text>
    <text id="text3759" sodipodi:linespacing="125%" style="font-size:25.83171272px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Bitstream Vera Sans" transform="scale(0.85677866,1.1671626)" x="11.095294" xml:space="preserve" y="197.02495"><tspan id="tspan3761" sodipodi:role="line" x="11.095294" y="197.02495">64 bit float</tspan></text>
    <g id="DataInt32digits" inkscape:label="#g3765" mblogic:editcount="1" mblogic:inputfunc="[]" mblogic:menu="[{&quot;param&quot;: &quot;outputtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Output Tag&quot;, &quot;value&quot;: &quot;Int32Demo&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToDisplayList(new MB_NumericDisplay(document, &quot;%(widgetid)s&quot;), &quot;%(outputtag)s&quot;, &quot;read&quot;);" mblogic:widgetname="Integer Digits" mblogic:widgettype="text" transform="translate(260.77168,94.158342)">
      <text font-size="20" id="text3767" style="font-size:20px;text-anchor:end;fill:#008000;stroke:#008000" x="50" y="20">1234</text>
    </g>
    <g id="DataFloat32Digits" inkscape:label="#g3779" mblogic:editcount="1" mblogic:inputfunc="[]" mblogic:menu="[{&quot;param&quot;: &quot;outputtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Output Tag&quot;, &quot;value&quot;: &quot;Float32Demo&quot;}, {&quot;param&quot;: &quot;decimals&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;Decimals&quot;, &quot;value&quot;: &quot;2&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToDisplayList(new MB_NumericFloatDisplay(document, &quot;%(widgetid)s&quot;, &quot;%(decimals)s&quot;), &quot;%(outputtag)s&quot;, &quot;read&quot;);" mblogic:widgetname="Float Digits" mblogic:widgettype="text" transform="translate(259.09106,144.65027)">
      <text font-size="20" id="text3781" style="font-size:20px;text-anchor:end;fill:#4b0082;stroke:#4b0082" x="50" y="20">12.34</text>
    </g>
    <g id="DataFloat64Digits" inkscape:label="#g3793" mblogic:editcount="1" mblogic:inputfunc="[]" mblogic:menu="[{&quot;param&quot;: &quot;outputtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Output Tag&quot;, &quot;value&quot;: &quot;Float64Demo&quot;}, {&quot;param&quot;: &quot;decimals&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;Decimals&quot;, &quot;value&quot;: &quot;3&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToDisplayList(new MB_NumericFloatDisplay(document, &quot;%(widgetid)s&quot;, &quot;%(decimals)s&quot;), &quot;%(outputtag)s&quot;, &quot;read&quot;);" mblogic:widgetname="Float Digits" mblogic:widgettype="text" transform="translate(259.4632,202.32952)">
      <text font-size="20" id="text3795" style="font-size:20px;text-anchor:end;fill:#800000;stroke:#800000" x="50" y="20">12.34</text>
    </g>
    <g class="buttonactivate" id="DataRstInt" inkscape:label="#g3817" mblogic:editcount="1" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBHMIProtocol.WriteImmediate(\&quot;%(inputtag)s\&quot;, 0);&quot;}]" mblogic:menu="[{&quot;value&quot;: &quot;Int32Demo&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Input Tag&quot;, &quot;param&quot;: &quot;inputtag&quot;}]" mblogic:outputfunc="" mblogic:widgetname="Write 0 Push Button" mblogic:widgettype="pb_const" onclick="MBHMIProtocol.WriteImmediate(&quot;Int32Demo&quot;, 0);" transform="translate(368.54672,81.463242)">
      <rect height="35" id="rect3819" rx="15" style="fill:#808080;stroke:none;filter:url(#MB_DropShadowFilter-21)" width="100" x="7" y="7"/>
      <rect height="35" id="rect3821" rx="15" style="fill:url(#MB_KhakiGradient-6)" width="100" x="0" y="0"/>
      <text font-size="24" id="text3823" sodipodi:linespacing="125%" style="font-size:24px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;writing-mode:lr-tb;text-anchor:middle;stroke-width:2px;font-family:Sans;-inkscape-font-specification:Sans" x="50" y="26">
        <tspan id="tspan3904" sodipodi:role="line" x="50" y="26">Rst</tspan>
      </text>
    </g>
    <g class="buttonactivate" id="DataRstFloat32" inkscape:label="#g3850" mblogic:editcount="1" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBHMIProtocol.WriteImmediate(\&quot;%(inputtag)s\&quot;, 0);&quot;}]" mblogic:menu="[{&quot;value&quot;: &quot;Float32Demo&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Input Tag&quot;, &quot;param&quot;: &quot;inputtag&quot;}]" mblogic:outputfunc="" mblogic:widgetname="Write 0 Push Button" mblogic:widgettype="pb_const" onclick="MBHMIProtocol.WriteImmediate(&quot;Float32Demo&quot;, 0);" transform="translate(368.54672,135.54884)">
      <rect height="35" id="rect3852" rx="15" style="fill:#808080;stroke:none;filter:url(#MB_DropShadowFilter-99)" width="100" x="7" y="7"/>
      <rect height="35" id="rect3854" rx="15" style="fill:url(#MB_KhakiGradient-1)" width="100" x="0" y="0"/>
      <text font-size="24" id="text3856" sodipodi:linespacing="125%" style="font-size:24px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;writing-mode:lr-tb;text-anchor:middle;stroke-width:2px;font-family:Sans;-inkscape-font-specification:Sans" x="50" y="26">
        <tspan id="tspan3906" sodipodi:role="line" x="50" y="26">Rst</tspan>
      </text>
    </g>
    <g class="buttonactivate" id="DataRstFloat64" inkscape:label="#g3883" mblogic:editcount="1" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBHMIProtocol.WriteImmediate(\&quot;%(inputtag)s\&quot;, 0);&quot;}]" mblogic:menu="[{&quot;value&quot;: &quot;Float64Demo&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Input Tag&quot;, &quot;param&quot;: &quot;inputtag&quot;}]" mblogic:outputfunc="" mblogic:widgetname="Write 0 Push Button" mblogic:widgettype="pb_const" onclick="MBHMIProtocol.WriteImmediate(&quot;Float64Demo&quot;, 0);" transform="translate(370.56155,252.48165)">
      <rect height="35" id="rect3885" rx="15" style="fill:#808080;stroke:none;filter:url(#MB_DropShadowFilter-17)" width="100" x="5.7294469" y="-50.174889"/>
      <rect height="35" id="rect3887" rx="15" style="fill:url(#MB_KhakiGradient-9)" width="100" x="-1.2705531" y="-57.174889"/>
      <text font-size="24" id="text3889" sodipodi:linespacing="125%" style="font-size:24px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;writing-mode:lr-tb;text-anchor:middle;stroke-width:2px;font-family:Sans;-inkscape-font-specification:Sans" x="48.729446" y="-31.174889">
        <tspan id="tspan3908" sodipodi:role="line" x="48.729446" y="-31.174889">Rst</tspan>
      </text>
    </g>
    <text id="text4143" sodipodi:linespacing="125%" style="font-size:25.59353065px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Bitstream Vera Sans" transform="scale(0.70972065,1.4090051)" x="19.131521" xml:space="preserve" y="310.67316"><tspan id="tspan4145" sodipodi:role="line" x="19.131521" y="310.67316">Packed String</tspan></text>
    <text id="text4147" sodipodi:linespacing="125%" style="font-size:24.78482819px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Bitstream Vera Sans" transform="scale(0.74126865,1.3490386)" x="17.349495" xml:space="preserve" y="366.32797"><tspan id="tspan4149" sodipodi:role="line" x="17.349495" y="366.32797">Sparse String</tspan></text>
    <rect height="35" id="rect4153" rx="25.993114" ry="10" style="fill:#ffffff;stroke:#00ff00;stroke-width:8.06119061" width="259.93115" x="159.64127" y="413.06802"/>
    <rect height="35" id="rect4164" rx="26.201187" ry="10" style="fill:#ffffff;stroke:#00ff00;stroke-width:8.09338951" width="262.01184" x="154.55905" y="474.05457"/>
    <g class="buttonactivate" id="DataClrPckStr" inkscape:label="#g4185" mblogic:editcount="2" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBHMIProtocol.WriteImmediate(\&quot;%(inputtag)s\&quot;, \&quot;%(strval)s\&quot;);&quot;}]" mblogic:menu="[{&quot;value&quot;: &quot;PackedStrDemo&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Input Tag&quot;, &quot;param&quot;: &quot;inputtag&quot;}, {&quot;value&quot;: &quot; &quot;, &quot;type&quot;: &quot;str&quot;, &quot;name&quot;: &quot;String Value&quot;, &quot;param&quot;: &quot;strval&quot;}]" mblogic:outputfunc="" mblogic:widgetname="Write String Push Button" mblogic:widgettype="pb_string" onclick="MBHMIProtocol.WriteImmediate(&quot;PackedStrDemo&quot;, &quot; &quot;);" transform="translate(437.07458,410.97968)">
      <rect height="35" id="rect4187" rx="15" style="fill:#808080;stroke:none;filter:url(#MB_DropShadowFilter-76)" width="100" x="7" y="7"/>
      <rect height="35" id="rect4189" rx="15" style="fill:url(#MB_KhakiGradient-2)" width="100" x="0" y="0"/>
      <text font-size="24" id="text4191" sodipodi:linespacing="125%" style="font-size:24px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;writing-mode:lr-tb;text-anchor:middle;stroke-width:2px;font-family:Sans;-inkscape-font-specification:Sans" x="50" y="26">
        <tspan id="tspan4333" sodipodi:role="line" x="50" y="26">Clear</tspan>
      </text>
    </g>
    <g class="buttonactivate" id="DataClrSpStr" inkscape:label="#g4218" mblogic:editcount="1" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBHMIProtocol.WriteImmediate(\&quot;%(inputtag)s\&quot;, \&quot;%(strval)s\&quot;);&quot;}]" mblogic:menu="[{&quot;value&quot;: &quot;SparseStrDemo&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Input Tag&quot;, &quot;param&quot;: &quot;inputtag&quot;}, {&quot;value&quot;: &quot; &quot;, &quot;type&quot;: &quot;str&quot;, &quot;name&quot;: &quot;String Value&quot;, &quot;param&quot;: &quot;strval&quot;}]" mblogic:outputfunc="" mblogic:widgetname="Write String Push Button" mblogic:widgettype="pb_string" onclick="MBHMIProtocol.WriteImmediate(&quot;SparseStrDemo&quot;, &quot; &quot;);" transform="translate(440.25097,466.88401)">
      <rect height="35" id="rect4220" rx="15" style="fill:#808080;stroke:none;filter:url(#MB_DropShadowFilter-70)" width="100" x="7" y="7"/>
      <rect height="35" id="rect4222" rx="15" style="fill:url(#MB_KhakiGradient-8)" width="100" x="0" y="0"/>
      <text font-size="24" id="text4224" sodipodi:linespacing="125%" style="font-size:24px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;writing-mode:lr-tb;text-anchor:middle;stroke-width:2px;font-family:Sans;-inkscape-font-specification:Sans" x="50" y="26">
        <tspan id="tspan4335" sodipodi:role="line" x="50" y="26">Clear</tspan>
      </text>
    </g>
    <g class="buttonactivate" id="DataWrtPckStr" inkscape:label="#g4251" mblogic:editcount="1" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBHMIProtocol.WriteImmediate(\&quot;%(inputtag)s\&quot;, \&quot;%(strval)s\&quot;);&quot;}]" mblogic:menu="[{&quot;value&quot;: &quot;PackedStrDemo&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Input Tag&quot;, &quot;param&quot;: &quot;inputtag&quot;}, {&quot;value&quot;: &quot;Packed String&quot;, &quot;type&quot;: &quot;str&quot;, &quot;name&quot;: &quot;String Value&quot;, &quot;param&quot;: &quot;strval&quot;}]" mblogic:outputfunc="" mblogic:widgetname="Write String Push Button" mblogic:widgettype="pb_string" onclick="MBHMIProtocol.WriteImmediate(&quot;PackedStrDemo&quot;, &quot;Packed String&quot;);" transform="translate(552.05964,412.88551)">
      <rect height="35" id="rect4253" rx="15" style="fill:#808080;stroke:none;filter:url(#MB_DropShadowFilter-3)" width="100" x="7" y="7"/>
      <rect height="35" id="rect4255" rx="15" style="fill:url(#MB_IndigoGradient-4)" width="100" x="0" y="0"/>
      <text font-size="24" id="text4257" sodipodi:linespacing="125%" style="font-size:24px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;writing-mode:lr-tb;text-anchor:middle;stroke-width:2px;font-family:Sans;-inkscape-font-specification:Sans" x="50" y="26">
        <tspan id="tspan4337" sodipodi:role="line" x="50" y="26">Write</tspan>
      </text>
    </g>
    <g class="buttonactivate" id="DataWrtSpStr" inkscape:label="#g4284" mblogic:editcount="1" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBHMIProtocol.WriteImmediate(\&quot;%(inputtag)s\&quot;, \&quot;%(strval)s\&quot;);&quot;}]" mblogic:menu="[{&quot;value&quot;: &quot;SparseStrDemo&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Input Tag&quot;, &quot;param&quot;: &quot;inputtag&quot;}, {&quot;value&quot;: &quot;Sparse String&quot;, &quot;type&quot;: &quot;str&quot;, &quot;name&quot;: &quot;String Value&quot;, &quot;param&quot;: &quot;strval&quot;}]" mblogic:outputfunc="" mblogic:widgetname="Write String Push Button" mblogic:widgettype="pb_string" onclick="MBHMIProtocol.WriteImmediate(&quot;SparseStrDemo&quot;, &quot;Sparse String&quot;);" transform="translate(552.05965,466.24872)">
      <rect height="35" id="rect4286" rx="15" style="fill:#808080;stroke:none;filter:url(#MB_DropShadowFilter-703)" width="100" x="7" y="7"/>
      <rect height="35" id="rect4288" rx="15" style="fill:url(#MB_PurpleGradient-0)" width="100" x="0" y="0"/>
      <text font-size="24" id="text4290" sodipodi:linespacing="125%" style="font-size:24px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;writing-mode:lr-tb;text-anchor:middle;stroke-width:2px;font-family:Sans;-inkscape-font-specification:Sans" x="50" y="26">
        <tspan id="tspan4339" sodipodi:role="line" x="50" y="26">Write</tspan>
      </text>
    </g>
    <g id="DataPckStrText" inkscape:label="#g4307" mblogic:editcount="1" mblogic:inputfunc="[]" mblogic:menu="[{&quot;param&quot;: &quot;outputtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Output Tag&quot;, &quot;value&quot;: &quot;PackedStrDemo&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToDisplayList(new MB_StringDisplay(document, &quot;%(widgetid)s&quot;), &quot;%(outputtag)s&quot;, &quot;read&quot;);" mblogic:widgetname="String Display" mblogic:widgettype="text" transform="translate(176.33951,417.71645)">
      <text font-size="20" id="text4309" style="font-size:20px;text-anchor:start;fill:#800000;stroke:#800000" x="0" y="20">Text</text>
    </g>
    <g id="DataSpStrText" inkscape:label="#g4321" mblogic:editcount="1" mblogic:inputfunc="[]" mblogic:menu="[{&quot;param&quot;: &quot;outputtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Output Tag&quot;, &quot;value&quot;: &quot;SparseStrDemo&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToDisplayList(new MB_StringDisplay(document, &quot;%(widgetid)s&quot;), &quot;%(outputtag)s&quot;, &quot;read&quot;);" mblogic:widgetname="String Display" mblogic:widgettype="text" transform="translate(176.33951,478.70299)">
      <text font-size="20" id="text4323" style="font-size:20px;text-anchor:start;fill:#008000;stroke:#008000" x="0" y="20">Text</text>
    </g>
  </g>
  <g id="LayerPandP" inkscape:groupmode="layer" inkscape:label="LayerPandP" style="display:none">
    <g class="sswitchactivate" id="PPppUp" inkscape:label="#g3653" mblogic:editcount="4" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBHMIProtocol.WriteImmediate(\&quot;%(inputtag)s\&quot;, %(value)s);&quot;}]" mblogic:menu="[{&quot;param&quot;: &quot;inputtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Input Tag&quot;, &quot;value&quot;: &quot;SSPPVert&quot;}, {&quot;param&quot;: &quot;value&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;Write Value&quot;, &quot;value&quot;: &quot;0&quot;}]" mblogic:outputfunc="" mblogic:widgetname="Selector Switch Label" mblogic:widgettype="ss_label" onclick="MBHMIProtocol.WriteImmediate(&quot;SSPPVert&quot;, 0);" transform="translate(13.217843,410.50637)">
      <rect height="70" id="rect3655" style="fill:#808080" width="50" x="0" y="0"/>
      <text font-size="16" id="text3657" sodipodi:linespacing="125%" style="font-size:16px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;writing-mode:lr-tb;text-anchor:middle;font-family:Sans;-inkscape-font-specification:Sans" x="25" y="20">
        <tspan id="tspan4352" sodipodi:role="line" x="25" y="20">UP</tspan>
      </text>
    </g>
    <g class="sswitchactivate" id="PPppDown" inkscape:label="#g3670" mblogic:editcount="4" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBHMIProtocol.WriteImmediate(\&quot;%(inputtag)s\&quot;, %(value)s);&quot;}]" mblogic:menu="[{&quot;param&quot;: &quot;inputtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Input Tag&quot;, &quot;value&quot;: &quot;SSPPVert&quot;}, {&quot;param&quot;: &quot;value&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;Write Value&quot;, &quot;value&quot;: &quot;1&quot;}]" mblogic:outputfunc="" mblogic:widgetname="Selector Switch Label" mblogic:widgettype="ss_label" onclick="MBHMIProtocol.WriteImmediate(&quot;SSPPVert&quot;, 1);" transform="translate(60.228304,410.50636)">
      <rect height="70" id="rect3672" style="fill:#808080" width="50" x="0" y="0"/>
      <text font-size="16" id="text3674" sodipodi:linespacing="125%" style="font-size:16px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;writing-mode:lr-tb;text-anchor:middle;font-family:Sans;-inkscape-font-specification:Sans" x="25" y="20">
        <tspan id="tspan4354" sodipodi:role="line" x="25" y="20">DWN</tspan>
      </text>
    </g>
    <g class="sswitchactivate" id="PPppOut" inkscape:label="#g3687" mblogic:editcount="4" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBHMIProtocol.WriteImmediate(\&quot;%(inputtag)s\&quot;, %(value)s);&quot;}]" mblogic:menu="[{&quot;param&quot;: &quot;inputtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Input Tag&quot;, &quot;value&quot;: &quot;SSPPHorz&quot;}, {&quot;param&quot;: &quot;value&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;Write Value&quot;, &quot;value&quot;: &quot;0&quot;}]" mblogic:outputfunc="" mblogic:widgetname="Selector Switch Label" mblogic:widgettype="ss_label" onclick="MBHMIProtocol.WriteImmediate(&quot;SSPPHorz&quot;, 0);" transform="translate(121.93267,411.77691)">
      <rect height="70" id="rect3689" style="fill:#0000ff" width="50" x="0" y="0"/>
      <text font-size="16" id="text3691" sodipodi:linespacing="125%" style="font-size:16px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;writing-mode:lr-tb;text-anchor:middle;font-family:Sans;-inkscape-font-specification:Sans" x="25" y="20">
        <tspan id="tspan4356" sodipodi:role="line" x="25" y="20">OUT</tspan>
      </text>
    </g>
    <g class="sswitchactivate" id="PPppIn" inkscape:label="#g3704" mblogic:editcount="4" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBHMIProtocol.WriteImmediate(\&quot;%(inputtag)s\&quot;, %(value)s);&quot;}]" mblogic:menu="[{&quot;param&quot;: &quot;inputtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Input Tag&quot;, &quot;value&quot;: &quot;SSPPHorz&quot;}, {&quot;param&quot;: &quot;value&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;Write Value&quot;, &quot;value&quot;: &quot;1&quot;}]" mblogic:outputfunc="" mblogic:widgetname="Selector Switch Label" mblogic:widgettype="ss_label" onclick="MBHMIProtocol.WriteImmediate(&quot;SSPPHorz&quot;, 1);" transform="translate(171.63177,411.85398)">
      <rect height="70" id="rect3706" style="fill:#0000ff" width="50" x="0" y="0"/>
      <text font-size="16" id="text3708" sodipodi:linespacing="125%" style="font-size:16px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;writing-mode:lr-tb;text-anchor:middle;font-family:Sans;-inkscape-font-specification:Sans" x="25" y="20">
        <tspan id="tspan4358" sodipodi:role="line" x="25" y="20">IN</tspan>
      </text>
    </g>
    <g class="sswitchactivate" id="PPppOpen" inkscape:label="#g3721" mblogic:editcount="3" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBHMIProtocol.WriteImmediate(\&quot;%(inputtag)s\&quot;, %(value)s);&quot;}]" mblogic:menu="[{&quot;param&quot;: &quot;inputtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Input Tag&quot;, &quot;value&quot;: &quot;SSPPGrip&quot;}, {&quot;param&quot;: &quot;value&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;Write Value&quot;, &quot;value&quot;: &quot;0&quot;}]" mblogic:outputfunc="" mblogic:widgetname="Selector Switch Label" mblogic:widgettype="ss_label" onclick="MBHMIProtocol.WriteImmediate(&quot;SSPPGrip&quot;, 0);" transform="translate(232.13606,409.54409)">
      <rect height="70" id="rect3723" style="fill:#ff0000" width="50" x="0" y="0"/>
      <text font-size="16" id="text3725" sodipodi:linespacing="125%" style="font-size:16px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;writing-mode:lr-tb;text-anchor:middle;font-family:Sans;-inkscape-font-specification:Sans" x="25" y="20">
        <tspan id="tspan4360" sodipodi:role="line" x="25" y="20">OPN</tspan>
      </text>
    </g>
    <g class="sswitchactivate" id="PPppClose" inkscape:label="#g3738" mblogic:editcount="3" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBHMIProtocol.WriteImmediate(\&quot;%(inputtag)s\&quot;, %(value)s);&quot;}]" mblogic:menu="[{&quot;param&quot;: &quot;inputtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Input Tag&quot;, &quot;value&quot;: &quot;SSPPGrip&quot;}, {&quot;param&quot;: &quot;value&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;Write Value&quot;, &quot;value&quot;: &quot;1&quot;}]" mblogic:outputfunc="" mblogic:widgetname="Selector Switch Label" mblogic:widgettype="ss_label" onclick="MBHMIProtocol.WriteImmediate(&quot;SSPPGrip&quot;, 1);" transform="translate(282.2139,409.69162)">
      <rect height="70" id="rect3740" style="fill:#ff0000" width="50" x="0" y="0"/>
      <text font-size="16" id="text3742" sodipodi:linespacing="125%" style="font-size:16px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;writing-mode:lr-tb;text-anchor:middle;font-family:Sans;-inkscape-font-specification:Sans" x="25" y="20">
        <tspan id="tspan4362" sodipodi:role="line" x="25" y="20">CLS</tspan>
      </text>
    </g>
    <g class="sswitchactivate" id="PPAnimStop" inkscape:label="#g3755" mblogic:editcount="2" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBHMIProtocol.WriteImmediate(\&quot;%(inputtag)s\&quot;, %(value)s);&quot;}]" mblogic:menu="[{&quot;param&quot;: &quot;inputtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Input Tag&quot;, &quot;value&quot;: &quot;SSAni1&quot;}, {&quot;param&quot;: &quot;value&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;Write Value&quot;, &quot;value&quot;: &quot;0&quot;}]" mblogic:outputfunc="" mblogic:widgetname="Selector Switch Label" mblogic:widgettype="ss_label" onclick="MBHMIProtocol.WriteImmediate(&quot;SSAni1&quot;, 0);" transform="translate(701.75635,138.9163)">
      <rect height="70" id="rect3757" style="fill:#808000" width="50" x="0" y="0"/>
      <text font-size="16" id="text3759-3" sodipodi:linespacing="125%" style="font-size:16px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;writing-mode:lr-tb;text-anchor:middle;font-family:Sans;-inkscape-font-specification:Sans" x="25" y="20">
        <tspan id="tspan4364" sodipodi:role="line" x="25" y="20">STOP</tspan>
      </text>
    </g>
    <g class="sswitchactivate" id="PPAnimStart" inkscape:label="#g3772" mblogic:editcount="2" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBHMIProtocol.WriteImmediate(\&quot;%(inputtag)s\&quot;, %(value)s);&quot;}]" mblogic:menu="[{&quot;param&quot;: &quot;inputtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Input Tag&quot;, &quot;value&quot;: &quot;SSAni1&quot;}, {&quot;param&quot;: &quot;value&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;Write Value&quot;, &quot;value&quot;: &quot;1&quot;}]" mblogic:outputfunc="" mblogic:widgetname="Selector Switch Label" mblogic:widgettype="ss_label" onclick="MBHMIProtocol.WriteImmediate(&quot;SSAni1&quot;, 1);" transform="translate(751.53252,138.76877)">
      <rect height="70" id="rect3774" style="fill:#ee82ee" width="50" x="0" y="0"/>
      <text font-size="16" id="text3776" sodipodi:linespacing="125%" style="font-size:16px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;writing-mode:lr-tb;text-anchor:middle;font-family:Sans;-inkscape-font-specification:Sans" x="25" y="20">
        <tspan id="tspan4366" sodipodi:role="line" x="25" y="20">START</tspan>
      </text>
    </g>
    <g class="sswitchactivate" id="PPMaskEnable" inkscape:label="#g3789" mblogic:editcount="2" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBHMIProtocol.WriteImmediate(\&quot;%(inputtag)s\&quot;, %(value)s);&quot;}]" mblogic:menu="[{&quot;param&quot;: &quot;inputtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Input Tag&quot;, &quot;value&quot;: &quot;ButtonDisSS&quot;}, {&quot;param&quot;: &quot;value&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;Write Value&quot;, &quot;value&quot;: &quot;0&quot;}]" mblogic:outputfunc="" mblogic:widgetname="Selector Switch Label" mblogic:widgettype="ss_label" onclick="MBHMIProtocol.WriteImmediate(&quot;ButtonDisSS&quot;, 0);" transform="translate(687.74287,406.47671)">
      <rect height="70" id="rect3791" style="fill:#000080" width="50" x="0" y="0"/>
      <text font-size="16" id="text3793" sodipodi:linespacing="125%" style="font-size:16px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;writing-mode:lr-tb;text-anchor:middle;font-family:Sans;-inkscape-font-specification:Sans" x="25" y="20">
        <tspan id="tspan4368" sodipodi:role="line" x="25" y="20">ENB</tspan>
      </text>
    </g>
    <g class="sswitchactivate" id="PPMaskDisable" inkscape:label="#g3823" mblogic:editcount="2" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBHMIProtocol.WriteImmediate(\&quot;%(inputtag)s\&quot;, %(value)s);&quot;}]" mblogic:menu="[{&quot;param&quot;: &quot;inputtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Input Tag&quot;, &quot;value&quot;: &quot;ButtonDisSS&quot;}, {&quot;param&quot;: &quot;value&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;Write Value&quot;, &quot;value&quot;: &quot;1&quot;}]" mblogic:outputfunc="" mblogic:widgetname="Selector Switch Label" mblogic:widgettype="ss_label" onclick="MBHMIProtocol.WriteImmediate(&quot;ButtonDisSS&quot;, 1);" transform="translate(737.44197,406.54717)">
      <rect height="70" id="rect3825" style="fill:#00ffff" width="50" x="0" y="0"/>
      <text font-size="16" id="text3827" sodipodi:linespacing="125%" style="font-size:16px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;writing-mode:lr-tb;text-anchor:middle;font-family:Sans;-inkscape-font-specification:Sans" x="25" y="20">
        <tspan id="tspan4370" sodipodi:role="line" x="25" y="20">DIS</tspan>
      </text>
    </g>
    <g id="PPppSSUpDown" inkscape:label="#g3850" mblogic:editcount="2" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBHMIProtocol.WriteToggleImmediate(\&quot;%(inputtag)s\&quot;, \&quot;%(inputtag)s\&quot;);&quot;}]" mblogic:menu="[{&quot;param&quot;: &quot;inputtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Input Tag&quot;, &quot;value&quot;: &quot;SSPPVert&quot;}, {&quot;param&quot;: &quot;switchtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Switch Tag&quot;, &quot;value&quot;: &quot;SSPPVert&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToDisplayList(new MB_2PosSSDisplay(document, &quot;%(widgetid)s&quot;, -60, 60), &quot;%(switchtag)s&quot;, &quot;read&quot;);" mblogic:widgetname="2 Pos SS" mblogic:widgettype="ss2short" onclick="MBHMIProtocol.WriteToggleImmediate(&quot;SSPPVert&quot;, &quot;SSPPVert&quot;);" transform="translate(62.097966,496.45346)">
      <!-- This is a decorative nut. -->
      <polygon id="polygon3852" points="18,45 45,18 45,-18 18,-45 18,-45 -18,-45 -45,-18 -45,18 -18,45 " style="fill:#808080;stroke:none;filter:url(#MB_DropShadowFilter-22)" transform="translate(5,5)"/>
      <polygon id="polygon3854" points="18,45 45,18 45,-18 18,-45 18,-45 -18,-45 -45,-18 -45,18 -18,45 " style="fill:url(#MB_SilverGradient-51);stroke:none"/>
      <g class="buttonactivate" id="g3856">
        <!-- This forms the circular rotating inner area of the switch. -->
        <circle cx="0" cy="0" d="M 35,0 C 35,19.329966 19.329966,35 0,35 -19.329966,35 -35,19.329966 -35,0 c 0,-19.329966 15.670034,-35 35,-35 19.329966,0 35,15.670034 35,35 z" id="circle3858" r="35" sodipodi:cx="0" sodipodi:cy="0" sodipodi:rx="35" sodipodi:ry="35" style="fill:#0000ff;stroke:#000000;stroke-width:5px"/>
        <!-- This is the rotating actuator. -->
        <rect height="66" id="rect3860" rx="5" style="fill:#808080;stroke-width:2px" width="16" x="-8" y="-33"/>
        <polygon id="polygon3862" points="0,-30 0,-30 -5,-20 5,-20 " style="fill:#ffffff"/>
      </g>
    </g>
    <g id="PPppSSOutIn" inkscape:label="#g3892" mblogic:editcount="2" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBHMIProtocol.WriteToggleImmediate(\&quot;%(inputtag)s\&quot;, \&quot;%(inputtag)s\&quot;);&quot;}]" mblogic:menu="[{&quot;param&quot;: &quot;inputtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Input Tag&quot;, &quot;value&quot;: &quot;SSPPHorz&quot;}, {&quot;param&quot;: &quot;switchtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Switch Tag&quot;, &quot;value&quot;: &quot;SSPPHorz&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToDisplayList(new MB_2PosSSDisplay(document, &quot;%(widgetid)s&quot;, -60, 60), &quot;%(switchtag)s&quot;, &quot;read&quot;);" mblogic:widgetname="2 Pos SS" mblogic:widgettype="ss2short" onclick="MBHMIProtocol.WriteToggleImmediate(&quot;SSPPHorz&quot;, &quot;SSPPHorz&quot;);" transform="translate(171.40954,497.94862)">
      <!-- This is a decorative nut. -->
      <polygon id="polygon3894" points="45,18 45,-18 18,-45 18,-45 -18,-45 -45,-18 -45,18 -18,45 18,45 " style="fill:#808080;stroke:none;filter:url(#MB_DropShadowFilter-64)" transform="translate(5,5)"/>
      <polygon id="polygon3896" points="45,18 45,-18 18,-45 18,-45 -18,-45 -45,-18 -45,18 -18,45 18,45 " style="fill:url(#MB_SilverGradient-33);stroke:none"/>
      <g class="buttonactivate" id="g3898">
        <!-- This forms the circular rotating inner area of the switch. -->
        <circle cx="0" cy="0" d="M 35,0 C 35,19.329966 19.329966,35 0,35 -19.329966,35 -35,19.329966 -35,0 c 0,-19.329966 15.670034,-35 35,-35 19.329966,0 35,15.670034 35,35 z" id="circle3900" r="35" sodipodi:cx="0" sodipodi:cy="0" sodipodi:rx="35" sodipodi:ry="35" style="fill:#00ff00;stroke:#000000;stroke-width:5px"/>
        <!-- This is the rotating actuator. -->
        <rect height="66" id="rect3902" rx="5" style="fill:#808080;stroke-width:2px" width="16" x="-8" y="-33"/>
        <polygon id="polygon3904" points="0,-30 -5,-20 5,-20 0,-30 " style="fill:#ffffff"/>
      </g>
    </g>
    <g id="PPppSSOpenClose" inkscape:label="#g3934" mblogic:editcount="2" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBHMIProtocol.WriteToggleImmediate(\&quot;%(inputtag)s\&quot;, \&quot;%(inputtag)s\&quot;);&quot;}]" mblogic:menu="[{&quot;param&quot;: &quot;inputtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Input Tag&quot;, &quot;value&quot;: &quot;SSPPGrip&quot;}, {&quot;param&quot;: &quot;switchtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Switch Tag&quot;, &quot;value&quot;: &quot;SSPPGrip&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToDisplayList(new MB_2PosSSDisplay(document, &quot;%(widgetid)s&quot;, -60, 60), &quot;%(switchtag)s&quot;, &quot;read&quot;);" mblogic:widgetname="2 Pos SS" mblogic:widgettype="ss2short" onclick="MBHMIProtocol.WriteToggleImmediate(&quot;SSPPGrip&quot;, &quot;SSPPGrip&quot;);" transform="translate(283.11469,496.75514)">
      <!-- This is a decorative nut. -->
      <polygon id="polygon3936" points="18,45 45,18 45,-18 18,-45 18,-45 -18,-45 -45,-18 -45,18 -18,45 " style="fill:#808080;stroke:none;filter:url(#MB_DropShadowFilter-90)" transform="translate(5,5)"/>
      <polygon id="polygon3938" points="18,45 45,18 45,-18 18,-45 18,-45 -18,-45 -45,-18 -45,18 -18,45 " style="fill:url(#MB_SilverGradient-0);stroke:none"/>
      <g class="buttonactivate" id="g3940">
        <!-- This forms the circular rotating inner area of the switch. -->
        <circle cx="0" cy="0" d="M 35,0 C 35,19.329966 19.329966,35 0,35 -19.329966,35 -35,19.329966 -35,0 c 0,-19.329966 15.670034,-35 35,-35 19.329966,0 35,15.670034 35,35 z" id="circle3942" r="35" sodipodi:cx="0" sodipodi:cy="0" sodipodi:rx="35" sodipodi:ry="35" style="fill:#800000;stroke:#000000;stroke-width:5px"/>
        <!-- This is the rotating actuator. -->
        <rect height="66" id="rect3944" rx="5" style="fill:#808080;stroke-width:2px" width="16" x="-8" y="-33"/>
        <polygon id="polygon3946" points="0,-30 0,-30 -5,-20 5,-20 " style="fill:#ffffff"/>
      </g>
    </g>
    <g id="PPAnimSS" inkscape:label="#g3976" mblogic:editcount="1" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBHMIProtocol.WriteToggleImmediate(\&quot;%(inputtag)s\&quot;, \&quot;%(inputtag)s\&quot;);&quot;}]" mblogic:menu="[{&quot;param&quot;: &quot;inputtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Input Tag&quot;, &quot;value&quot;: &quot;SSAni1&quot;}, {&quot;param&quot;: &quot;switchtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Switch Tag&quot;, &quot;value&quot;: &quot;SSAni1&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToDisplayList(new MB_2PosSSDisplay(document, &quot;%(widgetid)s&quot;, -60, 60), &quot;%(switchtag)s&quot;, &quot;read&quot;);" mblogic:widgetname="2 Pos SS" mblogic:widgettype="ss2short" onclick="MBHMIProtocol.WriteToggleImmediate(&quot;SSAni1&quot;, &quot;SSAni1&quot;);" transform="translate(751.67582,225.15185)">
      <!-- This is a decorative nut. -->
      <polygon id="polygon3978" points="18,45 45,18 45,-18 18,-45 18,-45 -18,-45 -45,-18 -45,18 -18,45 " style="fill:#808080;stroke:none;filter:url(#MB_DropShadowFilter-81)" transform="translate(5,5)"/>
      <polygon id="polygon3980" points="18,45 45,18 45,-18 18,-45 18,-45 -18,-45 -45,-18 -45,18 -18,45 " style="fill:url(#MB_SilverGradient-6);stroke:none"/>
      <g class="buttonactivate" id="g3982">
        <!-- This forms the circular rotating inner area of the switch. -->
        <circle cx="0" cy="0" d="M 35,0 C 35,19.329966 19.329966,35 0,35 -19.329966,35 -35,19.329966 -35,0 c 0,-19.329966 15.670034,-35 35,-35 19.329966,0 35,15.670034 35,35 z" id="circle3984" r="35" sodipodi:cx="0" sodipodi:cy="0" sodipodi:rx="35" sodipodi:ry="35" style="fill:#ffff00;stroke:#000000;stroke-width:5px"/>
        <!-- This is the rotating actuator. -->
        <rect height="66" id="rect3986" rx="5" style="fill:#808080;stroke-width:2px" width="16" x="-8" y="-33"/>
        <polygon id="polygon3988" points="0,-30 0,-30 -5,-20 5,-20 " style="fill:#ffffff"/>
      </g>
    </g>
    <g id="PPMaskSS" inkscape:label="#g4018" mblogic:editcount="1" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBHMIProtocol.WriteToggleImmediate(\&quot;%(inputtag)s\&quot;, \&quot;%(inputtag)s\&quot;);&quot;}]" mblogic:menu="[{&quot;param&quot;: &quot;inputtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Input Tag&quot;, &quot;value&quot;: &quot;ButtonDisSS&quot;}, {&quot;param&quot;: &quot;switchtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Switch Tag&quot;, &quot;value&quot;: &quot;ButtonDisSS&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToDisplayList(new MB_2PosSSDisplay(document, &quot;%(widgetid)s&quot;, -60, 60), &quot;%(switchtag)s&quot;, &quot;read&quot;);" mblogic:widgetname="2 Pos SS" mblogic:widgettype="ss2short" onclick="MBHMIProtocol.WriteToggleImmediate(&quot;ButtonDisSS&quot;, &quot;ButtonDisSS&quot;);" transform="translate(737.7394,493.41253)">
      <!-- This is a decorative nut. -->
      <polygon id="polygon4020" points="18,45 45,18 45,-18 18,-45 18,-45 -18,-45 -45,-18 -45,18 -18,45 " style="fill:#808080;stroke:none;filter:url(#MB_DropShadowFilter-680)" transform="translate(5,5)"/>
      <polygon id="polygon4022" points="18,45 45,18 45,-18 18,-45 18,-45 -18,-45 -45,-18 -45,18 -18,45 " style="fill:url(#MB_SilverGradient-8);stroke:none"/>
      <g class="buttonactivate" id="g4024">
        <!-- This forms the circular rotating inner area of the switch. -->
        <circle cx="0" cy="0" d="M 35,0 C 35,19.329966 19.329966,35 0,35 -19.329966,35 -35,19.329966 -35,0 c 0,-19.329966 15.670034,-35 35,-35 19.329966,0 35,15.670034 35,35 z" id="circle4026" r="35" sodipodi:cx="0" sodipodi:cy="0" sodipodi:rx="35" sodipodi:ry="35" style="fill:#808080;stroke:#000000;stroke-width:5px"/>
        <!-- This is the rotating actuator. -->
        <rect height="66" id="rect4028" rx="5" style="fill:#000000;stroke-width:2px" width="16" x="-8" y="-33"/>
        <polygon id="polygon4030" points="0,-30 0,-30 -5,-20 5,-20 " style="fill:#ffffff"/>
      </g>
    </g>
    <g class="buttonactivate" id="PPMaskPB" inkscape:label="#g4153" mblogic:editcount="1" mblogic:inputfunc="[{&quot;event&quot;: &quot;onclick&quot;, &quot;func&quot;: &quot;MBHMIProtocol.WriteToggleImmediate(\&quot;%(inputtag)s\&quot;, \&quot;%(inputtag)s\&quot;);&quot;}]" mblogic:menu="[{&quot;param&quot;: &quot;inputtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Input Tag&quot;, &quot;value&quot;: &quot;ButtonDisPB&quot;}]" mblogic:outputfunc="" mblogic:widgetname="Toggle Push Button 1" mblogic:widgettype="pb_toggle" onclick="MBHMIProtocol.WriteToggleImmediate(&quot;ButtonDisPB&quot;, &quot;ButtonDisPB&quot;);" transform="translate(748.79034,299.99243)">
      <rect height="80" id="rect4155" rx="15" style="fill:#808080;stroke:none;filter:url(#MB_DropShadowFilter-30)" width="80" x="7" y="7"/>
      <rect height="80" id="rect4157" rx="15" style="fill:url(#MB_RedGradient-6)" width="80" x="0" y="0"/>
      <text font-size="24" id="text4159" sodipodi:linespacing="125%" style="font-size:24px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;writing-mode:lr-tb;text-anchor:middle;stroke-width:2px;font-family:Sans;-inkscape-font-specification:Sans" x="40" y="50">
        <tspan id="tspan4372" sodipodi:role="line" x="40" y="50">PB-DIS</tspan>
      </text>
    </g>
    <g id="PPMaskPL" inkscape:label="#g4219" mblogic:editcount="1" mblogic:inputfunc="[]" mblogic:menu="[{&quot;value&quot;: &quot;ButtonDisPB&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Output Tag&quot;, &quot;param&quot;: &quot;outputtag&quot;}, {&quot;value&quot;: &quot;black&quot;, &quot;type&quot;: &quot;colour&quot;, &quot;name&quot;: &quot;Init Colour&quot;, &quot;param&quot;: &quot;initcolour&quot;}, {&quot;value&quot;: &quot;green&quot;, &quot;type&quot;: &quot;colour&quot;, &quot;name&quot;: &quot;Off Colour&quot;, &quot;param&quot;: &quot;offcolour&quot;}, {&quot;value&quot;: &quot;orange&quot;, &quot;type&quot;: &quot;colour&quot;, &quot;name&quot;: &quot;On Colour&quot;, &quot;param&quot;: &quot;oncolour&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToDisplayList(new MB_PilotLight(document, &quot;%(widgetid)s&quot;, &quot;%(initcolour)s&quot;, &quot;%(offcolour)s&quot;, &quot;%(oncolour)s&quot;), &quot;%(outputtag)s&quot;, &quot;read&quot;);" mblogic:widgetname="Pilot Light" mblogic:widgettype="pilot_light" transform="translate(629.78017,295.42875)">
      <!-- This is a decorative nut. -->
      <polygon id="polygon4221" points="0,63 27,90 63,90 90,63 90,27 63,0 63,0 27,0 0,27 " style="fill:#808080;stroke:none;filter:url(#MB_DropShadowFilter-66)" transform="translate(5,5)"/>
      <polygon id="polygon4223" points="0,63 27,90 63,90 90,63 90,27 63,0 63,0 27,0 0,27 " style="fill:url(#MB_SilverGradient-90);stroke:none"/>
      <!-- This is the part which changes colour. -->
      <circle cx="45" cy="45" d="M 80,45 C 80,64.329966 64.329966,80 45,80 25.670034,80 10,64.329966 10,45 10,25.670034 25.670034,10 45,10 64.329966,10 80,25.670034 80,45 z" id="circle4225" r="35" sodipodi:cx="45" sodipodi:cy="45" sodipodi:rx="35" sodipodi:ry="35" style="stroke:#000000;stroke-width:5px"/>
    </g>
    <g id="g4264" transform="translate(760.18662,39.858957)">
      <polygon id="polygon4249" points="0,80 80,80 65,40 15,40 " style="fill:url(#linearGradient4306)"/>
      <circle cx="40" cy="40" d="M 65,40 C 65,53.807119 53.807119,65 40,65 26.192881,65 15,53.807119 15,40 15,26.192881 26.192881,15 40,15 53.807119,15 65,26.192881 65,40 z" id="circle4251" r="25" sodipodi:cx="40" sodipodi:cy="40" sodipodi:rx="25" sodipodi:ry="25" style="fill:#ffff00"/>
      <circle cx="40" cy="40" d="m 42,40 c 0,1.104569 -0.895431,2 -2,2 -1.104569,0 -2,-0.895431 -2,-2 0,-1.104569 0.895431,-2 2,-2 1.104569,0 2,0.895431 2,2 z" id="circle4253" r="2" sodipodi:cx="40" sodipodi:cy="40" sodipodi:rx="2" sodipodi:ry="2" style="fill:#000000"/>
      <circle cx="40" cy="40" d="M 65,40 C 65,53.807119 53.807119,65 40,65 26.192881,65 15,53.807119 15,40 15,26.192881 26.192881,15 40,15 53.807119,15 65,26.192881 65,40 z" id="circle4255" r="25" sodipodi:cx="40" sodipodi:cy="40" sodipodi:rx="25" sodipodi:ry="25" style="fill:none;stroke:url(#linearGradient4308);stroke-width:10"/>
    </g>
    <g id="PPAnimPump" inkscape:label="#g4272" mblogic:editcount="1" mblogic:inputfunc="[]" mblogic:menu="[{&quot;value&quot;: &quot;PumpAni1&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Output Tag&quot;, &quot;param&quot;: &quot;outputtag&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToDisplayList(new MB_PumpRotateAnimated(document, &quot;%(widgetid)s&quot;), &quot;%(outputtag)s&quot;, &quot;read&quot;);" mblogic:widgetname="Animated Pump Rotor" mblogic:widgettype="pump_rotor_animated" transform="translate(800.34543,79.776747)">
      <!-- This is the rotating view. -->
      <polygon id="polygon4274" points="22,0 15,15 0,22 0,-22 -15,-15 -22,0 -22,0 " style="fill:#008080">
        <animateTransform additive="replace" attributeName="transform" attributeType="XML" dur="5s" fill="remove" from="0" id="animateTransform4276" repeatCount="indefinite" to="360" type="rotate"/>
      </polygon>
    </g>
    <g id="PPMaskMask" inkscape:label="#g4294" inkscape:transform-center-x="91.479821" inkscape:transform-center-y="-7.6233184" mblogic:editcount="1" mblogic:inputfunc="[]" mblogic:menu="[{&quot;value&quot;: &quot;ButtonDisSS&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Output Tag&quot;, &quot;param&quot;: &quot;outputtag&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToDisplayList(new MB_GraphicShowHide(document, &quot;%(widgetid)s&quot;), &quot;%(outputtag)s&quot;, &quot;read&quot;);" mblogic:widgetname="Push Button Mask" mblogic:widgettype="pb_mask" transform="translate(742.27238,294.37744)">
      <rect height="100" id="rect4296" rx="15" style="opacity:0.75;fill:#808080;filter:url(#MB_DropShadowFilter-31)" width="100" x="0" y="0"/>
    </g>
    <g id="PPAnimPL" inkscape:label="#g4322" mblogic:editcount="1" mblogic:inputfunc="[]" mblogic:menu="[{&quot;value&quot;: &quot;PLAN1&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Output Tag&quot;, &quot;param&quot;: &quot;outputtag&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToDisplayList(new MB_PilotLightFlashTransform(document, &quot;%(widgetid)s&quot;), &quot;%(outputtag)s&quot;, &quot;read&quot;);" mblogic:widgetname="Pilot Light Animated" mblogic:widgettype="pl_animated" transform="translate(653.16356,30.023697)">
      <!-- This is a decorative nut. -->
      <polygon id="polygon4324" points="0,63 27,90 63,90 90,63 90,27 63,0 63,0 27,0 0,27 " style="fill:#808080;stroke:none;filter:url(#MB_DropShadowFilter-71)" transform="translate(5,5)"/>
      <polygon id="polygon4326" points="0,63 27,90 63,90 90,63 90,27 63,0 63,0 27,0 0,27 " style="fill:url(#MB_SilverGradient-98);stroke:none"/>
      <!-- This is the static background. -->
      <rect height="60" id="rect4328" rx="15" style="fill:#90ee90;stroke:#000000;stroke-width:5px" width="60" x="15" y="15"/>
      <!-- This is the part which changes colour. -->
      <g id="g4330" transform="translate(45,45)">
        <rect height="60" id="rect4332" rx="15" style="fill:#006400;stroke:#000000;stroke-width:5px" width="60" x="-30" y="-30">
          <animateTransform additive="replace" attributeName="transform" attributeType="XML" dur="1s" fill="remove" from="0" id="animateTransform4334" repeatCount="indefinite" to="1" type="scale"/>
        </rect>
      </g>
    </g>
    <g id="PickAndPlace" inkscape:label="#g3843" mblogic:editcount="1" mblogic:inputfunc="[]" mblogic:menu="[{&quot;param&quot;: &quot;vertaxis&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Vertical Axis Tag&quot;, &quot;value&quot;: &quot;PPVert&quot;}, {&quot;param&quot;: &quot;horizaxis&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Horizontal Axis Tag&quot;, &quot;value&quot;: &quot;PPHorz&quot;}, {&quot;param&quot;: &quot;gripper&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Gripper Axis Tag&quot;, &quot;value&quot;: &quot;PPGrip&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToDisplayList(new MB_SlideDisplay(document, &quot;Demo_PPVert&quot;, 0, 0, 0, 100), &quot;%(vertaxis)s&quot;, &quot;read&quot;);  MBHMIProtocol.AddToDisplayList(new MB_SlideDisplay(document, &quot;Demo_PPHorz&quot;, 0, 0, 200, 0), &quot;%(horizaxis)s&quot;, &quot;read&quot;);  MBHMIProtocol.AddToDisplayList(new MB_SlideDisplay(document, &quot;Demo_PPGripL&quot;, -5, 0, 5, 0), &quot;%(gripper)s&quot;, &quot;read&quot;);  MBHMIProtocol.AddToDisplayList(new MB_SlideDisplay(document, &quot;Demo_PPGripR&quot;, 5, 0, -5, 0), &quot;%(gripper)s&quot;, &quot;read&quot;);" mblogic:widgetname="Pick and Place" mblogic:widgettype="custom_graphic" transform="translate(18.94619,99.573987)">
      <!-- Fixed section. -->
      <g id="g3845" transform="translate(320,0)">
        <!-- Vertical rods. -->
        <rect height="200" id="rect3847" rx="0" style="fill:url(#linearGradient3897);stroke:#000000" width="10" x="20" y="10"/>
        <rect height="200" id="rect3849" rx="0" style="fill:url(#linearGradient3899);stroke:#000000" width="10" x="60" y="10"/>
        <!-- Base. -->
        <rect height="20" id="rect3851" rx="2" style="fill:url(#linearGradient3901);stroke:#000000" width="90" x="0" y="210"/>
        <!-- Top cap. -->
        <rect height="10" id="rect3853" rx="2" style="fill:url(#linearGradient3903);stroke:#000000" width="90" x="0" y="0"/>
      </g>
      <!-- Moving vertical axis. -->
      <g id="Demo_PPVert">
        <!-- Horizontal axis. -->
        <g id="Demo_PPHorz">
          <!-- Horizontal rods. -->
          <rect height="10" id="rect3857" rx="0" style="fill:url(#linearGradient3905);stroke:#000000" width="400" x="40" y="30"/>
          <rect height="10" id="rect3859" rx="0" style="fill:url(#linearGradient3907);stroke:#000000" width="400" x="40" y="70"/>
          <!-- End caps. -->
          <rect height="70" id="rect3861" rx="2" style="fill:url(#linearGradient3909);stroke:#000000" width="10" x="440" y="20"/>
          <rect height="70" id="rect3863" rx="2" style="fill:url(#linearGradient3911);stroke:#000000" width="10" x="40" y="20"/>
          <rect height="75" id="rect3865" rx="2" style="fill:url(#linearGradient3913);stroke:#000000" width="30" x="10" y="25"/>
          <!-- Left Gripper. -->
          <polygon id="Demo_PPGripL" points="0,100 20,100 20,110 10,110 10,130 0,130 0,130 " style="fill:url(#linearGradient3915);stroke:#000000"/>
          <!-- Right Gripper. -->
          <polygon id="Demo_PPGripR" points="50,100 30,100 30,110 40,110 40,130 50,130 50,130 " style="fill:url(#linearGradient3917);stroke:#000000"/>
        </g>
        <!-- Block. -->
        <rect height="70" id="rect3869" rx="2" style="fill:url(#linearGradient3919);stroke:#000000" width="90" x="320" y="20"/>
      </g>
    </g>
    <text id="text3921" sodipodi:linespacing="125%" style="font-size:31.71978188px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Bitstream Vera Sans" transform="scale(1.1126583,0.89874853)" x="24.395227" xml:space="preserve" y="442.50015"><tspan id="tspan3923" sodipodi:role="line" x="24.395227" y="442.50015">Pick and Place</tspan></text>
    <text id="text3925" sodipodi:linespacing="125%" style="font-size:25.37821388px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Bitstream Vera Sans" transform="scale(1.0060854,0.99395142)" x="708.5813" xml:space="preserve" y="28.182373"><tspan id="tspan3927" sodipodi:role="line" x="708.5813" y="28.182373">Animation</tspan></text>
    <text id="text3929" sodipodi:linespacing="125%" style="font-size:20.69269753px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Bitstream Vera Sans" transform="scale(0.87744086,1.1396779)" x="588.89191" xml:space="preserve" y="453.81073"><tspan id="tspan3931" sodipodi:role="line" x="588.89191" y="453.81073">Push Button Mask</tspan></text>
  </g>
  <g id="LayerChart" inkscape:groupmode="layer" inkscape:label="LayerChart" style="display:none">
    <rect height="360" id="rect3845" style="fill:url(#linearGradient4807);fill-opacity:1;stroke:#000000;stroke-width:3;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" width="620" x="60" y="130"/>
    <path d="m 100,130 0,360" id="path4621" inkscape:connector-curvature="0" style="fill:none;stroke:#000000;stroke-width:2.5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:5, 10;stroke-dashoffset:0"/>
    <path d="m 140,130 0,360" id="path4621-7" inkscape:connector-curvature="0" style="fill:none;stroke:#000000;stroke-width:2.5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:5, 10;stroke-dashoffset:0;display:inline"/>
    <path d="m 180,130 0,360" id="path4621-1" inkscape:connector-curvature="0" style="fill:none;stroke:#000000;stroke-width:2.5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:5, 10;stroke-dashoffset:0;display:inline"/>
    <path d="m 220,130 0,360" id="path4621-6" inkscape:connector-curvature="0" style="fill:none;stroke:#000000;stroke-width:2.5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:5, 10;stroke-dashoffset:0;display:inline"/>
    <path d="m 260,130 0,360" id="path4621-2" inkscape:connector-curvature="0" style="fill:none;stroke:#000000;stroke-width:2.5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:5, 10;stroke-dashoffset:0;display:inline"/>
    <path d="m 300,130 0,360" id="path4621-0" inkscape:connector-curvature="0" style="fill:none;stroke:#000000;stroke-width:2.5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:5, 10;stroke-dashoffset:0;display:inline"/>
    <path d="m 340,130 0,360" id="path4621-4" inkscape:connector-curvature="0" style="fill:none;stroke:#000000;stroke-width:2.5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:5, 10;stroke-dashoffset:0;display:inline"/>
    <path d="m 380,130 0,360" id="path4621-8" inkscape:connector-curvature="0" style="fill:none;stroke:#000000;stroke-width:2.5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:5, 10;stroke-dashoffset:0;display:inline"/>
    <path d="m 420,130 0,360" id="path4621-22" inkscape:connector-curvature="0" style="fill:none;stroke:#000000;stroke-width:2.5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:5, 10;stroke-dashoffset:0;display:inline"/>
    <path d="m 460,130 0,360" id="path4621-3" inkscape:connector-curvature="0" style="fill:none;stroke:#000000;stroke-width:2.5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:5, 10;stroke-dashoffset:0;display:inline"/>
    <path d="m 500,130 0,360" id="path4621-32" inkscape:connector-curvature="0" style="fill:none;stroke:#000000;stroke-width:2.5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:5, 10;stroke-dashoffset:0;display:inline"/>
    <path d="m 540,130 0,360" id="path4621-72" inkscape:connector-curvature="0" style="fill:none;stroke:#000000;stroke-width:2.5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:5, 10;stroke-dashoffset:0;display:inline"/>
    <path d="m 580,130 0,360" id="path4621-45" inkscape:connector-curvature="0" style="fill:none;stroke:#000000;stroke-width:2.5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:5, 10;stroke-dashoffset:0;display:inline"/>
    <path d="m 620,130 0,360" id="path4621-41" inkscape:connector-curvature="0" style="fill:none;stroke:#000000;stroke-width:2.5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:5, 10;stroke-dashoffset:0;display:inline"/>
    <path d="m 660,130 0,360" id="path4621-68" inkscape:connector-curvature="0" style="fill:none;stroke:#000000;stroke-width:2.5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:5, 10;stroke-dashoffset:0;display:inline"/>
    <path d="m 60,450 620,0" id="path4732" inkscape:connector-curvature="0" style="fill:none;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:16, 16;stroke-dashoffset:0"/>
    <path d="m 60,370 620,0" id="path4732-6" inkscape:connector-curvature="0" style="fill:none;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:16, 16;stroke-dashoffset:0;display:inline"/>
    <path d="m 60,330 620,0" id="path4732-60" inkscape:connector-curvature="0" style="fill:none;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:16, 16;stroke-dashoffset:0;display:inline"/>
    <path d="m 60,290 620,0" id="path4732-0" inkscape:connector-curvature="0" style="fill:none;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:16, 16;stroke-dashoffset:0;display:inline"/>
    <path d="m 60,250 620,0" id="path4732-62" inkscape:connector-curvature="0" style="fill:none;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:16, 16;stroke-dashoffset:0;display:inline"/>
    <path d="m 60,210 620,0" id="path4732-65" inkscape:connector-curvature="0" style="fill:none;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:16, 16;stroke-dashoffset:0;display:inline"/>
    <path d="m 60,170 620,0" id="path4732-2" inkscape:connector-curvature="0" style="fill:none;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:16, 16;stroke-dashoffset:0;display:inline"/>
    <path d="m 60,410 620,0" id="path4732-4" inkscape:connector-curvature="0" style="fill:none;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:16, 16;stroke-dashoffset:0;display:inline"/>
    <g id="Chart1" inkscape:label="#g4811" mblogic:editcount="1" mblogic:inputfunc="[]" mblogic:menu="[{&quot;param&quot;: &quot;outputtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Output Tag&quot;, &quot;value&quot;: &quot;StripChart1&quot;}, {&quot;param&quot;: &quot;maxpoints&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;Max Points&quot;, &quot;value&quot;: &quot;60&quot;}, {&quot;param&quot;: &quot;xincr&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;X Increment&quot;, &quot;value&quot;: &quot;10&quot;}, {&quot;param&quot;: &quot;yincr&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;Y Scale&quot;, &quot;value&quot;: &quot;1&quot;}, {&quot;param&quot;: &quot;timeinterval&quot;, &quot;type&quot;: &quot;float&quot;, &quot;name&quot;: &quot;Time Interval&quot;, &quot;value&quot;: &quot;1.0&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToDisplayList(new MB_StripChart(document, &quot;%(widgetid)s&quot;, %(maxpoints)s, %(xincr)s, %(yincr)s, %(timeinterval)s), &quot;%(outputtag)s&quot;, &quot;read&quot;);" mblogic:widgetname="Strip Chart" mblogic:widgettype="strip_chart" transform="translate(60,210.73991)">
      <polyline id="polyline4813" points="0,0 20,0 40,100 60,0 80,40 100,10 120,85 140,100 160,0 200,0" style="fill:none;stroke:#ff0000;stroke-width:5"/>
    </g>
    <g id="Chart2" inkscape:label="#g4825" mblogic:editcount="1" mblogic:inputfunc="[]" mblogic:menu="[{&quot;param&quot;: &quot;outputtag&quot;, &quot;type&quot;: &quot;tag&quot;, &quot;name&quot;: &quot;Output Tag&quot;, &quot;value&quot;: &quot;StripChart2&quot;}, {&quot;param&quot;: &quot;maxpoints&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;Max Points&quot;, &quot;value&quot;: &quot;60&quot;}, {&quot;param&quot;: &quot;xincr&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;X Increment&quot;, &quot;value&quot;: &quot;10&quot;}, {&quot;param&quot;: &quot;yincr&quot;, &quot;type&quot;: &quot;int&quot;, &quot;name&quot;: &quot;Y Scale&quot;, &quot;value&quot;: &quot;1&quot;}, {&quot;param&quot;: &quot;timeinterval&quot;, &quot;type&quot;: &quot;float&quot;, &quot;name&quot;: &quot;Time Interval&quot;, &quot;value&quot;: &quot;1.0&quot;}]" mblogic:outputfunc="MBHMIProtocol.AddToDisplayList(new MB_StripChart(document, &quot;%(widgetid)s&quot;, %(maxpoints)s, %(xincr)s, %(yincr)s, %(timeinterval)s), &quot;%(outputtag)s&quot;, &quot;read&quot;);" mblogic:widgetname="Strip Chart" mblogic:widgettype="strip_chart" transform="translate(60,370)">
      <polyline id="polyline4827" points="0,0 20,0 40,100 60,0 80,40 100,10 120,85 140,100 160,0 200,0" style="fill:none;stroke:#ffff00;stroke-width:5"/>
    </g>
  </g>
  <mblogicdata id="mblogicdata434">
    <layerlist id="layerlist436">
      
      
      
      
    <param>LayerTank</param><param>LayerData</param><param>LayerPandP</param><param>LayerChart</param></layerlist>
    <alarmzonelist id="alarmzonelist446">
      
      
      
    <param>zone1</param><param>zone2</param><param>zone3</param></alarmzonelist>
    <eventzonelist id="eventzonelist454">
      
      
      
    <param>zone1</param><param>zone2</param><param>zone3</param></eventzonelist>
  </mblogicdata>
</svg></div>

	<!-- End of the main page. -->

	<!-- ################################################################## -->


	<!-- This is for alarms. Do not modify this section. -->

	<div id="MBT_AlarmsScreen">
	
		<h2>Active Alarms:</h2> 
	
		<p>  
		<svg height="75" width="250px" xmlns="http://www.w3.org/2000/svg" xmlns:html="http://www.w3.org/1999/xhtml">
	
	
		<defs>
			<!-- The following filter is used to add a drop shadown. -->
			<filter id="MBT_AlarmDropShadowFilter">
				<feGaussianBlur stdDeviation="2">
				</feGaussianBlur>
			</filter>
	
				<!-- For violet buttons. -->
			<linearGradient id="MBT_AlarmGradient" x1="1" x2="0" y1="1" y2="0">
				<stop offset="50%" stop-color="violet"/>
				<stop offset="100%" stop-color="white"/>
			</linearGradient>
	
		</defs>
	
	
				<!-- Push button to acknowledge alarms. -->
		<g class="buttonactivate" fill="url(#MBT_AlarmGradient)" onclick="MBHMIProtocol.AddAlarmAck();" transform="translate(100, 35)">
	
 			<!-- This is the actual button. -->
			<!-- Rectangular push button. -->
			<g id="MBT_AlarmPB">
					<!-- This rectangle is used for the drop shadown. -->
					<rect fill="grey" filter="url(#MBT_AlarmDropShadowFilter)" height="50" rx="15" stroke="none" stroke-width="0px" width="160" x="-73" y="-18"/>
			
					<!-- This is the actual button. -->
					<rect height="50" rx="15" width="160" x="-80" y="-25"/>
			</g>
	
			<!-- This is the text label. -->
			<text font-size="20" stroke-width="2px" x="-65" y="8">Acknowledge</text> 
	
		</g>
			
	
		</svg>
		</p> 
	
		<p>
		 	<!-- This is the table used to display the alarms. -->
			<table border="5" cellpadding="5" id="MBT_AlarmDisplay">
			<tr> 
				<td><b>Alarm:</b></td>
				<td><b>Alarm State:</b></td>
				<td><b>Time:</b></td> 
				<td><b>Time OK:</b></td> 
				<td><b>Count:</b></td>
			</tr>
			</table>
		</p>
	
	
		<h2>Alarm History:</h2>
	
		<!-- This is the table used to display the alarm history. -->
		<p>
			<table border="5" cellpadding="5" id="MBT_AlarmHistoryDisplay">
			<tr>
				<td><b>Alarm:</b></td>
				<td><b>Alarm Time:</b></td> 
				<td><b>Time OK:</b></td> 
				<td><b>Ack By:</b></td> 
			</tr>
			</table>
		</p>
	
	</div>
	
	<!-- End of the alarms page. -->

	<!-- ################################################################## -->


	<!-- This is for events. Do not modify this section. -->

	<div id="MBT_EventsScreen">
		<h2>Events:</h2>

		<p>
		<!-- This is the table used to display the events. -->
		<table border="5" cellpadding="5" id="MBT_EventDisplay">
		<tr>
			<td><b>Event #:</b></td> 
			<td><b>Date:</b></td> 
			<td><b>Event:</b></td> 
			<td><b>State:</b></td>
		</tr>
		</table>
		</p>
	</div>


	<!-- End of the events page. -->

	<!-- ################################################################## -->

	<!-- This is for system errors. Do not modify this section. -->

	<div id="MBT_SystemStatusScreen">

		<h2>Communications Errors:</h2>
		<!-- This is the table used to display the communcations errors. -->
		<p><table border="5" cellpadding="5" id="MBT_ErrorDisplay">
		<tr>
			<td><b>Date:</b></td> 
			<td><b>Tag:</b></td> 
			<td><b>Error:</b></td>
		</tr>
		</table>
		</p>


		<h2>Communications Status:</h2>
		<!-- This is the table used to display the coummunications status. -->
		<p><table border="5" cellpadding="5" id="MBT_StatusDisplay">
		<tr>
			<td><b>Date:</b></td> 
			<td><b>Status Code:</b></td> 
			<td><b>Status:</b></td>
		</tr>
		</table>
		</p>

	</div>

	<!-- End of the system status page. -->

	<!-- ################################################################## -->


	<!-- This is for application specific help. -->

	<div id="MBT_HelpScreen">

		<h1>Help:</h1>

		<h2>Main</h2>

		<p>This program demonstrates a number of web based HMI features. This 
		help 	screen explains what these feature are and how they may be used. 
		For detailed information including how to make your own HMI screens, 
		see the complete help system which is available on-line by following 
		the directions provided in the installation instructions. 
		</p>

		<h2>Main Tank Demo Screen</h2>

		<p>The first screen visible when starting the system demonstrates several
		different features. These are:
		</p>


		<p><object data="helpmain.png" width="530" alt="tank screen"/>
		</p>


		<ul>
			<li>The overall page layout.</li>
			<li>The main menu.</li>
			<li>The "graphical" menu.</li>
			<li>Displaying system status.</li>
			<li>A "tank" demo.</li>
			<li>Push buttons and pilot lights, as well as triggering alarms.</li>
		</ul>


		<h3>Main Menu</h3>

		<p><object data="helphtml.png" width="435" alt="html menu"/>
		</p>

		<p>The main menu is used to select different HMI "screens". A "screen"
		is a collection of HMI elements that are visible together. They are
		referred to as "screens" here rather than "web pages" because the entire
		HMI web application is technically a single page. The menu is simply used
		to hide and reveal different parts of it as required.  
		</p>

		<p>This menu was created using HTML, and so is a text based menu. HTML
		menus are very simple to created and can be oriented and styled in
		different ways. 
		</p>

		<p>It is possible to have sub-menus as well as a main menu (as will be
		shown later). The main menu however provides access to the major 
		divisions of the HMI. To go do a new screen, click on a menu item.
		</p>

		<p>The following items would normally be found in most HMI applications:
		</p>

		<ul>
			<li>Main - Your own main control screen would normally go here.
				Submenus would provide access to additional related screens 
				as required. For example, there may be several screens which
				relate to control and monitoring of different stations in
				a machine.</li>
			<li>Alarms - This shows "alarms" (fault messages) related to the 
				operation of the machine or process. This screen would also 
				normally be used as is. </li>
			<li>Events - This shows "events" (non-critical operator notifications).
				This screen would normally be used as is.</li>
			<li>Status - This shows error messages related to the HMI itself.
			This screen would also normally be used as is. </li>
			<li>Help - This screen. You would normally put your own machine
				related help here. </li>
		</ul>


		<h3>Graphical Menu</h3>

		<p><object data="helpsvgmenu.png" width="475" alt="svg menu"/>
		</p>

		<p>The "graphical" menu is normally customised for each different 
		application. It is referred to as a "graphical", because unlike the
		HTML based main menu, this one uses SVG (Scalable Vector Graphics) to
		provide a high quality graphical image for each menu item. 
		</p>

		<p>The examples here use a simple array of plain buttons. However each 
		menu item can be of any size, colour, or shape, and can be in any 
		orientation or location. The menu items in this example are for the
		following screens:
		</p>

		<ul>
			<li>Tank - This is the main tank demo which is the default screen on
				start up.</li>
			<li>Data - This screen demonstrates extended data types, as well as
				a numeric entry keypad.</li>
			<li>Pick and Place - This demonstrates custom graphics using a simple
				graphic of a pick and place as an example. It also shows the use
				of 2 position selector switches.</li>
			<li>Chart - This screen demonstrates a simple strip chart.</li>
		</ul>

		<h3>General Status</h3>


		<p><object data="helpaux.png" width="300"	alt="general status"/>
		</p>

		<p>The general status area demonstrates several different items. On the
		left are three pilot lights labelled "Status", "Watchdog", and "Alarms".
		These are labelled pilot lights. "Status" and "Watchdog" are green when
		OK, and red when an error is present. The "Alarms" pilot light mirrors
		the state of the alarms table (it turns white when no alarms are 
		present).
		</p>

		<p>To the right is a numeric display in decorative bezel, displaying a 
		continuously updating integer. This number is the message id, which is 
		used to track browser to server communications. 
		</p>

		<p>Below that is a text display with a decorative
		bezel displaying the "server id", which is a string sent by the
		HMI server to identify it. 
		</p>


		<h3>Tank Demo</h3>


		<p><object data="helptanks.png" width="400" alt="tank screen"/>
		</p>


		<p>The tank demo is the largest demonstration on this screen. It consists
		of two tanks where liquid is pumped alternately from one to the other. The
		demo is controlled by the 3 position selector switch to the right.
		</p>

		<p>When the selector switch is set to "FWD", liquid is pumped from the
		left hand tank to the right hand tank. While pumping is occurring, the
		rotor of the pump (below the tanks) can be seen to rotate. In addition,
		the pipes will show a colour change. 
		</p>

		<p>Both tanks are instrumented with gauges, numeric displays, and 
		cut-away columns showing the relative "liquid" levels. The left hand
		tank uses a dial gauge with a rotating pointer. The right hand tank uses
		a vertical column guage. 
		</p>

		<p>To the right of the tanks are the controls. The 3 position selector 
		switch can be activated by clicking directly on the labels. Clicking on
		the switch itself will always reset it to the "off" position. When a tank
		cycle has completed, the switch will automatically turn itself off.
		</p>

		<p>Above the selector switch is a numeric display. This is similar to the
		one used for server message id (see above), but has been resized to be 
		taller but with fewer digits. This display indicates pump speed. 
		</p>

		<p>Below the selector switch is another numeric display, but which has 
		the added feature of two push buttons which can alter the pump speed.
		</p>

		<h3>Push Buttons</h3>

		<p><object data="helpmainpb.png" width="250" alt="push buttons"/>
		</p>

		<p>Finally, there is a set of push buttons and pilot lights labelled "PB1"
		to "PB5". Each push button controls the adjoining pilot light ("PB5" is
		an illuminated push button). "PB1", "PB2", and "PB3" also trigger alarms 
		which may be viewed on the alarm screen.  
		</p>

		<p>"PB1" is a momentary push button. "PB2" and "PB3" are two styles of
		maintained (toggle action) push buttons. "PB4" will cause its pilot 
		light to cycle through a series of colours. An adjoining text display
		will show arbitrary text messages linked to the same push button. The 
		text messages shown here are constants which can be associated with a 
		numeric value, and do not have to be transmitted from the server (or 
		in the control program). "PB5" is a simple toggle action illuminated 
		push button.
		</p>


		<hr></hr>

		<h2>Data Screen</h2>


		<p><object data="helpdata.png" width="475" alt="data screen"/>
		</p>


		<p>This screen demonstrates a numeric entry keypad. Clicking on 
		individual digits will cause them to accumulate in a calculator-like
		manner (including decimal point and sign). Clicking on "STR" will write
		the current value to the data table (and be shown in the numeric
		displays to the left). Clicking on "CLR" will clear the numeric display
		to permit a new number to be entered. 
		</p>

		<p>It also demonstrates how string constants (or any constant) can be
		attached to a push button and also written to the data table.
		</p>

		<hr></hr>

		<h2>Pick &amp; Place Screen</h2>


		<p><object data="helppandp.png" width="250" alt="pick and place"/>
		</p>

		<p>The pick and place demo shows how simple custom graphics can be 
		animated. The pick and place itself is not a part of the standard
		HMI graphics library. However it was constructed out of just 10 
		rectangles and 2 polygons (the gripper jaws). 
		</p>

		<p>Clicking on the 2 position selector switches below will cause the
		pick and place to move. Clicking on the selector switch labels will 
		cause the switch to move to that position. Clicking directly on a switch
		will cause it to toggle to the opposite position (this is different from
		the behaviour of a 3 position switch). 
		</p>

		<p>The switch position directly reflects the 
		actual data table value, so the switches can be directly controlled by 
		the PLC (or other control device) program.   
		</p>


		<hr></hr>

		<p>Also present is a set of controls which demonstrate how an 
		input device (e.g. push button) can be disabled under software control.
		A "buttom mask" is placed over the push button and made to appear or
		disappear under the control of the value of a tag (controlled here by
		the selector switch).  
		</p>

		<p><object data="helpdisable1.png" width="200" alt="enable/disable demo"/>
		</p>

		<p>In the example shown above, the mask is hidden and the button is 
		enabled. Pressing the button will cause the pilot light to change colour.
		</p>

		<p><object data="helpdisable2.png" width="200" alt="enable/disable demo"/>
		</p>

		<p>In the next example, the selector switch has been toggled to make the 
		mask visible and it now covers the push button. The push button cannot be
		activated in this condition.  
		</p>

		<hr></hr>

		<p>In addition to these there are a set of controls which
		show how animations work. This consists of a selector switch to turn the
		animations on and off, an animated pilot light, and an animated pump.
		Animations may not work correctly on all browsers at this time. 
		</p>

		<p><object data="helpanimations.png" width="233" alt="animation demo"/>
		</p>

		<hr></hr>

		<h2>Strip Chart Demo Screen</h2>


		<p><object data="helpchart.png" width="250" alt="chart"/>
		</p>

		<p>This strip chart demo screen shows how simple strip charts can be 
		created. Strip charts may be any size or shape, with any number of 
		traces.
		</p>

		<hr></hr>

		<h2>Alarms Screen</h2>

		<p><object data="helpalarms.png" width="497" alt="alarm screen"/>
		</p>


		<p>Alarms are high priority operator messages which require 
		acknowledgement (i.e. fault messages).
		</p>

		<p>The alarm screen consists of two tables. The active alarms table shows
		alarms which are currently active. Repeated alarms are automatically 
		summarised. Alarms are colour coded according to whether they have been
		already acknowledged and as to whether the fault condition has already 
		corrected itself. If multiple operator stations are in use and an 
		operator acknowledges an alarm, the acknowledgement is automatically
		reflected to all other operator stations.
		</p>

		<p>Once alarms have been acknowledged and the alarm condition they
		automatically move to a historical table. 
		</p>

		<p>For the purposes of this demonstration alarms can be created using the
		PB1, PB2, and PB3 push buttons on the main tank demo screen. 
		</p>

		<p>The alarm screen is normally used as is. The alarm acknowledge button
		can be restyled or relocated. 
		</p>

		<hr></hr>

		<h2>Events Screen</h2>

		<p><object data="helpevents.png" width="400" alt="events screen"/>
		</p>

		<p>Events are low priority operator messages which do not require 
		acknowledgement. Events are displayed in a historical table. 
		</p>

		<p>For the purposes of this demonstration events can be created by the 
		tank level and pump status on the main tank demo screen. 
		</p>

		<p>The event screen is normally used as is. 
		</p>

		<hr></hr>

		<h2>Error Status Screen</h2>


		<p><object data="helpstatus.png" width="499" alt="error status screen"/>
		</p>


		<p>The error status screen displays communications errors. For the 
		purpose if this demonstration, errors can be created using the "Test"
		screen. The error status screen is normally used as is.
		</p>

		<hr></hr>

		<h2>Page Styles</h2>

		<h3>Styles, Colours, and Page Layouts</h3>

		<p>Since the HMI is based entirely on standard web technologies an HMI
		page can be customised to any extent desired. In addition, all graphics
		are modifiable, and entirely new graphics can be created and will 
		function on an equal footing with those supplied with the system.
		</p>

		<h3>Multi-Language Support</h3>

		<p>Since HMI screens are just web pages, multiple languages may be 
		supported by simply translating web pages. Text constants, event messages,
		and alarm messages are stored in data files and so may be customised
		(translated) for each web page by simply importing a different data file. 
		</p>


		<hr></hr>

		<h1>Standard Help Text</h1>

		<p>The web page templates come with standard help page text explaining
		the standard features. The following shows the standard help 
		descriptions. The help text would can however be customised for each
		application to whatever degree is required.
		</p>

		<hr></hr>

		<h2>Alarms</h2>
		<p>Alarms are high priority operator messages which require 
		acknowledgement (i.e. fault messages).
		</p>

		<p>The alarm screen consists of two tables. The active alarms table shows
		alarms which are currently active. Repeated alarms are automatically 
		summarised. Alarms are colour coded according to whether they have been
		already acknowledged and as to whether the fault condition has already 
		corrected itself. If multiple operator stations are in use and an 
		operator acknowledges an alarm, the acknowledgement is automatically
		reflected to all other operator stations.
		</p>
		
		<p>Once alarms have been acknowledged and the alarm condition they
		automatically move to a historical table. 
		</p>

		<p>The active alarms table contains the following columns:</p>

		<ul>
			<li><strong>Alarm</strong> - The alarm text. This is application
				specific.</li>
			<li><strong>Alarm State</strong> - The current state of the alarms.</li>
			<li><strong>Time</strong> - The time at which the alarm condition 
				(fault) occurred.</li>
			<li><strong>Time OK</strong> - The time at which the alarm condition
				cleared.</li>
			<li><strong>Count</strong> - The number of times the alarm condition
				occurred before clearing and being acknowledged. Each time the
				alarm transitions from OK to not OK the count will increment.
				Once the alarm message has moved to the alarm history table the
				count will rest to zero.</li>
		</ul>

		<p>The alarm history table contains the following columns:
		</p>

		<ul>
			<li><strong>Alarm</strong> - This is the same as in the active alarms
				table.</li>
			<li><strong>Alarm Time</strong> - This is the same as in the active alarms
				table.</li>
			<li><strong>Time OK</strong> - This is the same as in the active alarms
				table.</li>
			<li><strong>Ack By</strong> - This is the id of the HMI client that
				acknowledged the alarm.</li>
		</ul>

		<hr></hr>

		<h2>Events</h2>
		<p>Events are low priority operator messages which do not require 
		acknowledgement. Events are displayed in a historical table. 
		</p>

		<p>The events table contains the following columns:
		</p>

		<ul>
			<li><strong>Event #</strong> - The event serial number. This is applied
				by the server and is unique for each event occurrence. </li>
			<li><strong>Date</strong> - The time at which the event occurred.</li>
			<li><strong>Event</strong> - The event text. This is application
				specific.</li>
			<li><strong>State</strong> - The current data state of the event.</li>
		</ul>

		<hr></hr>

		<h2>Status</h2>
		<p>The error status screen displays communications errors and status.
		The communications errors errors table displays error codes returned
		from the server. These error codes are associated with individual 
		commands for such things as data out of range, incompatible data types, 
		etc. Status errors are usually caused by HMI programming or server 
		configuration errors. The communications errors table contains the 
		following columns:  
		</p>

		<ul>
			<li><strong>Date</strong> - The time at which the error occurred.</li>
			<li><strong>Tag</strong> - The protocol tag associated with the 
					error.</li>
			<li><strong>Error</strong> - The descriptive error text.</li>
		</ul>

		<p>A communications status code reflects the protocol status code.
		A status message is added to the table whenever a status code other
		than "ok" is returned. The communications status table contains the 
		following columns:
		</p>

		<ul>
			<li><strong>Date</strong> - The time at which the error occurred.</li>
			<li><strong>Status Code</strong> - The protocol status code.</li>
			<li><strong>Status</strong> - The descriptive text for the status
				code.</li>
		</ul>

		<p>Communications error and status messages are only returned to the 
		client which generated the original request. When the web page is
		reloaded, the messages are cleared. 
		</p>

		<hr></hr>

		<h2>Help</h2>
		<p>This screen.
		</p>


	</div>

	<!-- End of the help page. -->

<!-- ################################################################## -->

</div>	<!-- For MBT_HTMLScreens. -->

<!-- Standard footer -->
<div id="MBT_HTMLFooter">
	<p id="MBT_ClientName_Footer">Default</p>
</div>

</div>	<!-- For MBT_HTMLContainer. -->


</body>

	<script id="MBT_ControlLists">
	<![CDATA[

	// DO THIS: Parameters required for the protocol definition must be
	// inserted here.
	// ######################################################################

	// The list of tags to poll.
	MBT_ReadList = ["PumpSpeedActual", "PL4", "PL3", "PL2", "PL1", "PLAN1", "Int32Demo", "PPGrip", "SSPPGrip", "ButtonDisSS", "Tank2Number", "PB5", "PB4", "SSPPVert", "PB1", "PumpSpeedCmd", "Float64Demo", "PB2", "PackedStrDemo", "PPVert", "PumpAni1", "ButtonDisPB", "Float32Demo", "SSAni1", "PPHorz", "Tank1Level", "SparseStrDemo", "PB3", "Tank2Level", "Tank1Number", "StripChart1", "StripChart2", "SSPPHorz"];
	// The alarm zone list to poll.
	MBT_AlarmZoneList = ["zone1", "zone2", "zone3"];
	// The event zone list to poll.
	MBT_EventZoneList = ["zone1", "zone2", "zone3"];
	
	// We also add the SVG screen list here.
	MBT_SVGScreenTable = ["LayerTank", "LayerData", "LayerPandP", "LayerChart"];

	// ######################################################################

	//]]>
	</script>

	<script>
	<![CDATA[

	var xmlns="http://www.w3.org/2000/svg";


	/* This handles communications with the server. 
	The parameters are: 
		1) The host name the web page was loaded from.
		2) The url (this can be a blank string).
		2) The port number the web page was loaded from. 
		3) The client ID string.
		4) The list of tags to poll for data.
		5) The list of alarm zones to poll for new alarms.
		6) The list of event zones to poll for new events.
		7) true = Enable asynchronous communications.
	The first two parameters use a standard Javascript feature.
	Alternatively, these can be hard coded values if the host
	and port are known in advance.
	*/
	/* DO THIS: Make sure you update the MBT_ReadList, MBT_AlarmZoneList, 
		and MBT_EventZoneList lists and the MBT_ClientID string in the 
		external data file.
	*/
	var MBHMIProtocol = new HMIClient(window.location.hostname, 
			window.location.pathname, window.location.port, 
			MBT_ClientID, MBT_ReadList, MBT_AlarmZoneList, 
			MBT_EventZoneList, true);


	//]]>
	</script>

	<script id="MBT_ControlScripts">
	<![CDATA[

	// DO THIS: Application specific code goes here.
	// ######################################################################

	MBHMIProtocol.AddToDisplayList(new MB_PilotLightStat(document, "PLSysStatus", "black",  "green", "red", "ok"), "", "stat");
	MBHMIProtocol.AddToWatchdogList(new MB_PilotLight(document, "PLSysWatchDog", "black",  "green", "red"));
	MBHMIProtocol.AddToDisplayList(new MB_PLMultiColour(document, "PLSysAlarms", "black", ["white", "green", "orange", "red"]), "", "chkalarm");
	MBHMIProtocol.AddToDisplayList(new MB_Pipe2(document, "TankPipe2", "black", "green", "red"), "PumpSpeedActual", "read");
	MBHMIProtocol.AddToDisplayList(new MB_ColumnGauge(document, "Tank1Column", "MB_Column_RedGradient", "0", "100"), "Tank1Level", "read");
	MBHMIProtocol.AddToDisplayList(new MB_DialGauge(document, "Tank1DialPointer", 30, 330, 0, 100), "Tank1Level", "read");
	MBHMIProtocol.AddToDisplayList(new MB_PumpRotate(document, "TankPumpRotor", 19), "PumpSpeedActual", "read");
	MBHMIProtocol.AddToDisplayList(new MB_NumericFloatDisplay(document, "Tank1Digits", "2"), "Tank1Number", "read");
	MBHMIProtocol.AddToDisplayList(new MB_NumericFloatDisplay(document, "Tank2Digits", "2"), "Tank2Number", "read");
	MBHMIProtocol.AddToDisplayList(new MB_3PosSSDisplay(document, "PumpSS", -60, 0, 60), "PumpSpeedCmd", "read");
	MBHMIProtocol.AddToDisplayList(new MB_NumericDisplay(document, "PumpActual"), "PumpSpeedActual", "read");
	MBHMIProtocol.AddToDisplayList(new MB_NumericDisplay(document, "PumpCmd"), "PumpSpeedCmd", "read");
	MBHMIProtocol.AddToDisplayList(new MB_PilotLight(document, "PL1", "black", "aqua", "green"), "PL1", "read");
	MBHMIProtocol.AddToDisplayList(new MB_PilotLight(document, "PL2", "black", "green", "red"), "PL2", "read");
	MBHMIProtocol.AddToDisplayList(new MB_PilotLight(document, "PL3", "black", "grey", "yellow"), "PL3", "read");
	MBHMIProtocol.AddToDisplayList(new MB_PLMultiColour(document, "PL4", "black", ["aqua", "blue", "cyan", "grey", "green", "indigo", "khaki", "lime", "maroon", "navy", "olive", "orange", "purple", "red", "silver", "tan", "teal", "violet", "white", "yellow"]), "PL4", "read");
	MBHMIProtocol.AddToDisplayList(new MB_PilotLight(document, "PB5", "black", "green", "orange"), "PB5", "read");
	MBHMIProtocol.AddToDisplayList(new MB_ColumnGauge(document, "Tank2Gauge", "MB_Column_PurpleGradient", "0", "100"), "Tank2Level", "read");
	MBHMIProtocol.AddToDisplayList(new MB_ColumnGauge(document, "Tank2Column", "MB_Column_LimeGradient", "0", "100"), "Tank2Level", "read");
	MBHMIProtocol.AddToDisplayList(new MB_NumericDisplay(document, "SysMsgID"), "", "msgid");
	MBHMIProtocol.AddToDisplayList(new MB_StringDisplay(document, "SysServerID"), "", "serverid");
	MBHMIProtocol.AddToDisplayList(new MB_TextDisplay(document, "PL4TextList", ["Lorem", "ipsum", "dolor", "sit", "amet", "consectetur", "adipisicing", "elit", "sed", "do", "eiusmod", "tempor", "incididunt", "ut", "labore", "et", "dolore", "magna", "aliqua", "enim"]), "PL4", "read");
	MBHMIProtocol.AddToDisplayList(new MB_Pipe2(document, "TankPipe1", "black", "green", "red"), "PumpSpeedActual", "read");
	MBHMIProtocol.AddToDisplayList(new MB_Pipe2(document, "TankPipe3", "black", "green", "red"), "PumpSpeedActual", "read");
	var MBT_NumberPad = new MB_NumericPad(document, "MBT_NumberPaddisplay", "10");
	MBHMIProtocol.AddToDisplayList(new MB_NumericDisplay(document, "DataInt32digits"), "Int32Demo", "read");
	MBHMIProtocol.AddToDisplayList(new MB_NumericFloatDisplay(document, "DataFloat32Digits", "2"), "Float32Demo", "read");
	MBHMIProtocol.AddToDisplayList(new MB_NumericFloatDisplay(document, "DataFloat64Digits", "3"), "Float64Demo", "read");
	MBHMIProtocol.AddToDisplayList(new MB_StringDisplay(document, "DataPckStrText"), "PackedStrDemo", "read");
	MBHMIProtocol.AddToDisplayList(new MB_StringDisplay(document, "DataSpStrText"), "SparseStrDemo", "read");
	MBHMIProtocol.AddToDisplayList(new MB_2PosSSDisplay(document, "PPppSSUpDown", -60, 60), "SSPPVert", "read");
	MBHMIProtocol.AddToDisplayList(new MB_2PosSSDisplay(document, "PPppSSOutIn", -60, 60), "SSPPHorz", "read");
	MBHMIProtocol.AddToDisplayList(new MB_2PosSSDisplay(document, "PPppSSOpenClose", -60, 60), "SSPPGrip", "read");
	MBHMIProtocol.AddToDisplayList(new MB_2PosSSDisplay(document, "PPAnimSS", -60, 60), "SSAni1", "read");
	MBHMIProtocol.AddToDisplayList(new MB_2PosSSDisplay(document, "PPMaskSS", -60, 60), "ButtonDisSS", "read");
	MBHMIProtocol.AddToDisplayList(new MB_PilotLight(document, "PPMaskPL", "black", "green", "orange"), "ButtonDisPB", "read");
	MBHMIProtocol.AddToDisplayList(new MB_PumpRotateAnimated(document, "PPAnimPump"), "PumpAni1", "read");
	MBHMIProtocol.AddToDisplayList(new MB_GraphicShowHide(document, "PPMaskMask"), "ButtonDisSS", "read");
	MBHMIProtocol.AddToDisplayList(new MB_PilotLightFlashTransform(document, "PPAnimPL"), "PLAN1", "read");
	MBHMIProtocol.AddToDisplayList(new MB_SlideDisplay(document, "Demo_PPVert", 0, 0, 0, 100), "PPVert", "read");  MBHMIProtocol.AddToDisplayList(new MB_SlideDisplay(document, "Demo_PPHorz", 0, 0, 200, 0), "PPHorz", "read");  MBHMIProtocol.AddToDisplayList(new MB_SlideDisplay(document, "Demo_PPGripL", -5, 0, 5, 0), "PPGrip", "read");  MBHMIProtocol.AddToDisplayList(new MB_SlideDisplay(document, "Demo_PPGripR", 5, 0, -5, 0), "PPGrip", "read");
	MBHMIProtocol.AddToDisplayList(new MB_StripChart(document, "Chart1", 60, 10, 1, 1.0), "StripChart1", "read");
	MBHMIProtocol.AddToDisplayList(new MB_StripChart(document, "Chart2", 60, 10, 1, 1.0), "StripChart2", "read");

	// ######################################################################


	//]]>
	</script>

	<script>
	<![CDATA[

	/* Make a list of all the screens that can be selected.
		If you modify the HTML menu you may need to update this list.
	*/
	var MBT_HTMLScreenTable = ["MBT_SVGScreen", "MBT_EventsScreen",
		"MBT_AlarmsScreen", "MBT_SystemStatusScreen", "MBT_HelpScreen"];
	// This creates an object that controls display of the screens.
	var MBT_HTMLSelect = new MB_ScreenSelect(document, MBT_HTMLScreenTable);

	/* This handles the secondary SVG screens within the main screen.
		The list of ids for the screens comes from an external data file.
	*/ 
	var MBT_SVGScreenSelect = new MB_ScreenSelect(document, MBT_SVGScreenTable);


	/* Standard HTML screens. Message texts and other configuration data 
		is read from external data files.
	*/

	// This is to display the alarms.
	var MBT_AlarmDisplay = new MB_AlarmDisplay(document, "MBT_AlarmDisplay", 
				MBT_AlarmText, MBT_AlarmStatesText, 
				"red", "orange", "green");
	// Add this to the display list.
	MBHMIProtocol.AddToDisplayList(MBT_AlarmDisplay, "alarms", "alarms");


	// This is to display the alarm history.
	var MBT_AlarmHistoryDisplay = new MB_AlarmHistoryDisplay(document, 
				"MBT_AlarmHistoryDisplay", 50, MBT_AlarmText);
	// Add this to the display list.
	MBHMIProtocol.AddToDisplayList(MBT_AlarmHistoryDisplay, 
					"alarmhistory", "alarmhistory");

	// This is to display the events.
	var MBT_EventDisplay = new MB_EventDisplay(document, 
			"MBT_EventDisplay", 50, MBT_EventText);
	// Add this to the display list.
 	MBHMIProtocol.AddToDisplayList(MBT_EventDisplay, "events", "events");


	// This is to display the communications errors.
	var MBT_ErrorDisplay = new MB_TagErrorDisplay(document, 
					"MBT_ErrorDisplay", 50, MBT_ErrorText);
	// Add this to the display list.
	MBHMIProtocol.AddToDisplayList(MBT_ErrorDisplay, "errors", "errors");


	// This is to display the communications status log.
	var MBT_StatusLogDisplay = new MB_StatusLogDisplay(document, 
					"MBT_StatusDisplay", 50, MBT_StatusText);
	// Add this to the display list.
	MBHMIProtocol.AddToDisplayList(MBT_StatusLogDisplay, "status", "status");


	// Set a page title. This uses data from a variable to set the page title
	// plus any other page elements which need to be labeled at run time. This
	// permits giving the HMI page a unique name based on the data in an 
	// external Javascript file.  
	function SetTitle(tname, msg) {
		var tref = document.getElementById(tname);
		// If there are any existing elements, remove them first.
		if (tref.hasChildNodes()) {
			while (tref.firstChild) {
				tref.removeChild(tref.firstChild);
			}
		} 
		// Add the text and insert it in the page. 
		tref.appendChild(document.createTextNode(msg));
	}

	// Set the page title.
	SetTitle("MBT_ClientName_Title", MBT_PageTitle);
	// Page heading.
	SetTitle("MBT_ClientName_Heading", MBT_PageTitle);
	// Page footer. 
	SetTitle("MBT_ClientName_Footer", MBT_PageTitle);

	// Set whether the page heading is visible. Setting it to true will
	// display the HTML "banner" heading, while setting it to false will
	// hide the heading.
	function SetHeadingVisbility(visible) {
		if (visible) {
			document.getElementById("MBT_TopHeader").style.display = "block";
		} else {
			document.getElementById("MBT_TopHeader").style.display = "none";
		}
	}
	SetHeadingVisbility(MBT_HeaderVisible);



	// Run all the operations required each scan cycle.
	function MBT_RunScanCycle() {

		// Query the server for updates.
		MBHMIProtocol.SendRequest();


		/* Call the function back again at the set interval. The time 
		interval should be set to a larger value on very slow 
		computers. The time interval between scans is set by 
		the MBT_ScanRate, which is read from an external data file.
		*/
		window.setTimeout("MBT_RunScanCycle()", MBT_ScanRate);
		
	}

	// Start up and initialisation.
	function MBT_pageinit() {

		// Call the function back again at the set interval.
		window.setTimeout("MBT_RunScanCycle()",500);
	}



	//]]>
	</script>

<!-- Copyright 2008 - 2011. Michael Griffin
This file is part of MBLogic.
MBLogic is free software: you can redistribute it and/or modify 
it under the terms of the GNU General Public License as published by 
the Free Software Foundation, either version 3 of the License, or 
(at your option) any later version. 
MBLogic is distributed in the hope that it will be useful, 
but WITHOUT ANY WARRANTY; without even the implied warranty of 
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
GNU General Public License for more details. 
You should have received a copy of the GNU General Public License 
along with MBLogic. If not, see <http://www.gnu.org/licenses/>. 
-->

</html>